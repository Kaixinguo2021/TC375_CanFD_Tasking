	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\.IfxGtm_Tom_Dtm_PwmHl.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc37x -D__CPU_TC37X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.src ..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c'

	
$TC162
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setOnTime',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setOnTime'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     2   * \file IfxGtm_Tom_Dtm_PwmHl.c
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     3   * \brief GTM DTM_PWMHL details
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     4   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     6   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     7   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     8   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    10   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    15   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    17   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    23   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    24   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    30   * language processor.
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    31   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    39   *
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    40   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    41  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    43  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    44  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    45  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    46  #include "IfxGtm_Tom_Dtm_PwmHl.h"
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    47  #include "_Utilities/Ifx_Assert.h"
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    48  #include "stddef.h"
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    49  #include "string.h"
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    50  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    51  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    52  /*------------------------Inline Function Prototypes--------------------------*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    53  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    54  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    55  /** \brief Sets the ON time
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    56   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    57   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    58  IFX_INLINE void IfxGtm_Tom_Dtm_PwmHl_setOnTime(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    59  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    60  /** \brief Inverts the active state
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    61   * \param activeState Active state
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    62   * \return State
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    63   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    64  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_Dtm_PwmHl_invertActiveState(Ifx_ActiveState activeState);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    65  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    66  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    67  /*-----------------------Private Function Prototypes--------------------------*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    68  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    69  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    70  /** \brief Sets switched to OFF
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    71   * \param driver driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    72   * \param tOn ON time
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    73   * \param shift Shift value in ticks
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    74   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    75   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    76  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    77  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    78  /** \brief Updates the x output duty cycle in center aligned and center aligned inverted modes
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    79   * \param driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    80   * \param tOn T on
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    81   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    82   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    83  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    84  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    85  /** \brief Updates the x output duty cycle in edge aligned modes (left and right aligned)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    86   * \param driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    87   * \param tOn T On
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    88   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    89   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    90  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    91  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    92  /** \brief Set the outputs to inactive
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    93   * \param driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    94   * \param tOn T On
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    95   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    96   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    97  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateOff(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    98  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	    99  /** \brief Update Pulse
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   100   * \param driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   101   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   102   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   103   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   104   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   105  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updatePulse(IfxGtm_TomDtm_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   106  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   107  /** \brief Set Pulse to OFF
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   108   * \param driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   109   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   110   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   111   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   112   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   113  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updatePulseOff(IfxGtm_TomDtm_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   114  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   115  /** \brief Update Shift Center Aligned
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   116   * \param driver GTM TOM PWM driver
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   117   * \param tOn ON time
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   118   * \param shift Shift value in ticks
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   119   * \return None
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   120   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   121  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   122  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   123  /**
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   124   */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   125  IFX_STATIC Ifx_TimerValue IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks(IfxGtm_TomDtm_PwmHl *driver);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   126  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   127  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   128  /*------------------------Private Variables/Constants-------------------------*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   129  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   130  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   131  IFX_STATIC IFX_CONST IfxGtm_Tom_Dtm_PwmHl_Mode IfxGtm_Tom_Dtm_PwmHl_modes[Ifx_Pwm_Mode_off + 1] = {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   132      {Ifx_Pwm_Mode_centerAligned,         FALSE, &IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned, &IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned, &IfxGtm_Tom_Dtm_PwmHl_updatePulse   },
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   133      {Ifx_Pwm_Mode_centerAlignedInverted, TRUE,  &IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned, &IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned, &IfxGtm_Tom_Dtm_PwmHl_updatePulse   },
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   134      {Ifx_Pwm_Mode_leftAligned,           FALSE, &IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned,   &IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_Dtm_PwmHl_updatePulse   },
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   135      {Ifx_Pwm_Mode_rightAligned,          TRUE,  &IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned,   &IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_Dtm_PwmHl_updatePulse   },
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   136      {Ifx_Pwm_Mode_off,                   FALSE, &IfxGtm_Tom_Dtm_PwmHl_updateOff,           &IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,        &IfxGtm_Tom_Dtm_PwmHl_updatePulseOff},
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   137  };
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   138  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   139  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   140  /*---------------------Inline Function Implementations------------------------*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   141  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   142  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   143  IFX_INLINE void IfxGtm_Tom_Dtm_PwmHl_setOnTime(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_Dtm_PwmHl_setOnTime
.L93:
IfxGtm_Tom_Dtm_PwmHl_setOnTime:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   144  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   145      driver->update(driver, tOn);
	ld.a	a15,[a4]24
.L826:
	ji	a15
.L439:
	
__IfxGtm_Tom_Dtm_PwmHl_setOnTime_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setOnTime,__IfxGtm_Tom_Dtm_PwmHl_setOnTime_function_end-IfxGtm_Tom_Dtm_PwmHl_setOnTime
.L219:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_init',code,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_init'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_init

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   146  }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   147  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   148  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   149  IFX_INLINE Ifx_ActiveState IfxGtm_Tom_Dtm_PwmHl_invertActiveState(Ifx_ActiveState activeState)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   150  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   151      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   152  }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   153  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   154  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   155  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   156  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   157  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   158  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   159  boolean IfxGtm_Tom_Dtm_PwmHl_init(IfxGtm_TomDtm_PwmHl *driver, const IfxGtm_Tom_Dtm_PwmHl_Config *config)
; Function IfxGtm_Tom_Dtm_PwmHl_init
.L95:
IfxGtm_Tom_Dtm_PwmHl_init:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   160  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   161      boolean            result       = TRUE;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   162      uint16             channelMask;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   163      uint16             channelsMask = 0;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   164      uint32             channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   165  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   166      IfxGtm_Tom_Timer *timer = config->timer;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   167  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   168      driver->base.mode             = Ifx_Pwm_Mode_init;
	mov	d15,#5
	mov.aa	a12,a4
.L532:
	mov.aa	a15,a5
.L530:
	mov	d9,#0
	ld.a	a2,[a15]16
.L507:
	st.b	[a12]12,d15
.L609:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   169      driver->timer                 = timer;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   170      driver->base.setMode          = 0;
	mov	d15,d9
	st.a	[a12]20,a2
.L509:
	st.b	[a12]13,d15
.L610:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   171      driver->base.inverted         = FALSE;
	st.b	[a12]16,d15
.L611:
	sub.a	a10,#16
.L504:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   172      driver->base.ccxActiveState   = config->base.ccxActiveState;
	ld.bu	d15,[a15]14
.L510:
	st.b	[a12]14,d15
.L612:
	st.a	[a10]12,a2
.L534:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   173      driver->base.coutxActiveState = config->base.coutxActiveState;
	ld.bu	d15,[a15]15
.L613:
	st.b	[a12]15,d15
.L614:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   174      driver->base.channelCount     = config->base.channelCount;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   175  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   176      driver->tom                  = &(timer->gtm->TOM[config->tom]);
	movh.a	a3,#1
.L615:
	ld.bu	d15,[a15]8
.L616:
	st.b	[a12]17,d15
.L617:
	mov	d8,#1
.L533:
	ld.bu	d15,[a15]20
.L618:
	ld.a	a2,[a2]12
.L508:
	sha	d15,d15,#11
.L619:
	addsc.a	a2,a2,d15,#0
	add.a	a3,a2
	lea	a2,[a3]-32768
.L620:
	st.a	[a12]36,a2
.L621:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   177  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   178      driver->tgc                   = (Ifx_GTM_TOM_TGC *)&driver->tom->TGC0_GLB_CTRL;
	lea	a2,[a2]48
.L622:
	st.a	[a12]40,a2
.L300:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   179  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   180      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.channelCount <= IFXGTM_TOM_PWMHL_MAX_NUM_CHANNELS);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   181  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   182      IfxGtm_Cmu_Clk clock = IfxGtm_Tom_Ch_getClockSource(timer->tom, timer->timerChannel);
	ld.a	a2,[a10]12
.L511:
	ld.a	a4,[a2]16
.L506:
	ld.b	d4,[a2]29
	call	IfxGtm_Tom_Ch_getClockSource
.L505:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   183  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   184      for (channelIndex = 0; channelIndex < config->base.channelCount; channelIndex++)
	mov	d10,d2
	mov.aa	a13,a12
.L529:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   185      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   186          IfxGtm_Tom_Ch channel;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   187  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   188          /* Initialise the Deadtime generation */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   189          driver->dtm[channelIndex] = IfxGtm_Dtm_getDtmPointer(timer->gtm, IfxGtm_Dtm_getCdtmIndex(config->tom), IfxGtm_Dtm_getDtmIndex(config->tom, config->ccx[channelIndex]->channel));
	mov	d11,#0
	lea	a14,[a12]52
.L527:
	j	.L2
.L3:
	fcall	.cocofun_4
.L512:
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L623:
	ld.b	d0,[a2]1
.L307:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)      (inlined)
	jeq	d4,#-1,.L4
.L624:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   233  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   236  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   237  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   238      uint32 shift = (8 * (uint32)channel) + 4;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   239      uint32 mask  = 3 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   241      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Function << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   242  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   244  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   245  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   246  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   247      uint32 shift = 8 * (uint32)channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   248      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   250      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Select << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   251  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   254  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   256      return IfxGtm_dtmAtom_map[atom];
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   257  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   258  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   260  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   261  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   262      IfxGtm_Dtm dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   265      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;
	ge	d5,d0,#4
.L513:
	add	d5,#4

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;      (inlined)
	j	.L5

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)      (inlined)
.L4:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   267      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   269      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   270          dtm = IfxGtm_Dtm_none;
	mov	d5,#-1

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else      (inlined)
.L5:
	ld.a	a2,[a10]12
.L514:
	ld.a	a4,[a2]12
.L314:
	call	IfxGtm_Dtm_getDtmPointer
.L315:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   190          result                   &= driver->dtm[channelIndex] != NULL_PTR;
	mov.a	a4,#0
.L625:
	ne.a	d0,a2,a4
.L626:
	and	d8,d0
	st.a	[a14],a2
.L627:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   191  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   192          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, driver->dtm[channelIndex] != NULL_PTR);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   193  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   194          if (driver->dtm[channelIndex] != NULL_PTR)
	jeq	d0,#0,.L6
.L628:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   195          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   196              /* CCX */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   197              channel                   = config->ccx[channelIndex]->channel;
	ld.a	a2,[a15]24
.L629:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   198              driver->ccx[channelIndex] = channel;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   199              channelMask               = 1 << channel;
	mov	d15,#1
.L630:
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L631:
	ld.b	d12,[a2]1
.L524:
	st.b	[a13]44,d12
.L632:
	sha	d15,d15,d12
.L633:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   200              channelsMask             |= channelMask;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   201  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   202              /* Initialize the timer part */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   203              IfxGtm_Tom_Ch_setClockSource(driver->tom, channel, clock);
	ld.a	a4,[a12]36
.L634:
	extr.u	d15,d15,#0,#16
.L635:
	mov	e4,d10,d12
.L636:
	or	d9,d15
	call	IfxGtm_Tom_Ch_setClockSource
.L637:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   204              IfxGtm_Tom_Ch_setResetSource( driver->tom, channel, IfxGtm_Tom_Ch_ResetEvent_onTrigger);
	mov	d4,d12
	ld.a	a4,[a12]36
.L515:
	mov	d5,#1
	call	IfxGtm_Tom_Ch_setResetSource
.L516:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   205              IfxGtm_Tom_Ch_setSignalLevel(driver->tom, channel, config->base.ccxActiveState);
	ld.a	a4,[a12]36
.L638:
	ld.bu	d5,[a15]14
	mov	d4,d12
	call	IfxGtm_Tom_Ch_setSignalLevel
.L639:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   206              IfxGtm_Tom_Ch_setTriggerOutput(driver->tom, channel, IfxGtm_Tom_Ch_OutputTrigger_forward);
	mov	d4,d12
	ld.a	a4,[a12]36
.L517:
	mov	d5,#0
	call	IfxGtm_Tom_Ch_setTriggerOutput
.L518:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   207  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   208              /* Initialize the DTM part */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   209              IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, IfxGtm_Dtm_getDtmChannel(config->ccx[channelIndex]->channel) == IfxGtm_Dtm_getDtmChannel(config->coutx[channelIndex]->channel));
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   210  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   211              IfxGtm_Dtm_setClockSource(driver->dtm[channelIndex], config->deadTimeClock);
	ld.a	a2,[a14]
.L640:
	ld.bu	d15,[a15]32
.L319:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
	ld.w	d0,[a2]
.L641:
	insert	d15,d0,d15,#0,#2
	st.w	[a2],d15
.L320:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   212              driver->dtmChannel[channelIndex] = IfxGtm_Dtm_getDtmChannel(config->ccx[channelIndex]->channel);
	ld.a	a2,[a15]24
.L642:
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L643:
	ld.b	d15,[a2]1
.L327:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   233  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   236  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   237  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   238      uint32 shift = (8 * (uint32)channel) + 4;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   239      uint32 mask  = 3 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   241      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Function << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   242  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   244  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   245  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   246  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   247      uint32 shift = 8 * (uint32)channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   248      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   250      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Select << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   251  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   254  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   256      return IfxGtm_dtmAtom_map[atom];
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   257  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   258  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   260  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   261  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   262      IfxGtm_Dtm dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   265      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   267      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   269      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   270          dtm = IfxGtm_Dtm_none;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   271      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   272  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   273      return dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   274  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   275  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   277  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   279      IfxGtm_Dtm_Ch channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   281      if ((atomChannel >= IfxGtm_Atom_Ch_0) && (atomChannel <= IfxGtm_Atom_Ch_3))
	extr.u	d0,d15,#0,#8
.L644:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   281      if ((atomChannel >= IfxGtm_Atom_Ch_0) && (atomChannel <= IfxGtm_Atom_Ch_3))      (inlined)
	jlt.u	d0,#4,.L8
.L645:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   282      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   283          channel = (IfxGtm_Dtm_Ch)atomChannel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   284      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   285      else if ((atomChannel >= IfxGtm_Atom_Ch_4) && (atomChannel <= IfxGtm_Atom_Ch_7))
	add	d15,#-4
.L519:
	extr.u	d0,d15,#0,#8
.L646:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   285      else if ((atomChannel >= IfxGtm_Atom_Ch_4) && (atomChannel <= IfxGtm_Atom_Ch_7))      (inlined)
	jge.u	d0,#4,.L9
.L647:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   286      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   287          channel = (IfxGtm_Dtm_Ch)(atomChannel - IfxGtm_Atom_Ch_4);
	extr	d15,d15,#0,#8

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   287          channel = (IfxGtm_Dtm_Ch)(atomChannel - IfxGtm_Atom_Ch_4);      (inlined)
	j	.L10

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   285      else if ((atomChannel >= IfxGtm_Atom_Ch_4) && (atomChannel <= IfxGtm_Atom_Ch_7))      (inlined)
.L9:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   288      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   289      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   290      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   291          channel = IfxGtm_Dtm_Ch_none;
	mov	d15,#-1

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   289      else      (inlined)
.L10:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   285      else if ((atomChannel >= IfxGtm_Atom_Ch_4) && (atomChannel <= IfxGtm_Atom_Ch_7))      (inlined)
.L8:
	st.b	[a13]64,d15
.L334:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
	sh	d15,#3
.L335:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   213              IfxGtm_Dtm_setOutput0DeadTimePath(driver->dtm[channelIndex], driver->dtmChannel[channelIndex], IfxGtm_Dtm_DeadTimePath_enable);
	ld.a	a2,[a14]
.L344:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
	mov	d2,#1
.L648:
	add	d0,d15,#3
.L520:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
	ld.w	d15,[a2]8
.L649:
	mov	d3,#-1
.L650:
	sha	d1,d2,d0
.L651:
	xor	d1,d3
.L652:
	and	d15,d1
.L653:
	sh	d0,d2,d0
.L521:
	or	d15,d0
	st.w	[a2]8,d15
.L345:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   214              IfxGtm_Dtm_setOutput1DeadTimePath(driver->dtm[channelIndex], driver->dtmChannel[channelIndex], IfxGtm_Dtm_DeadTimePath_enable);
	ld.b	d15,[a13]64
.L654:
	ld.a	a2,[a14]
.L348:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
	sh	d15,#3
.L655:
	add	d0,d15,#7
.L522:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
	ld.w	d15,[a2]8
.L656:
	sha	d1,d2,d0
.L657:
	xor	d3,d1
.L658:
	and	d15,d3
.L659:
	sh	d0,d2,d0
.L523:
	or	d15,d0
	st.w	[a2]8,d15
.L349:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   215  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   216              /* Initialize the port */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   217              if (config->initPins == TRUE)
	ld.bu	d15,[a15]33
.L660:
	jne	d15,#1,.L11
.L661:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   218              {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   219                  IfxGtm_PinMap_setTomTout(config->ccx[channelIndex],
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   220                      ((config->base.ccxOutputEnabled & (0x1 << channelIndex)) != 0) ? config->base.outputMode : IfxPort_OutputMode_none, config->base.outputDriver);
	ld.bu	d15,[a15]12
.L662:
	sha	d2,d2,d11
.L663:
	and	d15,d2
.L664:
	fcall	.cocofun_6
.L665:
	ld.a	a2,[a15]24
.L666:
	ld.bu	d5,[a15]11
.L667:
	addsc.a	a2,a2,d11,#2
	ld.a	a4,[a2]
.L668:
	call	IfxGtm_PinMap_setTomTout
.L11:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   221              }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   222  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   223              /* COUTX */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   224              channel                     = config->coutx[channelIndex]->channel;
	ld.a	a2,[a15]28
.L669:
	addsc.a	a2,a2,d11,#2
	ld.a	a2,[a2]
.L670:
	ld.bu	d15,[a2]1
.L525:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   225              driver->coutx[channelIndex] = channel;
	st.b	[a13]47,d15
.L671:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   226  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   227              /* Initialize the port */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   228              if (config->initPins == TRUE)
	ld.bu	d15,[a15]33
.L526:
	jne	d15,#1,.L14
.L672:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   229              {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   230                  IfxGtm_PinMap_setTomTout(config->coutx[channelIndex],
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   231                      ((config->base.coutxOutputEnabled & (0x1 << channelIndex)) != 0) ? config->base.outputMode : IfxPort_OutputMode_none, config->base.outputDriver);
	mov	d0,#1
	ld.bu	d15,[a15]13
.L673:
	sha	d0,d0,d11
.L674:
	and	d15,d0
.L675:
	fcall	.cocofun_6
.L676:
	ld.a	a2,[a15]28
.L677:
	ld.bu	d5,[a15]11
.L678:
	addsc.a	a2,a2,d11,#2
	ld.a	a4,[a2]
.L679:
	call	IfxGtm_PinMap_setTomTout
.L14:
.L6:
	add	d11,#1
	add.a	a13,#1
	add.a	a14,#4
.L2:
	ld.bu	d15,[a15]8
.L680:
	jlt.u	d11,d15,.L3
.L681:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   232              }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   233          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   234      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   235  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   236      /* Initialize the clock value, assumes all DTM are connected to the same clock */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   237      if (config->base.channelCount > 0)
	jeq	d15,#0,.L17
.L682:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   238      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   239          driver->dtmClockFreq = IfxGtm_Dtm_getClockFrequency(timer->gtm, IfxGtm_Dtm_getCdtmIndex(config->tom), IfxGtm_Dtm_getDtmIndex(config->tom, config->ccx[0]->channel));
	fcall	.cocofun_4
.L683:
	ld.a	a2,[a2]
.L684:
	ld.b	d15,[a2]1
.L358:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)      (inlined)
	jeq	d4,#-1,.L18
.L685:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   233  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   236  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   237  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   238      uint32 shift = (8 * (uint32)channel) + 4;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   239      uint32 mask  = 3 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   241      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Function << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   242  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   244  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   245  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   246  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   247      uint32 shift = 8 * (uint32)channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   248      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   250      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Select << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   251  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   254  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   256      return IfxGtm_dtmAtom_map[atom];
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   257  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   258  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   260  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   261  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   262      IfxGtm_Dtm dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   265      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;
	ge	d5,d15,#4
.L535:
	add	d5,#4

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;      (inlined)
	j	.L19

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)      (inlined)
.L18:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   267      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   269      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   270          dtm = IfxGtm_Dtm_none;
	mov	d5,#-1

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else      (inlined)
.L19:
	ld.a	a2,[a10]12
.L536:
	ld.a	a4,[a2]12
.L360:
	call	IfxGtm_Dtm_getClockFrequency
.L361:
	st.w	[a12]68,d2
.L686:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   240          result              &= IfxGtm_Tom_Dtm_PwmHl_setDeadtime(driver, config->base.deadtime);
	mov.aa	a4,a12
.L537:
	ld.w	d4,[a15]
	call	IfxGtm_Tom_Dtm_PwmHl_setDeadtime
.L538:
	and	d8,d2
	j	.L20
.L17:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   241      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   242      else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   243      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   244          driver->dtmClockFreq = 0;
	st.w	[a12]68,d15
.L20:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   245      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   246  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   247      IfxGtm_Tom_Dtm_PwmHl_setMinPulse(driver, config->base.minPulse); // must be called after IfxGtm_TomDtm_PwmHl_setDeadtime
	ld.w	d4,[a15]4
	mov.aa	a4,a12
.L539:
	call	IfxGtm_Tom_Dtm_PwmHl_setMinPulse
.L540:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   248  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   249      IfxGtm_Tom_Tgc_enableChannelsOutput(driver->tgc, channelsMask, 0, FALSE);
	mov	d5,#0
	ld.a	a4,[a12]40
.L687:
	mov	d4,d9
.L541:
	mov	d6,d5
	call	IfxGtm_Tom_Tgc_enableChannelsOutput
.L542:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   250      IfxGtm_Tom_Tgc_enableChannels(driver->tgc, channelsMask, 0, FALSE);
	mov	d5,#0
	ld.a	a4,[a12]40
.L688:
	mov	d4,d9
.L543:
	mov	d6,d5
	call	IfxGtm_Tom_Tgc_enableChannels
.L544:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   251  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   252      IfxGtm_Tom_Dtm_PwmHl_setMode(driver, Ifx_Pwm_Mode_off);
	mov	d4,#4
	mov.aa	a4,a12
.L545:
	call	IfxGtm_Tom_Dtm_PwmHl_setMode
.L363:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   253  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   254      Ifx_TimerValue tOn[IFXGTM_TOM_DTM_PWMHL_MAX_NUM_CHANNELS] = {0};
	movh.a	a15,#@his(.2.ini)
.L531:
	lea	a15,[a15]@los(.2.ini)
.L689:
	mov.aa	a2,a10
	mov.a	a4,#2
.L21:
	ld.w	d15,[a15+]
	st.w	[a2+],d15
	loop	a4,.L21
.L690:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   255      IfxGtm_Tom_Dtm_PwmHl_updateOff(driver, tOn); /* tOn do not need defined values */
	mov.aa	a5,a10
	mov.aa	a4,a12
.L546:
	call	IfxGtm_Tom_Dtm_PwmHl_updateOff
.L547:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   256  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   257      /* Transfer the shadow registers */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   258      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, channelsMask, 0, 0, 0);
	mov	d5,#0
	ld.a	a4,[a12]40
.L691:
	mov	d4,d9
.L548:
	mov	e6,d5,d5
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L549:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   259      IfxGtm_Tom_Tgc_trigger(driver->tgc);
	ld.a	a4,[a12]40
	call	IfxGtm_Tom_Tgc_trigger
.L692:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   260      IfxGtm_Tom_Tgc_setChannelsForceUpdate(driver->tgc, 0, channelsMask, 0, 0);
	mov	d4,#0
	ld.a	a4,[a12]40
.L693:
	mov	d5,d9
.L550:
	mov	e6,d4,d4
	call	IfxGtm_Tom_Tgc_setChannelsForceUpdate
.L551:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   261  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   262      /* Enable timer to update the channels */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   263  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   264      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   265      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   266          IfxGtm_Tom_Timer_addToChannelMask(timer, driver->ccx[channelIndex]);
	mov	d15,#0
	lea	a15,[a12]44
.L528:
	j	.L22
.L23:
	ld.b	d4,[a15+]1
	ld.a	a4,[a10]12
.L552:
	call	IfxGtm_Tom_Timer_addToChannelMask
.L553:
	add	d15,#1
.L22:
	ld.bu	d0,[a12]17
.L694:
	jlt.u	d15,d0,.L23
.L695:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   267      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   268  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   269      return result;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   270  }
	mov	d2,d8
	ret
.L288:
	
__IfxGtm_Tom_Dtm_PwmHl_init_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_init,__IfxGtm_Tom_Dtm_PwmHl_init_function_end-IfxGtm_Tom_Dtm_PwmHl_init
.L154:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_6'
	.align	2
; Function .cocofun_6
.L97:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	jeq	d15,#0,.L12
.L959:
	ld.bu	d4,[a15]10
.L960:
	j	.L13
.L12:
	mov	d4,#0
.L13:
	fret
.L279:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_4'
	.align	2
; Function .cocofun_4
.L99:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	ld.bu	d15,[a15]20
.L945:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   233  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   236  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   237  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   238      uint32 shift = (8 * (uint32)channel) + 4;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   239      uint32 mask  = 3 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   241      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Function << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   242  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   244  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   245  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   246  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   247      uint32 shift = 8 * (uint32)channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   248      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   250      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Select << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   251  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   254  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   256      return IfxGtm_dtmAtom_map[atom];
	lea	a2,IfxGtm_dtmAtom_map
.L946:
	addsc.a	a2,a2,d15,#0
	ld.b	d4,[a2]0
.L947:
	ld.a	a2,[a15]24
.L948:
	fret
.L269:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_initConfig',code,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_initConfig'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_initConfig

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   271  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   272  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   273  void IfxGtm_Tom_Dtm_PwmHl_initConfig(IfxGtm_Tom_Dtm_PwmHl_Config *config)
; Function IfxGtm_Tom_Dtm_PwmHl_initConfig
.L101:
IfxGtm_Tom_Dtm_PwmHl_initConfig:	.type	func
	mov.aa	a12,a4
.L555:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   274  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   275      IfxStdIf_PwmHl_initConfig(&config->base);
	call	IfxStdIf_PwmHl_initConfig
.L554:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   276      config->timer         = NULL_PTR;
	mov.a	a15,#0
.L700:
	st.a	[a12]16,a15
.L701:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   277      config->tom          = IfxGtm_Tom_0;
	mov	d15,#0
	st.b	[a12]20,d15
.L702:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   278      config->ccx           = NULL_PTR;
	st.a	[a12]24,a15
.L703:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   279      config->coutx         = NULL_PTR;
	st.a	[a12]28,a15
.L704:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   280      config->deadTimeClock = IfxGtm_Dtm_ClockSource_systemClock;
	st.b	[a12]32,d15
.L705:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   281      config->initPins      = TRUE;
	mov	d15,#1
	st.b	[a12]33,d15
.L706:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   282  }
	ret
.L366:
	
__IfxGtm_Tom_Dtm_PwmHl_initConfig_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_initConfig,__IfxGtm_Tom_Dtm_PwmHl_initConfig_function_end-IfxGtm_Tom_Dtm_PwmHl_initConfig
.L159:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getDeadtime',code,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_getDeadtime

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   283  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   284  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   285  float32 IfxGtm_Tom_Dtm_PwmHl_getDeadtime(IfxGtm_TomDtm_PwmHl *driver)
; Function IfxGtm_Tom_Dtm_PwmHl_getDeadtime
.L103:
IfxGtm_Tom_Dtm_PwmHl_getDeadtime:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   286  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   287      return IfxStdIf_Timer_tickToS(driver->dtmClockFreq, driver->base.deadtime);
	ld.w	d15,[a4]
.L711:
	ld.w	d0,[a4]68
.L712:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
	utof	d15,d15
.L713:
	div.f	d2,d15,d0

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   288  }
	ret
.L370:
	
__IfxGtm_Tom_Dtm_PwmHl_getDeadtime_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_getDeadtime,__IfxGtm_Tom_Dtm_PwmHl_getDeadtime_function_end-IfxGtm_Tom_Dtm_PwmHl_getDeadtime
.L164:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick',code,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   289  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   290  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   291  Ifx_TickTime IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick(IfxGtm_TomDtm_PwmHl *driver)
; Function IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick
.L105:
IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   292  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   293      return driver->base.deadtime;
	ld.w	d2,[a4]
.L718:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   294  }
	mov	d3,#0
	ret
.L373:
	
__IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick,__IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick_function_end-IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick
.L169:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getMinPulse',code,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_getMinPulse

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   295  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   296  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   297  float32 IfxGtm_Tom_Dtm_PwmHl_getMinPulse(IfxGtm_TomDtm_PwmHl *driver)
; Function IfxGtm_Tom_Dtm_PwmHl_getMinPulse
.L107:
IfxGtm_Tom_Dtm_PwmHl_getMinPulse:	.type	func
	mov.aa	a15,a4
.L557:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   298  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   299      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.minPulse - IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks(driver));
	ld.w	d15,[a15]4
.L723:
	call	IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks
.L556:
	ld.a	a15,[a15]20
.L558:
	sub	d15,d2
.L724:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
	utof	d15,d15
.L725:
	ld.w	d0,[a15]6
.L726:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
	div.f	d2,d15,d0

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   300  }
	ret
.L375:
	
__IfxGtm_Tom_Dtm_PwmHl_getMinPulse_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_getMinPulse,__IfxGtm_Tom_Dtm_PwmHl_getMinPulse_function_end-IfxGtm_Tom_Dtm_PwmHl_getMinPulse
.L174:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getMode',code,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getMode'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_getMode

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   301  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   302  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   303  Ifx_Pwm_Mode IfxGtm_Tom_Dtm_PwmHl_getMode(IfxGtm_TomDtm_PwmHl *driver)
; Function IfxGtm_Tom_Dtm_PwmHl_getMode
.L109:
IfxGtm_Tom_Dtm_PwmHl_getMode:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   304  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   305      return driver->base.mode;
	ld.bu	d2,[a4]12
.L731:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   306  }
	ret
.L378:
	
__IfxGtm_Tom_Dtm_PwmHl_getMode_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_getMode,__IfxGtm_Tom_Dtm_PwmHl_getMode_function_end-IfxGtm_Tom_Dtm_PwmHl_getMode
.L179:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setDeadtime',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setDeadtime'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_setDeadtime

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   307  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   308  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   309  boolean IfxGtm_Tom_Dtm_PwmHl_setDeadtime(IfxGtm_TomDtm_PwmHl *driver, float32 deadtime)
; Function IfxGtm_Tom_Dtm_PwmHl_setDeadtime
.L111:
IfxGtm_Tom_Dtm_PwmHl_setDeadtime:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   310  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   311      uint32         channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   312      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->dtmClockFreq, deadtime);
	ld.w	d15,[a4]68
.L385:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   438  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   439  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   441  /** \brief Convert seconds to timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   442   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   443   * \param  seconds time value in seconds to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   444   * \return Return the converted time in timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   446  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   447  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   448      return seconds * clockFreq;
	mul.f	d15,d4,d15
	ftouz	d0,d15
.L386:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   313  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   314      if (value > IFXGTM_TOM_DTM_PWMHL_MAX_DEADTIME_IN_TICKS)
	mov	d15,#1023
.L736:
	jge.u	d15,d0,.L29
.L737:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   315      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   316          return FALSE;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   317      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   318      else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   319      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   320          driver->base.deadtime = value;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   321  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   322          for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   323          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   324              IfxGtm_Dtm_setDeadtime(driver->dtm[channelIndex], driver->dtmChannel[channelIndex], value, value);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   325          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   326      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   327  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   328      return TRUE;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   329  }
	mov	d2,#0
	ret
.L29:
	st.w	[a4],d0
.L738:
	mov	d1,#0
	lea	a15,[a4]52
.L559:
	lea	a2,[a4]64
.L739:
	j	.L31
.L32:
	ld.a	a5,[a15+]
.L740:
	ld.b	d15,[a2+]1
.L393:
	utof	d2,d0
.L741:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   233  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   236  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   237  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   238      uint32 shift = (8 * (uint32)channel) + 4;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   239      uint32 mask  = 3 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   241      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Function << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   242  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   244  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   245  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   246  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   247      uint32 shift = 8 * (uint32)channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   248      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   250      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Select << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   251  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   254  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   256      return IfxGtm_dtmAtom_map[atom];
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   257  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   258  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   260  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   261  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   262      IfxGtm_Dtm dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   265      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   267      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   269      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   270          dtm = IfxGtm_Dtm_none;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   271      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   272  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   273      return dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   274  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   275  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   277  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   279      IfxGtm_Dtm_Ch channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   281      if ((atomChannel >= IfxGtm_Atom_Ch_0) && (atomChannel <= IfxGtm_Atom_Ch_3))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   282      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   283          channel = (IfxGtm_Dtm_Ch)atomChannel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   284      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   285      else if ((atomChannel >= IfxGtm_Atom_Ch_4) && (atomChannel <= IfxGtm_Atom_Ch_7))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   286      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   287          channel = (IfxGtm_Dtm_Ch)(atomChannel - IfxGtm_Atom_Ch_4);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   288      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   289      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   290      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   291          channel = IfxGtm_Dtm_Ch_none;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   292      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   294      return channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   295  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   298  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   300      dtm->CH[channel].DTV.B.RELRISE = risingEdge;
	addsc.a	a5,a5,d15,#2
.L742:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   301      dtm->CH[channel].DTV.B.RELFALL = fallingEdge;
	ftouz	d2,d2
.L743:
	ld.w	d15,[+a5]20
.L394:
	add	d1,#1
.L405:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     2   * \file IfxGtm_Dtm.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     3   * \brief GTM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     4   * \ingroup IfxLld_Gtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    41   * \defgroup IfxLld_Gtm_Std_Dtm Dtm Basic Functionality
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    42   * \ingroup IfxLld_Gtm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    43   * \defgroup IfxLld_Gtm_Std_Dtm_Enumerations DTM Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    44   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    45   * \defgroup IfxLld_Gtm_Std_Dtm_Functions DTM Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    46   * \ingroup IfxLld_Gtm_Std_Dtm
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    47   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    48  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    49  #ifndef IFXGTM_DTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    50  #define IFXGTM_DTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    51  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    52  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    53  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    54  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    56  #include "_Impl/IfxGtm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    57  #include "IfxGtm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    58  #include "IfxGtm_Cmu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    59  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    60  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    61  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    62  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    64  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    65  /** \addtogroup IfxLld_Gtm_Std_Dtm_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    66   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    67  /** \brief Clock source for DTM object\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    68   * Definition in IfxGTM.DTM[i].CTRL.B.CLKSEL ( i = 0 to 35)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    69   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    70  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    71  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    72      IfxGtm_Dtm_ClockSource_systemClock,  /**< \brief SYS_CLK as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    73      IfxGtm_Dtm_ClockSource_cmuClock0,    /**< \brief CMU_CLK0 as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    74      IfxGtm_Dtm_ClockSource_cmuClock1,    /**< \brief CMU_CLK1 (if DTM is connected to ATOM) or CMU_FXCLK0 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    75      IfxGtm_Dtm_ClockSource_cmuClock2     /**< \brief CMU_CLK2 (if DTM is connected to ATOM) or CMU_FXCLK1 (if DTM is connected to TOM) as clock source */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    76  } IfxGtm_Dtm_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    77  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    78  /** \brief Output x function of channel y \n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    79   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1Fx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    83      IfxGtm_Dtm_Output1Function_signalEdgeTrigger,            /**< \brief Signal Edge Trigger */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    84      IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal,  /**< \brief XOR Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    85      IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal,  /**< \brief AND Of Dtm Input and Shift Signal */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    86      IfxGtm_Dtm_Output1Function_dtmInputSignal                /**< \brief DTM Input Signal DTM[i]_INx_T (i = 0 to 35 and x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    87  } IfxGtm_Dtm_Output1Function;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    88  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    89  /** \brief Output 1 selection of channel x (x = 0 to 3)\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    90   * Definition in IfxGTM.DTM[i].CH.CTRL1.B.O1SELx ( i = 0 to 35 and x = 0 to 3)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    91   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    92  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    93  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    94      IfxGtm_Dtm_Output1Select_inverseDeadTime,  /**< \brief Inverse Dead Time */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    95      IfxGtm_Dtm_Output1Select_specialFunction   /**< \brief Special Function as selected by O1Fx (x = 0 to 3) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    96  } IfxGtm_Dtm_Output1Select;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    97  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    98  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	    99  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   100  /** \brief Dead Time Path on output x of channel y\n
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   101   * Definition in IfxGTM.DTM[i].CH.CTRL2.B.DTxy ( i = 0 to 35; x = 0 , 1; and y = 0 to 4)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   103  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   104  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   105      IfxGtm_Dtm_DeadTimePath_feedThrough,  /**< \brief Feed through from DTM input to output (DTM[i]_INx to DTM[i]_OUTx (i = 0 to 35 and x = 0 to 4) */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   106      IfxGtm_Dtm_DeadTimePath_enable        /**< \brief Dead Time Path enabled */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   107  } IfxGtm_Dtm_DeadTimePath;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   109  /** \addtogroup IfxLld_Gtm_Std_Dtm_Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   110   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   111  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   112  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   113  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   114  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   116  /** \brief Sets the clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   117   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   118   * \param clockSource Clock source for DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   119   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   120   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   121  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   122  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   123  /** \brief Sets the Output 0 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   124   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   125   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   126   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   127   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   129  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   130  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   131  /** \brief Sets the Output 1 Dead Time Path for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   132   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   133   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   134   * \param deadTimePath Dead Time Path for Dtm chhannel output
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   136   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   137  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   139  /** \brief Sets the Output Function for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   140   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   141   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   142   * \param output1Function Output 1 function
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   143   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   144   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   145  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   147  /** \brief Sets the Output Selection for DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   148   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   149   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   150   * \param output1Select Output 1 selection
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   151   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   153  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   154  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   155  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   156  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   157  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   158  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   159  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   160  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   161  /** \brief return the ATOM corresponding CDTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   163  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   164  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   165  /** \brief return the ATOM channel corresponding DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   166   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   167  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   168  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   169  /** \brief return the ATOM channel corresponding DTM channel
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   170   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   171  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   173  /** \brief Sets the deadtime
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   174   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   175   * \param channel Channel index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   176   * \param risingEdge Deadtime for rising edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   177   * \param fallingEdge Deadtime for falling edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   178   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   179   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   180  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   182  /** \brief Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   183   * \param dtm Pointer to the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   184   * \return Return the clock source of  the DTM object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   185   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   186  IFX_INLINE IfxGtm_Dtm_ClockSource IfxGtm_Dtm_getClockSource(Ifx_GTM_CDTM_DTM *dtm);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   188  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   189  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   190  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   192  /** \brief returns the base address of selected DTM instance
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   193   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   194   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   195   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   196   * \return Base address of DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   198  IFX_EXTERN Ifx_GTM_CDTM_DTM *IfxGtm_Dtm_getDtmPointer(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   200  /** \brief Returns the clock frequency in Hz of the DTM
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   201   * \param gtm pointer to GTM register base
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   202   * \param cdtmIndex CDTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   203   * \param dtmIndex DTM index
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   204   * \return DTM input clock frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   206  IFX_EXTERN float32 IfxGtm_Dtm_getClockFrequency(Ifx_GTM *gtm, IfxGtm_Cdtm cdtmIndex, IfxGtm_Dtm dtmIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   207  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   208  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   209  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   210  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   211  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   212  IFX_INLINE void IfxGtm_Dtm_setClockSource(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_ClockSource clockSource)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   213  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   214      dtm->CTRL.B.CLK_SEL = clockSource;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   215  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   218  IFX_INLINE void IfxGtm_Dtm_setOutput0DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   219  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   220      uint32 shift = (8 * (uint32)channel) + 3;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   221      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   223      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   224  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   226  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   227  IFX_INLINE void IfxGtm_Dtm_setOutput1DeadTimePath(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_DeadTimePath deadTimePath)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   228  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   229      uint32 shift = (8 * (uint32)channel) + 7;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   230      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   232      dtm->CH_CTRL2.U = (dtm->CH_CTRL2.U & ~mask) | ((uint32)deadTimePath << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   233  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   236  IFX_INLINE void IfxGtm_Dtm_setOutput1Function(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Function output1Function)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   237  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   238      uint32 shift = (8 * (uint32)channel) + 4;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   239      uint32 mask  = 3 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   241      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Function << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   242  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   244  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   245  IFX_INLINE void IfxGtm_Dtm_setOutput1Select(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, IfxGtm_Dtm_Output1Select output1Select)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   246  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   247      uint32 shift = 8 * (uint32)channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   248      uint32 mask  = 1 << shift;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   249  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   250      dtm->CH_CTRL1.U = (dtm->CH_CTRL1.U & ~mask) | ((uint32)output1Select << shift);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   251  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   253  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   254  IFX_INLINE IfxGtm_Cdtm IfxGtm_Dtm_getCdtmIndex(IfxGtm_Atom atom)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   256      return IfxGtm_dtmAtom_map[atom];
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   257  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   258  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   260  IFX_INLINE IfxGtm_Dtm IfxGtm_Dtm_getDtmIndex(IfxGtm_Atom atom, IfxGtm_Atom_Ch channel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   261  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   262      IfxGtm_Dtm dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   263  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   264      if (IfxGtm_dtmAtom_map[atom] != IfxGtm_Cdtm_none)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   265      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   266          dtm = channel <= 3 ? IfxGtm_Dtm_4 : IfxGtm_Dtm_5;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   267      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   268      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   269      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   270          dtm = IfxGtm_Dtm_none;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   271      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   272  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   273      return dtm;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   274  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   275  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   277  IFX_INLINE IfxGtm_Dtm_Ch IfxGtm_Dtm_getDtmChannel(IfxGtm_Atom_Ch atomChannel)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   278  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   279      IfxGtm_Dtm_Ch channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   280  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   281      if ((atomChannel >= IfxGtm_Atom_Ch_0) && (atomChannel <= IfxGtm_Atom_Ch_3))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   282      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   283          channel = (IfxGtm_Dtm_Ch)atomChannel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   284      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   285      else if ((atomChannel >= IfxGtm_Atom_Ch_4) && (atomChannel <= IfxGtm_Atom_Ch_7))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   286      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   287          channel = (IfxGtm_Dtm_Ch)(atomChannel - IfxGtm_Atom_Ch_4);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   288      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   289      else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   290      {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   291          channel = IfxGtm_Dtm_Ch_none;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   292      }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   294      return channel;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   295  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   296  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   297  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   298  IFX_INLINE void IfxGtm_Dtm_setDeadtime(Ifx_GTM_CDTM_DTM *dtm, IfxGtm_Dtm_Ch channel, uint32 risingEdge, float32 fallingEdge)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   300      dtm->CH[channel].DTV.B.RELRISE = risingEdge;
	insert	d15,d15,d0,#0,#10
	st.w	[a5],d15
.L744:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Gtm\Std\IfxGtm_Dtm.h	   301      dtm->CH[channel].DTV.B.RELFALL = fallingEdge;
	ld.w	d15,[a5]
.L745:
	insert	d15,d15,d2,#16,#10
	st.w	[a5],d15
.L31:
	ld.bu	d15,[a4]17
.L746:
	jlt.u	d1,d15,.L32
.L747:
	mov	d2,#1
	ret
.L380:
	
__IfxGtm_Tom_Dtm_PwmHl_setDeadtime_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setDeadtime,__IfxGtm_Tom_Dtm_PwmHl_setDeadtime_function_end-IfxGtm_Tom_Dtm_PwmHl_setDeadtime
.L184:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setMinPulse',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setMinPulse'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_setMinPulse

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   330  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   331  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   332  boolean IfxGtm_Tom_Dtm_PwmHl_setMinPulse(IfxGtm_TomDtm_PwmHl *driver, float32 minPulse)
; Function IfxGtm_Tom_Dtm_PwmHl_setMinPulse
.L113:
IfxGtm_Tom_Dtm_PwmHl_setMinPulse:	.type	func
	mov.aa	a15,a4
.L560:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   333  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   334      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, minPulse);
	ld.a	a2,[a15]20
.L752:
	ld.w	d15,[a2]6
.L409:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   438  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   439  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   441  /** \brief Convert seconds to timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   442   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   443   * \param  seconds time value in seconds to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   444   * \return Return the converted time in timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   446  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   447  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   448      return seconds * clockFreq;
	mul.f	d15,d4,d15
.L753:
	ftouz	d15,d15

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   335  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   336      driver->base.minPulse = value + IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks(driver);
	call	IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks
.L410:
	add	d15,d2
	st.w	[a15]4,d15
.L754:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   337      driver->base.maxPulse = driver->timer->base.period - driver->base.minPulse;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   338  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   339      return TRUE;
	mov	d2,#1
.L755:
	ld.a	a2,[a15]20
.L756:
	ld.w	d0,[a2]
.L757:
	sub	d0,d15
	st.w	[a15]8,d0
.L758:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   340  }
	ret
.L406:
	
__IfxGtm_Tom_Dtm_PwmHl_setMinPulse_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setMinPulse,__IfxGtm_Tom_Dtm_PwmHl_setMinPulse_function_end-IfxGtm_Tom_Dtm_PwmHl_setMinPulse
.L189:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setMode',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setMode'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_setMode

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   341  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   342  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   343  boolean IfxGtm_Tom_Dtm_PwmHl_setMode(IfxGtm_TomDtm_PwmHl *driver, Ifx_Pwm_Mode mode)
; Function IfxGtm_Tom_Dtm_PwmHl_setMode
.L115:
IfxGtm_Tom_Dtm_PwmHl_setMode:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   344  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   345      boolean                     result = TRUE;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   346      IfxGtm_Tom_Dtm_PwmHl_Base *base   = &driver->base;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   347  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   348      if (base->mode != mode)
	ld.bu	d15,[a4]12
.L763:
	mov	d2,#1
.L561:
	jeq	d15,d4,.L35
.L764:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   349      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   350          if ((mode > Ifx_Pwm_Mode_off) || (IfxGtm_Tom_Dtm_PwmHl_modes[mode].update == NULL_PTR))
	jge.u	d4,#5,.L36
.L765:
	fcall	.cocofun_5
.L766:
	ld.w	d15,[a15]4
.L767:
	jne	d15,#0,.L37
.L36:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   351          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   352              mode   = Ifx_Pwm_Mode_off;
	mov	d4,#4
.L768:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   353              result = FALSE;
	mov	d2,#0
.L37:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   354          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   355  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   356          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode == IfxGtm_TomDtm_PwmHl_modes[mode].mode);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   357  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   358          base->mode             = mode;
	st.b	[a4]12,d4
.L769:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   359          driver->update         = IfxGtm_Tom_Dtm_PwmHl_modes[mode].update;
	fcall	.cocofun_5
.L770:
	ld.a	a2,[a15]4
.L771:
	st.a	[a4]24,a2
.L772:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   360          driver->updateAndShift = IfxGtm_Tom_Dtm_PwmHl_modes[mode].updateAndShift;
	ld.a	a2,[a15]8
.L773:
	st.a	[a4]28,a2
.L774:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   361          driver->updatePulse    = IfxGtm_Tom_Dtm_PwmHl_modes[mode].updatePulse;
	ld.a	a2,[a15]12
.L775:
	st.a	[a4]32,a2
.L776:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   362  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   363          if (base->mode != Ifx_Pwm_Mode_off)
	jeq	d4,#4,.L38
.L777:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   364          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   365              base->inverted = IfxGtm_Tom_Dtm_PwmHl_modes[mode].inverted;
	ld.bu	d15,[a15]1
.L778:
	st.b	[a4]16,d15
.L38:
.L35:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   366          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   367          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   368          {   /* Keep previous inverted for off mode */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   369          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   370  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   371          if (base->inverted)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   372          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   373              // TODO update DTM to invert, user SR
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   374          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   375          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   376          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   377              // TODO update DTM to invert, user SR
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   378          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   379      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   380  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   381      return result;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   382  }
	ret
.L413:
	
__IfxGtm_Tom_Dtm_PwmHl_setMode_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setMode,__IfxGtm_Tom_Dtm_PwmHl_setMode_function_end-IfxGtm_Tom_Dtm_PwmHl_setMode
.L194:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_5'
	.align	2
; Function .cocofun_5
.L117:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	sha	d15,d4,#4
	movh.a	a15,#@his(IfxGtm_Tom_Dtm_PwmHl_modes)
	lea	a15,[a15]@los(IfxGtm_Tom_Dtm_PwmHl_modes)
.L953:
	addsc.a	a15,a15,d15,#0
.L954:
	fret
.L274:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   383  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   384  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   385  void IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; Function IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift
.L119:
IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   386  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   387      driver->updateAndShift(driver, tOn, shift);
	ld.a	a15,[a4]28
.L783:
	ji	a15
.L420:
	
__IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift,__IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift_function_end-IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift
.L199:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setPulse',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setPulse'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_setPulse

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   388  }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   389  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   390  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   391  void IfxGtm_Tom_Dtm_PwmHl_setPulse(IfxGtm_TomDtm_PwmHl *driver, float32 *tOn, float32 *offset)
; Function IfxGtm_Tom_Dtm_PwmHl_setPulse
.L121:
IfxGtm_Tom_Dtm_PwmHl_setPulse:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   392  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   393      driver->updatePulse(driver, tOn, offset);
	ld.a	a15,[a4]32
.L788:
	ji	a15
.L425:
	
__IfxGtm_Tom_Dtm_PwmHl_setPulse_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setPulse,__IfxGtm_Tom_Dtm_PwmHl_setPulse_function_end-IfxGtm_Tom_Dtm_PwmHl_setPulse
.L204:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setupChannels',code,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_setupChannels'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_setupChannels

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   394  }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   395  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   396  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   397  void IfxGtm_Tom_Dtm_PwmHl_setupChannels(IfxGtm_TomDtm_PwmHl *driver, boolean *activeCh, boolean *stuckSt)
; Function IfxGtm_Tom_Dtm_PwmHl_setupChannels
.L123:
IfxGtm_Tom_Dtm_PwmHl_setupChannels:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   398  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   399      /* Dummy Function for StdIf Compile*/
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   400      IFX_UNUSED_PARAMETER(driver)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   401      IFX_UNUSED_PARAMETER(activeCh)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   402      IFX_UNUSED_PARAMETER(stuckSt)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   403  }
	ret
.L430:
	
__IfxGtm_Tom_Dtm_PwmHl_setupChannels_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_setupChannels,__IfxGtm_Tom_Dtm_PwmHl_setupChannels_function_end-IfxGtm_Tom_Dtm_PwmHl_setupChannels
.L209:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit',code,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit'
	.align	2
	
	.global	IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   404  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   405  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   406  boolean IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit(IfxStdIf_PwmHl *stdif, IfxGtm_TomDtm_PwmHl *driver)
; Function IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit
.L125:
IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   407  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   408      /* Ensure the stdif is reset to zeros */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   409      memset(stdif, 0, sizeof(IfxStdIf_PwmHl));
	mov	d4,#0
	mov.aa	a15,a4
.L563:
	mov	d5,#116
	mov.aa	a12,a5
.L564:
	call	memset
.L562:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   410  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   411      /* *INDENT-OFF* Note: this file was indented manually by the author. */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   412      /* Set the API link */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   413      stdif->driver               = driver;
	st.a	[a15],a12
.L797:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   414      stdif->setDeadtime          = (IfxStdIf_PwmHl_SetDeadtime      )&IfxGtm_Tom_Dtm_PwmHl_setDeadtime;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setDeadtime)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setDeadtime)
.L798:
	st.a	[a15]4,a2
.L799:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   415      stdif->getDeadtime          = (IfxStdIf_PwmHl_GetDeadtime      )&IfxGtm_Tom_Dtm_PwmHl_getDeadtime;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_getDeadtime)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_getDeadtime)
.L800:
	st.a	[a15]8,a2
.L801:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   416      stdif->getDeadtimeTick      = (IfxStdIf_PwmHl_GetDeadtimeTick  )&IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick ;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick)
.L802:
	st.a	[a15]12,a2
.L803:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   417      stdif->setMinPulse          = (IfxStdIf_PwmHl_SetMinPulse      )&IfxGtm_Tom_Dtm_PwmHl_setMinPulse;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setMinPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setMinPulse)
.L804:
	st.a	[a15]16,a2
.L805:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   418      stdif->getMinPulse          = (IfxStdIf_PwmHl_GetMinPulse      )&IfxGtm_Tom_Dtm_PwmHl_getMinPulse;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_getMinPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_getMinPulse)
.L806:
	st.a	[a15]20,a2
.L807:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   419      stdif->getMode              = (IfxStdIf_PwmHl_GetMode          )&IfxGtm_Tom_Dtm_PwmHl_getMode;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_getMode)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_getMode)
.L808:
	st.a	[a15]24,a2
.L809:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   420      stdif->setMode              = (IfxStdIf_PwmHl_SetMode          )&IfxGtm_Tom_Dtm_PwmHl_setMode;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setMode)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setMode)
.L810:
	st.a	[a15]28,a2
.L811:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   421      stdif->setOnTime            = (IfxStdIf_PwmHl_SetOnTime        )&IfxGtm_Tom_Dtm_PwmHl_setOnTime;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setOnTime)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setOnTime)
.L812:
	st.a	[a15]32,a2
.L813:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   422      stdif->setOnTimeAndShift    = (IfxStdIf_PwmHl_SetOnTimeAndShift)&IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift)
.L814:
	st.a	[a15]36,a2
.L815:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   423      stdif->setPulse             = (IfxStdIf_PwmHl_SetPulse         )&IfxGtm_Tom_Dtm_PwmHl_setPulse;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setPulse)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setPulse)
.L816:
	st.a	[a15]40,a2
.L817:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   424      stdif->setupChannels        = (IfxStdIf_PwmHl_SetupChannels    )&IfxGtm_Tom_Dtm_PwmHl_setupChannels;
	movh.a	a2,#@his(IfxGtm_Tom_Dtm_PwmHl_setupChannels)
	lea	a2,[a2]@los(IfxGtm_Tom_Dtm_PwmHl_setupChannels)
.L818:
	st.a	[a15]44,a2
.L819:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   425      IfxGtm_Tom_Timer_stdIfTimerInit(&stdif->timer, driver->timer);
	lea	a4,[a15]48
.L820:
	ld.a	a5,[a12]20
	call	IfxGtm_Tom_Timer_stdIfTimerInit
.L821:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   426      /* *INDENT-ON* */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   427  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   428      return TRUE;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   429  }
	mov	d2,#1
	ret
.L435:
	
__IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit,__IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit_function_end-IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit
.L214:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   430  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   431  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   432  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; Function IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff
.L127:
IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   433  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   434      IfxGtm_Tom_Dtm_PwmHl_updateOff(driver, NULL_PTR);
	mov.a	a5,#0
.L565:
	j	IfxGtm_Tom_Dtm_PwmHl_updateOff
.L442:
	
__IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,__IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff_function_end-IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff
.L224:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   435      IFX_UNUSED_PARAMETER(tOn)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   436      IFX_UNUSED_PARAMETER(shift)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   437  }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   438  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   439  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   440  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned
.L129:
IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned:	.type	func
	mov.aa	a15,a4
.L570:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   441  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   442      /* FIXME make use of the Up Down counter mode */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   443      uint8          channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   444      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   445  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   446      period = driver->timer->base.period;
	ld.a	a2,[a15]20
.L835:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   447  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   448      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d9,#0
	mov.aa	a12,a5
.L568:
	ld.w	d8,[a2]
.L571:
	j	.L41
.L42:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   449      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   450          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   451          x = tOn[channelIndex];
	fcall	.cocofun_3
.L566:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   452  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   453          if (driver->base.inverted != FALSE)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   454          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   455              x = period - x;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   456          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   457          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   458          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   459  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   460          if (x < driver->base.minPulse)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   461          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   462              x = 0;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   463          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   464          else if (x > driver->base.maxPulse)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   465          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   466              x = period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   467          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   468          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   469          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   470  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   471          if (x == 0)
	jne	d0,#0,.L47
.L836:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   472          {   /* 0% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   473              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], period + 1, period + 1);
	add	d5,d8,#1
.L837:
	mov	d6,d5
	j	.L48
.L47:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   474          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   475          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   476          {                           /* x% duty cycle and 100 % duty cycle  */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   477              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], (period - x) / 2, (period + x) / 2);
	sub	d5,d8,d0
	sh	d5,#-1
.L838:
	add	d0,d8
.L572:
	sh	d6,d0,#-1
.L48:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L452:
	add	d9,#1
.L569:
	extr.u	d9,d9,#0,#8
.L41:
	ld.bu	d15,[a15]17
.L839:
	jlt.u	d9,d15,.L42
.L840:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   478          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   479      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   480  }
	ret
.L446:
	
__IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned,__IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned_function_end-IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned
.L229:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_3'
	.align	2
; Function .cocofun_3
.L131:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	addsc.a	a2,a12,d9,#2
.L931:
	ld.bu	d15,[a15]16
.L932:
	ld.w	d0,[a2]
.L567:
	jeq	d15,#0,.L43
.L933:
	sub	d0,d8,d0
.L43:
	ld.w	d15,[a15]4
.L934:
	jge.u	d0,d15,.L44
.L935:
	mov	d0,#0
	j	.L45
.L44:
	ld.w	d15,[a15]8
.L936:
	ge.u	d15,d15,d0
.L937:
	cmovn	d0,d15,d8
.L45:
	addsc.a	a2,a15,d9,#0
.L938:
	ld.a	a4,[a15]36
.L939:
	ld.b	d4,[a2]44
.L940:
	fret
.L264:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   481  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   482  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   483  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned
.L133:
IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned:	.type	func
	mov.aa	a15,a4
.L573:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   484  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   485      uint8          channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   486      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   487  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   488      period = driver->timer->base.period;
	ld.a	a2,[a15]20
.L845:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   489  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   490      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d8,#0
	mov.aa	a12,a5
.L574:
	ld.w	d9,[a2]
.L576:
	j	.L49
.L50:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   491      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   492          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   493          Ifx_TimerValue cm0, cm1;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   494          x = tOn[channelIndex];
	addsc.a	a2,a12,d8,#2
.L846:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   495  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   496          if (driver->base.inverted != FALSE)
	ld.bu	d15,[a15]16
.L847:
	ld.w	d6,[a2]
.L577:
	jeq	d15,#0,.L51
.L848:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   497          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   498              x = period - x;
	sub	d6,d9,d6
.L51:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   499          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   500          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   501          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   502  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   503          if (x < driver->base.minPulse)
	ld.w	d15,[a15]4
.L849:
	jge.u	d6,d15,.L52
.L850:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   504          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   505              x = 0;
	mov	d6,#0
	j	.L53
.L52:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   506          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   507          else if (x > driver->base.maxPulse)
	ld.w	d15,[a15]8
.L851:
	ge.u	d15,d15,d6
.L852:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   508          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   509              x = period;
	cmovn	d6,d15,d9
.L53:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   510          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   511          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   512          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   513  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   514          /* Special handling due to GTM issue */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   515          if (x == period)   /* 100% duty cycle */
	jne	d6,d9,.L55
.L853:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   516          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   517              cm0 = 0;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   518              cm1 = period + 1;
	add	d6,d9,#1
	j	.L56
.L55:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   519              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   520          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   521          else if (x == 0)
	jne	d6,#0,.L57
.L854:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   522          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   523              cm0 = period + 1;
	add	d5,d9,#1
	j	.L58
.L57:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   524              cm1 = 0;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   525              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   526          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   527          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   528          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   529              /* x% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   530  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   531              if (driver->base.mode == Ifx_Pwm_Mode_leftAligned)
	ld.bu	d15,[a15]12
.L855:
	jne	d15,#2,.L59
.L56:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   532              {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   533                  cm0 = 0;
	mov	d5,#0
	j	.L60
.L59:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   534                  cm1 = x;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   535              }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   536              else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   537              {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   538                  // right aligned
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   539                  cm0 = x;
	mov	d5,d6
.L58:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   540                  cm1 = 0;
	mov	d6,#0
.L60:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   541              }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   542  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   543              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
	addsc.a	a2,a15,d8,#0
.L856:
	ld.a	a4,[a15]36
.L857:
	ld.b	d4,[a2]44
.L858:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L459:
	add	d8,#1
.L575:
	extr.u	d8,d8,#0,#8
.L49:
	ld.bu	d15,[a15]17
.L859:
	jlt.u	d8,d15,.L50
.L860:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   544          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   545      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   546  }
	ret
.L454:
	
__IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned,__IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned_function_end-IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned
.L234:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateOff',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateOff'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   547  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   548  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   549  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateOff(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn)
; Function IfxGtm_Tom_Dtm_PwmHl_updateOff
.L135:
IfxGtm_Tom_Dtm_PwmHl_updateOff:	.type	func
	mov.aa	a15,a4
.L466:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   550  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   551      IFX_UNUSED_PARAMETER(tOn)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   552      uint8 channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   553      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   554      period = driver->timer->base.period;
	ld.a	a2,[a15]20
.L865:
	ld.w	d8,[a2]
.L578:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   555  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   556      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	mov	d15,#0
.L579:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   557      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   558          /* 0% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   559          IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], period + 1, period + 1);
	add	d8,#1
	j	.L61
.L62:
	addsc.a	a2,a15,d15,#0
.L866:
	mov	d5,d8
	ld.a	a4,[a15]36
.L867:
	mov	d6,d8
	ld.b	d4,[a2]44
.L868:
	call	IfxGtm_Tom_Ch_setCompareShadow
.L869:
	add	d15,#1
.L580:
	extr.u	d15,d15,#0,#8
.L61:
	ld.bu	d0,[a15]17
.L870:
	jlt.u	d15,d0,.L62
.L871:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   560      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   561  }
	ret
.L463:
	
__IfxGtm_Tom_Dtm_PwmHl_updateOff_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updateOff,__IfxGtm_Tom_Dtm_PwmHl_updateOff_function_end-IfxGtm_Tom_Dtm_PwmHl_updateOff
.L239:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updatePulse',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updatePulse'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   562  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   563  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   564  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updatePulse(IfxGtm_TomDtm_PwmHl *driver, float32 *tOn, float32 *offset)
; Function IfxGtm_Tom_Dtm_PwmHl_updatePulse
.L137:
IfxGtm_Tom_Dtm_PwmHl_updatePulse:	.type	func
	fcall	.cocofun_7
.L584:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   565  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   566      uint8          channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   567      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   568  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   569      period = driver->timer->base.period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   570  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   571      /* Top channels */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   572      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	j	.L63
.L64:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   573      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   574          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   575          Ifx_TimerValue o;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   576          Ifx_TimerValue cm0, cm1;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   577  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   578          x = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex]);
	ld.a	a2,[a15]20
.L876:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   579          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex]);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   580  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   581          if (driver->base.inverted != FALSE)
	ld.bu	d15,[a15]16
.L877:
	ld.w	d0,[a2]6
.L878:
	addsc.a	a2,a12,d9,#2
	ld.w	d1,[a2]
.L879:
	addsc.a	a2,a13,d9,#2
.L480:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   438  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   439  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   441  /** \brief Convert seconds to timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   442   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   443   * \param  seconds time value in seconds to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   444   * \return Return the converted time in timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   446  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   447  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   448      return seconds * clockFreq;
	mul.f	d1,d1,d0
.L880:
	ftouz	d5,d1
	ld.w	d1,[a2]
.L481:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   438  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   439  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   441  /** \brief Convert seconds to timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   442   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   443   * \param  seconds time value in seconds to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   444   * \return Return the converted time in timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   446  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   447  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   448      return seconds * clockFreq;
	mul.f	d0,d1,d0
	ftouz	d0,d0
.L484:
	jeq	d15,#0,.L65
.L881:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   582          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   583              x = period - x;
	sub	d5,d8,d5
.L65:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   584          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   585          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   586          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   587  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   588          if ((x < driver->base.minPulse) || (o > period))
	ld.w	d15,[a15]4
.L882:
	jlt.u	d5,d15,.L66
.L883:
	jge.u	d8,d0,.L67
.L66:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   589          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   590              x = 0;
	mov	d5,#0
	j	.L68
.L67:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   591          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   592          else if ((x > driver->base.maxPulse) || (o + x > period))
	ld.w	d15,[a15]8
.L884:
	jlt.u	d15,d5,.L69
.L885:
	add	d15,d0,d5
.L886:
	jge.u	d8,d15,.L70
.L69:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   593          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   594              x = period;
	mov	d5,d8
.L70:
.L68:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   595          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   596          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   597          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   598  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   599          /* Special handling due to GTM issue */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   600          if (x == period)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   601          {   /* 100% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   602              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex],
	addsc.a	a2,a15,d9,#0
.L887:
	ld.a	a4,[a15]36
.L888:
	ld.b	d4,[a2]44
.L889:
	jne	d5,d8,.L71
.L890:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   603                  period + 1 /* No compare event */,
	add	d5,d8,#1
.L587:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   604                  2 /* 1st compare event (issue: expected to be 1)*/);
	mov	d6,#2
	j	.L72
.L71:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   605          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   606          else if (x == 0)
	jne	d5,#0,.L73
.L891:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   607          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   608              cm0 = 1;
	mov	d5,#1
.L588:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   609              cm1 = period + 2;
	add	d6,d8,#2
	j	.L74
.L73:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   610              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   611          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   612          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   613          {                /* x% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   614              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	add	d6,d0,#2
.L589:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   615              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
	add	d5,d0
.L74:
.L72:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   616              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
	call	IfxGtm_Tom_Ch_setCompareShadow
.L476:
	add	d9,#1
.L585:
	extr.u	d9,d9,#0,#8
.L63:
	ld.bu	d15,[a15]17
.L892:
	jlt.u	d9,d15,.L64
.L893:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   617          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   618      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   619  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   620      /* FIXME enable selection between top and bottom channels. See PWM HL without DTM */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   621  }
	ret
.L469:
	
__IfxGtm_Tom_Dtm_PwmHl_updatePulse_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updatePulse,__IfxGtm_Tom_Dtm_PwmHl_updatePulse_function_end-IfxGtm_Tom_Dtm_PwmHl_updatePulse
.L244:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl..cocofun_7'
	.align	2
; Function .cocofun_7
.L139:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	mov.aa	a15,a4
.L581:
	ld.a	a2,[a15]20
.L591:
	mov	d9,#0
	mov.aa	a12,a5
.L582:
	mov.aa	a13,a6
.L583:
	ld.w	d8,[a2]
.L586:
	fret
.L284:
	; End of function
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updatePulseOff',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updatePulseOff'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   622  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   623  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   624  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updatePulseOff(IfxGtm_TomDtm_PwmHl *driver, float32 *tOn, float32 *offset)
; Function IfxGtm_Tom_Dtm_PwmHl_updatePulseOff
.L141:
IfxGtm_Tom_Dtm_PwmHl_updatePulseOff:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   625  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   626      IFX_UNUSED_PARAMETER(tOn)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   627      IFX_UNUSED_PARAMETER(offset)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   628  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   629      IfxGtm_Tom_Dtm_PwmHl_updateOff(driver, NULL_PTR);
	mov.a	a5,#0
.L590:
	j	IfxGtm_Tom_Dtm_PwmHl_updateOff
.L485:
	
__IfxGtm_Tom_Dtm_PwmHl_updatePulseOff_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updatePulseOff,__IfxGtm_Tom_Dtm_PwmHl_updatePulseOff_function_end-IfxGtm_Tom_Dtm_PwmHl_updatePulseOff
.L249:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned',code,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   630  }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   631  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   632  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   633  IFX_STATIC void IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned(IfxGtm_TomDtm_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; Function IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned
.L143:
IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned:	.type	func
	fcall	.cocofun_7
.L592:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   634  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   635      uint8          channelIndex;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   636      Ifx_TimerValue period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   637  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   638      period = driver->timer->base.period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   639  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   640      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	j	.L75
.L76:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   641      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   642          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   643          Ifx_TimerValue s; /* Shift value */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   644          Ifx_TimerValue cm0, cm1;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   645          x = tOn[channelIndex];
	fcall	.cocofun_3
.L593:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   646  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   647          if (driver->base.inverted != FALSE)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   648          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   649              x = period - x;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   650          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   651          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   652          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   653  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   654          if (x < driver->base.minPulse)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   655          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   656              x = 0;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   657          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   658          else if (x > driver->base.maxPulse)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   659          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   660              x = period;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   661          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   662          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   663          {}
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   664  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   665          /* Special handling due to GTM issue */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   666          if (x == period)
	jne	d0,d8,.L81
.L902:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   667          {   /* 100% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   668              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex],
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   669                  period + 1 /* No compare event */,
	add	d5,d8,#1
.L903:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   670                  2 /* 1st compare event (issue: expected to be 1)*/);
	mov	d6,#2
	j	.L82
.L81:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   671          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   672          else if (x == 0)
	jne	d0,#0,.L83
.L904:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   673          {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   674              cm0 = 1;
	mov	d5,#1
.L596:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   675              cm1 = period + 2;
	add	d6,d8,#2
	j	.L84
.L83:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   676              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   677          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   678          else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   679          {                           /* x% duty cycle */
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   680              s = shift[channelIndex];
	addsc.a	a2,a13,d9,#2
.L905:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   681  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   682              if (s > 0)
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   683              {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   684                  s = __minX(s, (period - x) / 2 - 1);
	sub	d15,d8,d0
.L906:
	ld.w	d1,[a2]
.L597:
	sh	d6,d15,#-1
.L907:
	jeq	d1,#0,.L85
.L908:
	add	d15,d6,#-1
.L909:
	min.u	d15,d1,d15
	j	.L86
.L85:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   685              }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   686              else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   687              {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   688                  s = __maxX(s, (x - period) / 2 + 1);
	sub	d15,d0,d8
	sh	d15,#-1
.L598:
	add	d15,#1
.L86:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   689              }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   690  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   691              cm1 = s + (period - x) / 2; // CM1
	add	d6,d15
.L910:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   692              cm0 = s + (period + x) / 2; // CM0
	add	d0,d8
.L595:
	sh	d0,#-1
.L911:
	add	d5,d15,d0
.L84:
.L82:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   693              IfxGtm_Tom_Ch_setCompareShadow(driver->tom, driver->ccx[channelIndex], cm0, cm1);
	call	IfxGtm_Tom_Ch_setCompareShadow
.L495:
	add	d9,#1
.L594:
	extr.u	d9,d9,#0,#8
.L75:
	ld.bu	d15,[a15]17
.L912:
	jlt.u	d9,d15,.L76
.L913:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   694          }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   695      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   696  }
	ret
.L489:
	
__IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned,__IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned_function_end-IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned
.L254:
	; End of function
	
	.sdecl	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks',code,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.text.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks'
	.align	2
	

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   697  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   698  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   699  IFX_STATIC Ifx_TimerValue IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks(IfxGtm_TomDtm_PwmHl *driver)
; Function IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks
.L145:
IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks:	.type	func

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   700  {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   701      Ifx_TimerValue deadtimeInTimerClkTicks;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   702  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   703      if (driver->dtmClockFreq == driver->timer->base.clockFreq)
	ld.a	a15,[a4]20
.L918:
	ld.w	d1,[a4]68
.L919:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   704      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   705          // same clock frequency
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   706          deadtimeInTimerClkTicks = driver->base.deadtime;
	ld.w	d2,[a4]
.L599:
	ld.w	d0,[a15]6
.L920:
	cmp.f	d15,d1,d0
.L921:
	jnz.t	d15:1,.L88
.L922:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   707      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   708      else if (driver->base.deadtime == 0)
	jne	d2,#0,.L89
.L923:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   709      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   710          deadtimeInTimerClkTicks = 0;
	mov	d2,#0
.L88:

; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   711      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   712      else
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   713      {
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   714          // convert deadtime from DTM clk frequency to TIMER clk frequency
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   715          float32 deadtimeInS = IfxStdIf_Timer_tickToS(driver->dtmClockFreq, driver->base.deadtime);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   716          deadtimeInTimerClkTicks = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, deadtimeInS);
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   717          //TODO: round-up?
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   718      }
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   719  
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   720      return deadtimeInTimerClkTicks;
; ..\0_Src\4_McHal\Tricore\Gtm\Tom\Dtm_PwmHl\IfxGtm_Tom_Dtm_PwmHl.c	   721  }
	ret
.L89:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    42   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    43   * \ingroup library_srvsw_stdif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    44   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    45   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    46   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    48   * The figure below shows the standard timer interface.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    49   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    50   * \image html "Timer.png" "Standard timer interface"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    51   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    52   * This interface defines the following features:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    53   * - Timer with configurable frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    54   * - Configurable counting direction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    55   * - Optional interrupt on timer event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    56   * - Optional trigger signal with:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    57   *   - Optional interrupt on trigger event with configurable service request provider and priority
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    58   *   - Configurable trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    59   *   - Configurable trigger edge
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    60   *   - trigger signal can be internal only or forwarded to a port pin
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    61   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    63  #ifndef IFXSTDIF_TIMER_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    64  #define IFXSTDIF_TIMER_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    65  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    66  #include "Cpu/Std/Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    67  #include "Src/Std/IfxSrc.h"     
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    68  #include "Port/Std/IfxPort.h"   
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    69  #include "IfxStdIf.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    70  /** \brief Output event enable / disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    71  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    72  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    73      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    74      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    75                                                    *          the output is set to active between time 0 to the trigger point,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    76                                                    *          and is set to inactive between the trigger point and the period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    77                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    78                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    79                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    81                                                    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    82  } IfxStdIf_Timer_OutputEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    83  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    84  /** \brief Timer increment direction */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    85  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    87      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    88      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    89      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    90  } IfxStdIf_Timer_CountDir;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    92  /** \brief Forward declaration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    93  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    95  /** \brief Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    96   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    97   * \return Return the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    98   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	    99  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   100  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   101  /** \brief Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   102   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   103   * \return Return the timer period in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   104   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   105  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   106  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   107  /** \brief Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   108   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   109   * \return Return the timer resolution in seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   111  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   113  /** \brief Return the timer trigger point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   114   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   115   * \return Return the timer timer point
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   117  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   118  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   119  /** \brief Set the timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   120   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   121   * \param frequency Requested timer frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   122   * \retval TRUE The requested frequency could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   123   * \retval FALSE The requested frequency is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   124   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   125  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   127  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   128   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   129   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   131  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   133  /** \brief Apply requested updates.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   134   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   135   * Such requested update are calls to:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   136   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   137   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   138   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   139   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   142   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   144   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   145   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   146   * one timer period!!!
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   147   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   148   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   149   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   150   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   151   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   152  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   153  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   154  /** \brief Disable updates
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   155   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   156   * The following API action will not be taken in account before applyUpdate is called:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   157   * - IfxStdIf_Timer_setSingleMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   158   * - IfxStdIf_Timer_setTrigger()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   159   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   160   * as well as PWM generation related calls such as:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_PwmHl_setDeadtime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_PwmHl_setMode()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   163   * - IfxStdIf_PwmHl_setOnTime()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setupChannels()
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   165   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   166   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   167   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   168   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   169  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   171  /** \brief Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   172   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   173   * \return Return the timer input frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   174   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   175  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   177  /** \brief Immediately start the timer.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   178   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   179   * Please note that other mechanism may avoid the timer to tick, such as when the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   180   * global (input) clock to the timer block is inactive.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   181   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   182   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   183   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   184  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   185  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   186  /** \brief Set the timer period.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   187   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   188   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   189   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   190   * \param period Period value in ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   191   * \retval TRUE The requested period could be set
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   192   * \retval FALSE The requested period is out of range
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   193   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   194  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   195  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   196  /** \brief Stop timer at the end of the period
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   197   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   198   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   199   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   200   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   201   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   202   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   203  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   204  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   205  /** \brief Set trigger point.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   206   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   207   * \see Timer_OutputEvent for the definition of the output level.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   208   * Active state is defined by Timer_Config::outputActiveState.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   209   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   210   * Timer_applyUpdate() shall be invoked in order this to take effect.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   211   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   212   * \param triggerPoint Trigger point in ticks from the period start.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   213   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   215  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   216  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   217  /** \brief Immediately stops the timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   218   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   219   * \return none
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   220   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   221  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   222  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   223  /** \brief Return the timer interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   224   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   225   * \return Return the timer interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   226   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   227  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   228  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   229  /** \brief Return the trigger interrupt flag and reset it
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   230   * \param stdIf Pointer to the interface driver object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   231   * \return Return the trigger interrupt flag
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   233  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   235  /** \brief Standard interface object
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   236   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   237  struct IfxStdIf_Timer_
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   238  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   239      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   240      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   241      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   256  };
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   257  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   258  /** \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   259  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   260  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   261      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   262      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   263      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   264      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   265      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   266      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   267      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   268      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   269  } IfxStdIf_Timer_TrigConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   271  /** \brief Timer configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   272  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   274      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   275      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   276      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   277      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   278      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   279      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   280      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   281  } IfxStdIf_Timer_Config;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   282  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   283  /** \addtogroup library_srvsw_stdif_timer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   284   *  \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   285   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   286  /** \copydoc IfxStdIf_Timer_GetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   287   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   288   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   289  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   290  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   291      return stdIf->getFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   292  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   293  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   295  /** \copydoc IfxStdIf_Timer_GetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   296   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   297   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   298  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   299  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   300      return stdIf->getPeriod(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   301  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   302  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   304  /** \copydoc IfxStdIf_Timer_GetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   305   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   307  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   308  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   309      return stdIf->getTrigger(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   310  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   313  /** \copydoc IfxStdIf_Timer_GetResolution
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   314   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   315   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   316  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   317  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   318      return stdIf->getResolution(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   319  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   320  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   322  /** \copydoc IfxStdIf_Timer_SetFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   323   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   324   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   325  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   326  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   327      return stdIf->setFrequency(stdIf->driver, frequency);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   328  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   330  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   331  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   332   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   333   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   334  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   335  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   336      stdIf->updateInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   337  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   338  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   340  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   341   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   342   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   343  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   344  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   345      stdIf->applyUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   346  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   347  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   349  /** \copydoc IfxStdIf_Timer_DisableUpdate
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   350   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   352  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   354      stdIf->disableUpdate(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   355  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   358  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   359   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   360   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   361  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   362  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   363      return stdIf->getInputFrequency(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   364  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   365  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   367  /** \copydoc IfxStdIf_Timer_Run
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   368   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   369   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   370  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   371  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   372      stdIf->run(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   373  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   374  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   375  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   376  /** \copydoc IfxStdIf_Timer_SetPeriod
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   377   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   378   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   379  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   380  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   381      return stdIf->setPeriod(stdIf->driver, period);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   382  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   383  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   385  /** \copydoc IfxStdIf_Timer_SetSingleMode
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   386   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   387   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   388  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   389  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   390      stdIf->setSingleMode(stdIf->driver, enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   391  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   392  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   393  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   394  /** \copydoc IfxStdIf_Timer_SetTrigger
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   395   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   396   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   397  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   398  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   399      stdIf->setTrigger(stdIf->driver, triggerPoint);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   400  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   401  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   403  /** \copydoc IfxStdIf_Timer_Stop
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   404   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   405   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   406  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   407  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   408      stdIf->stop(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   409  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   410  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   411  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   412  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   413   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   414   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   415  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   416  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   417      return stdIf->ackTimerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   418  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   420  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   421  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   422   * \param stdIf Standard interface pointer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   423   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   424  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   425  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   426      return stdIf->ackTriggerIrq(stdIf->driver);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   427  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   430  /** \brief Convert timer ticks to seconds
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   431   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   432   * \param  ticks time value in ticks to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   433   * \return Return the converted time in s
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   435  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   436  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   437      return ticks / clockFreq;
	utof	d15,d2
.L924:
	div.f	d15,d15,d1
.L925:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   438  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   439  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   441  /** \brief Convert seconds to timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   442   * \param  clockFreq Timer clock frequency
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   443   * \param  seconds time value in seconds to be converted
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   444   * \return Return the converted time in timer ticks
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   446  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   447  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\1_SrvSw\StdIf\IfxStdIf_Timer.h	   448      return seconds * clockFreq;
	mul.f	d15,d15,d0
.L926:
	ftouz	d2,d15
	ret
.L500:
	
__IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks_function_end:
	.size	IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks,__IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks_function_end-IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks
.L259:
	; End of function
	
	.sdecl	'.rodata.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_modes',data,rom,cluster('IfxGtm_Tom_Dtm_PwmHl_modes')
	.sect	'.rodata.IfxGtm_Tom_Dtm_PwmHl.IfxGtm_Tom_Dtm_PwmHl_modes'
	.align	4
IfxGtm_Tom_Dtm_PwmHl_modes:	.type	object
	.size	IfxGtm_Tom_Dtm_PwmHl_modes,80
	.space	4
	.word	IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned,IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned,IfxGtm_Tom_Dtm_PwmHl_updatePulse
	.byte	1,1
	.space	2
	.word	IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned,IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned,IfxGtm_Tom_Dtm_PwmHl_updatePulse
	.byte	2
	.space	3
	.word	IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned,IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,IfxGtm_Tom_Dtm_PwmHl_updatePulse
	.byte	3,1
	.space	2
	.word	IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned,IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,IfxGtm_Tom_Dtm_PwmHl_updatePulse
	.byte	4
	.space	3
	.word	IfxGtm_Tom_Dtm_PwmHl_updateOff,IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff,IfxGtm_Tom_Dtm_PwmHl_updatePulseOff
	.sdecl	'.rodata.IfxGtm_Tom_Dtm_PwmHl..2.ini',data,rom
	.sect	'.rodata.IfxGtm_Tom_Dtm_PwmHl..2.ini'
	.align	2
.2.ini:	.type	object
	.size	.2.ini,12
	.space	12
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_getDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_getMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_getMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setMode'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setPulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setupChannels'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_setOnTime'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updateOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updatePulse'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updatePulseOff'
	.calls	'__INDIRECT__','IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setOnTime','__INDIRECT__'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Ch_getClockSource'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Dtm_getDtmPointer'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Ch_setClockSource'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Ch_setResetSource'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Ch_setSignalLevel'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Ch_setTriggerOutput'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_PinMap_setTomTout'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Dtm_getClockFrequency'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Dtm_PwmHl_setDeadtime'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Dtm_PwmHl_setMinPulse'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Tgc_enableChannelsOutput'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Tgc_enableChannels'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Dtm_PwmHl_setMode'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Dtm_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Tgc_setChannelsForceUpdate'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Tgc_trigger'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','IfxGtm_Tom_Timer_addToChannelMask'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_initConfig','IfxStdIf_PwmHl_initConfig'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_getMinPulse','IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setMinPulse','IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift','__INDIRECT__'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setPulse','__INDIRECT__'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit','memset'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit','IfxGtm_Tom_Timer_stdIfTimerInit'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff','IfxGtm_Tom_Dtm_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateOff','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updatePulse','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updatePulseOff','IfxGtm_Tom_Dtm_PwmHl_updateOff'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned','IfxGtm_Tom_Ch_setCompareShadow'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','.cocofun_4'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','.cocofun_6'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setMode','.cocofun_5'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned','.cocofun_3'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updatePulse','.cocofun_7'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned','.cocofun_7'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned','.cocofun_3'
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setOnTime','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_init','',16
	.calls	'.cocofun_6','',0
	.calls	'.cocofun_4','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_initConfig','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_getDeadtime','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_getMinPulse','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_getMode','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setDeadtime','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setMinPulse','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setMode','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setPulse','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_setupChannels','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned','',0
	.calls	'.cocofun_3','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateOff','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updatePulse','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updatePulseOff','',0
	.calls	'IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned','',0
	.extern	IfxStdIf_PwmHl_initConfig
	.extern	IfxGtm_dtmAtom_map
	.extern	IfxGtm_Tom_Ch_getClockSource
	.extern	IfxGtm_Tom_Ch_setClockSource
	.extern	IfxGtm_Tom_Ch_setCompareShadow
	.extern	IfxGtm_Tom_Ch_setResetSource
	.extern	IfxGtm_Tom_Ch_setSignalLevel
	.extern	IfxGtm_Tom_Ch_setTriggerOutput
	.extern	IfxGtm_Tom_Tgc_enableChannels
	.extern	IfxGtm_Tom_Tgc_enableChannelsOutput
	.extern	IfxGtm_Tom_Tgc_setChannelsForceUpdate
	.extern	IfxGtm_Tom_Tgc_trigger
	.extern	IfxGtm_PinMap_setTomTout
	.extern	IfxGtm_Dtm_getDtmPointer
	.extern	IfxGtm_Dtm_getClockFrequency
	.extern	IfxGtm_Tom_Timer_addToChannelMask
	.extern	IfxGtm_Tom_Timer_stdIfTimerInit
	.extern	memset
	.extern	__INDIRECT__
	.calls	'IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L147:
	.word	250681
	.half	3
	.word	.L148
	.byte	4
.L146:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L149
	.byte	2,1,1,3
	.word	178
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	181
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L369:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	226
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	238
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,9
	.byte	'void',0,10
	.word	324
	.byte	3
	.word	330
	.byte	7
	.byte	'unsigned int',0,4,7,4
	.byte	'__ldmst_c',0,3,2,108,17,1,1,5
	.byte	'address',0,2,108,42
	.word	335
	.byte	5
	.byte	'mask',0,2,108,60
	.word	340
	.byte	5
	.byte	'value',0,2,108,75
	.word	340
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,3
	.word	324
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	418
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	444
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	444
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	418
	.byte	6,0,7
	.byte	'int',0,4,5
.L287:
	.byte	7
	.byte	'unsigned char',0,1,8,11
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,68,16,4,12
	.byte	'SRPN',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'SRE',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'TOS',0,1
	.word	537
	.byte	3,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'ECC',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	3,0,2,35,2,12
	.byte	'SRR',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'CLRR',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'SETR',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'IOV',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'IOVCLR',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'SWS',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'SWSCLR',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,4,93,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	554
	.byte	4,2,35,0,0,10
	.word	844
	.byte	3
	.word	883
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,247,1,17,1,1,5
	.byte	'src',0,3,247,1,60
	.word	888
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,208,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	936
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,6,135,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	952
	.byte	4,2,35,0,0
.L294:
	.byte	7
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,217,9,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,6,143,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1110
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,233,9,16,4,12
	.byte	'AE',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,6,151,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1376
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_SCU_WDTCPU',0,6,210,16,25,12,14
	.byte	'CON0',0
	.word	1048
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	1336
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	1567
	.byte	4,2,35,8,0,10
	.word	1607
	.byte	3
	.word	1670
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,164,4,17,1,1,5
	.byte	'watchdog',0,5,164,4,65
	.word	1675
	.byte	5
	.byte	'password',0,5,164,4,82
	.word	1088
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,5,197,4,17,1,1,5
	.byte	'password',0,5,197,4,59
	.word	1088
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,144,5,17,1,1,5
	.byte	'watchdog',0,5,144,5,63
	.word	1675
	.byte	5
	.byte	'password',0,5,144,5,80
	.word	1088
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,5,177,5,17,1,1,5
	.byte	'password',0,5,177,5,57
	.word	1088
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,220,4,19
	.word	1088
	.byte	1,1,5
	.byte	'watchdog',0,5,220,4,74
	.word	1675
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,5,129,5,19
	.word	1088
	.byte	1,1,6,0,11
	.byte	'_Ifx_P_OUT_Bits',0,8,145,3,16,4,12
	.byte	'P0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,171,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2085
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,8,171,2,16,4,12
	.byte	'PS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,8,251,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2401
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,8,133,1,16,4,12
	.byte	'MODREV',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	537
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,155,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2972
	.byte	4,2,35,0,0,15,4
	.word	537
	.byte	16,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,8,163,1,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	537
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	537
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	537
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	537
	.byte	5,0,2,35,3,0,13,8,171,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3101
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,8,189,1,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	537
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	537
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	537
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	537
	.byte	5,0,2,35,3,0,13,8,187,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3316
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,8,202,1,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	537
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	537
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	537
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	537
	.byte	5,0,2,35,3,0,13,8,195,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3531
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,8,176,1,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	537
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	537
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	537
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	537
	.byte	5,0,2,35,3,0,13,8,179,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3748
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,8,141,1,16,4,12
	.byte	'P0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,163,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3968
	.byte	4,2,35,0,0,15,24
	.word	537
	.byte	16,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,8,212,3,16,4,12
	.byte	'PD0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'PL0',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'PD1',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'PL1',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'PD2',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'PL2',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'PD3',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'PL3',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'PD4',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'PL4',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'PD5',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'PL5',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'PD6',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'PL6',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'PD7',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'PL7',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,8,195,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4292
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,8,233,3,16,4,12
	.byte	'PD8',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'PL8',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'PD9',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'PL9',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'PD10',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'PL10',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'PD11',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'PL11',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'PD12',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'PL12',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'PD13',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'PL13',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'PD14',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'PL14',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'PD15',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'PL15',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,8,203,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4596
	.byte	4,2,35,0,0,15,8
	.word	537
	.byte	16,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,8,111,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,147,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4921
	.byte	4,2,35,0,0,15,12
	.word	537
	.byte	16,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,8,190,3,16,4,12
	.byte	'PDIS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,187,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5261
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,8,167,3,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'SEL8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'SEL9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'SEL12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'SEL13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'SEL14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'SEL15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,8,179,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5627
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,8,230,2,16,4,12
	.byte	'PS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,13,8,139,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5991
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,8,251,2,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	340
	.byte	24,0,2,35,0,0,13,8,155,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6138
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,8,134,3,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	340
	.byte	20,0,2,35,0,0,13,8,163,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6307
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,8,240,2,16,4,12
	.byte	'reserved_0',0,2
	.word	1088
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,147,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6479
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,8,128,2,16,4,12
	.byte	'reserved_0',0,2
	.word	1088
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	1088
	.byte	12,0,2,35,2,0,13,8,219,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6654
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,8,149,2,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	8,0,2,35,3,0,13,8,235,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6828
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,8,160,2,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,8,243,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7002
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,8,139,2,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,8,227,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7178
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,8,208,2,16,4,12
	.byte	'PS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,131,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7334
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,8,234,1,16,4,12
	.byte	'reserved_0',0,2
	.word	1088
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,8,211,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7667
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR_Bits',0,8,215,1,16,4,12
	.byte	'REN_CTRL',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'RX_EN',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	537
	.byte	3,2,2,35,0,12
	.byte	'LVDSM',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PS',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'TEN_CTRL',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'TX_EN',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'VDIFFADJ',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'VOSDYN',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'VOSEXT',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,8,203,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8015
	.byte	4,2,35,0,0,15,32
	.word	8295
	.byte	16,7,0,15,56
	.word	537
	.byte	16,55,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,105,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,13,8,139,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8353
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,68,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,8,131,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	8440
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,8,220,5,25,128,2,14
	.byte	'OUT',0
	.word	2361
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	2932
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	3052
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	3092
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	3276
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	3491
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	3708
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	3928
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	3092
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	4243
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	4283
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	4556
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	4872
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	4912
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	5212
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	5252
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	5587
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	5951
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	4912
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	6098
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	6267
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	6439
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	6614
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	6788
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	6962
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	7138
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	7294
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	7627
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	7975
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	4912
	.byte	8,3,35,152,1,14
	.byte	'LPCR',0
	.word	8335
	.byte	32,3,35,160,1,14
	.byte	'reserved_C0',0
	.word	8344
	.byte	56,3,35,192,1,14
	.byte	'ACCEN1',0
	.word	8400
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	8967
	.byte	4,3,35,252,1,0,10
	.word	9007
	.byte	3
	.word	9577
	.byte	17,7,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,169,5,17,1,1,5
	.byte	'port',0,7,169,5,44
	.word	9582
	.byte	5
	.byte	'pinIndex',0,7,169,5,56
	.word	537
	.byte	5
	.byte	'action',0,7,169,5,80
	.word	9587
	.byte	6,0,19
	.byte	'IfxStdIf_InterfaceDriver',0,10,115,15
	.word	444
	.byte	20
	.word	238
	.byte	1,1,21
	.word	444
	.byte	0,3
	.word	9801
	.byte	19
	.byte	'IfxStdIf_Timer_GetFrequency',0,9,99,19
	.word	9814
.L296:
	.byte	7
	.byte	'unsigned long int',0,4,7,20
	.word	9855
	.byte	1,1,21
	.word	444
	.byte	0,3
	.word	9876
	.byte	19
	.byte	'IfxStdIf_Timer_GetPeriod',0,9,105,26
	.word	9889
	.byte	19
	.byte	'IfxStdIf_Timer_GetResolution',0,9,111,19
	.word	9814
	.byte	19
	.byte	'IfxStdIf_Timer_GetTrigger',0,9,117,26
	.word	9889
	.byte	20
	.word	537
	.byte	1,1,21
	.word	444
	.byte	21
	.word	238
	.byte	0,3
	.word	9998
	.byte	19
	.byte	'IfxStdIf_Timer_SetFrequency',0,9,125,19
	.word	10016
	.byte	22,1,1,21
	.word	444
	.byte	0,3
	.word	10057
	.byte	19
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,9,131,1,16
	.word	10066
	.byte	19
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,9,152,1,16
	.word	10066
	.byte	19
	.byte	'IfxStdIf_Timer_DisableUpdate',0,9,169,1,16
	.word	10066
	.byte	19
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,9,175,1,19
	.word	9814
	.byte	19
	.byte	'IfxStdIf_Timer_Run',0,9,184,1,16
	.word	10066
	.byte	20
	.word	537
	.byte	1,1,21
	.word	444
	.byte	21
	.word	9855
	.byte	0,3
	.word	10260
	.byte	19
	.byte	'IfxStdIf_Timer_SetPeriod',0,9,194,1,19
	.word	10278
	.byte	22,1,1,21
	.word	444
	.byte	21
	.word	537
	.byte	0,3
	.word	10317
	.byte	19
	.byte	'IfxStdIf_Timer_SetSingleMode',0,9,203,1,16
	.word	10331
	.byte	22,1,1,21
	.word	444
	.byte	21
	.word	9855
	.byte	0,3
	.word	10374
	.byte	19
	.byte	'IfxStdIf_Timer_SetTrigger',0,9,215,1,16
	.word	10388
	.byte	19
	.byte	'IfxStdIf_Timer_Stop',0,9,221,1,16
	.word	10066
	.byte	20
	.word	537
	.byte	1,1,21
	.word	444
	.byte	0,3
	.word	10457
	.byte	19
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,9,227,1,19
	.word	10470
	.byte	19
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,9,233,1,19
	.word	10470
	.byte	11
	.byte	'IfxStdIf_Timer_',0,9,237,1,8,68,14
	.byte	'driver',0
	.word	9768
	.byte	4,2,35,0,14
	.byte	'getFrequency',0
	.word	9819
	.byte	4,2,35,4,14
	.byte	'getPeriod',0
	.word	9894
	.byte	4,2,35,8,14
	.byte	'getResolution',0
	.word	9927
	.byte	4,2,35,12,14
	.byte	'getTrigger',0
	.word	9964
	.byte	4,2,35,16,14
	.byte	'setFrequency',0
	.word	10021
	.byte	4,2,35,20,14
	.byte	'updateInputFrequency',0
	.word	10071
	.byte	4,2,35,24,14
	.byte	'applyUpdate',0
	.word	10116
	.byte	4,2,35,28,14
	.byte	'disableUpdate',0
	.word	10152
	.byte	4,2,35,32,14
	.byte	'getInputFrequency',0
	.word	10190
	.byte	4,2,35,36,14
	.byte	'run',0
	.word	10232
	.byte	4,2,35,40,14
	.byte	'setPeriod',0
	.word	10283
	.byte	4,2,35,44,14
	.byte	'setSingleMode',0
	.word	10336
	.byte	4,2,35,48,14
	.byte	'setTrigger',0
	.word	10393
	.byte	4,2,35,52,14
	.byte	'stop',0
	.word	10428
	.byte	4,2,35,56,14
	.byte	'ackTimerIrq',0
	.word	10475
	.byte	4,2,35,60,14
	.byte	'ackTriggerIrq',0
	.word	10511
	.byte	4,2,35,64,0,3
	.word	10549
	.byte	8
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,9,233,2,20
	.word	238
	.byte	1,1,5
	.byte	'stdIf',0,9,233,2,69
	.word	10928
	.byte	6,0,3
	.word	324
	.byte	3
	.word	9801
	.byte	3
	.word	9876
	.byte	3
	.word	9801
	.byte	3
	.word	9876
	.byte	3
	.word	9998
	.byte	3
	.word	10057
	.byte	3
	.word	10057
	.byte	3
	.word	10057
	.byte	3
	.word	9801
	.byte	3
	.word	10057
	.byte	3
	.word	10260
	.byte	3
	.word	10317
	.byte	3
	.word	10374
	.byte	3
	.word	10057
	.byte	3
	.word	10457
	.byte	3
	.word	10457
	.byte	8
	.byte	'IfxStdIf_Timer_tickToS',0,3,9,179,3,20
	.word	238
	.byte	1,1,5
	.byte	'clockFreq',0,9,179,3,51
	.word	238
	.byte	5
	.byte	'ticks',0,9,179,3,77
	.word	9855
	.byte	6,0
.L384:
	.byte	8
	.byte	'IfxStdIf_Timer_sToTick',0,3,9,190,3,27
	.word	9855
	.byte	1,1
.L387:
	.byte	5
	.byte	'clockFreq',0,9,190,3,58
	.word	238
.L389:
	.byte	5
	.byte	'seconds',0,9,190,3,77
	.word	238
.L391:
	.byte	6,0,11
	.byte	'_Ifx_GTM_ATOM_CH_RDADDR_Bits',0,12,154,4,16,4,12
	.byte	'RDADDR0',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'RDADDR1',0,4
	.word	936
	.byte	9,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,13,12,144,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CTRL_Bits',0,12,222,3,16,4,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACB',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EUPM',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'ECLK_SRC',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRIG_PULSE',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'UDMODE',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'OSM_TRIG',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EXT_TRIG',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EXTTRIGOUT',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EXT_FUPD',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'SOMB',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,232,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11383
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMB_Bits',0,12,163,4,16,4,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACB_1_0',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ACB_4_3_2',0,4
	.word	936
	.byte	3,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EUPM',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	2,9,2,35,0,12
	.byte	'EXTTRIGOUT',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'SOMB',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,152,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11899
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMC_Bits',0,12,192,4,16,4,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACB_1_0',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ACB_4_3_2',0,4
	.word	936
	.byte	3,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EUPM',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	2,9,2,35,0,12
	.byte	'EXTTRIGOUT',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,160,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12455
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMI_Bits',0,12,221,4,16,4,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	4,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	3,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,168,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13010
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMP_Bits',0,12,249,4,16,4,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ADL',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'BITREV',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SR0_TRIG',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'ECLK_SRC',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRIG_PULSE',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'UDMODE',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'OSM_TRIG',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EXT_TRIG',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EXTTRIGOUT',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EXT_FUPD',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,176,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13577
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMS_Bits',0,12,153,5,16,4,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	2,25,2,35,0,12
	.byte	'DSO',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'ECLK_SRC',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	3,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EXT_FUPD',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,184,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14192
	.byte	4,2,35,0,0,13,12,205,78,8,4,14
	.byte	'CTRL',0
	.word	11859
	.byte	4,2,35,0,14
	.byte	'SOMB',0
	.word	12415
	.byte	4,2,35,0,14
	.byte	'SOMC',0
	.word	12970
	.byte	4,2,35,0,14
	.byte	'SOMI',0
	.word	13537
	.byte	4,2,35,0,14
	.byte	'SOMP',0
	.word	14152
	.byte	4,2,35,0,14
	.byte	'SOMS',0
	.word	14741
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR0_Bits',0,12,183,5,16,4,12
	.byte	'SR0',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14872
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR1_Bits',0,12,190,5,16,4,12
	.byte	'SR1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14983
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM0_Bits',0,12,201,3,16,4,12
	.byte	'CM0',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15094
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM1_Bits',0,12,208,3,16,4,12
	.byte	'CM1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15205
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CN0_Bits',0,12,215,3,16,4,12
	.byte	'CN0',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15316
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_STAT_Bits',0,12,197,5,16,4,12
	.byte	'OL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	15,16,2,35,0,12
	.byte	'ACBI',0,4
	.word	936
	.byte	5,11,2,35,0,12
	.byte	'DV',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'WRF',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'DR',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'ACBO',0,4
	.word	936
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,208,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15427
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,12,146,4,16,4,12
	.byte	'CCU0TC',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,136,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15635
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,12,251,3,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,240,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15773
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,12,131,4,16,4,12
	.byte	'TRG_CCU0TC',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,248,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15921
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,12,139,4,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,128,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16068
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ',0,12,181,78,25,16,14
	.byte	'NOTIFY',0
	.word	15733
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	15881
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	16028
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	16148
	.byte	4,2,35,12,0,10
	.word	16188
	.byte	11
	.byte	'_Ifx_GTM_ATOM_CH',0,12,202,78,25,48,14
	.byte	'RDADDR',0
	.word	11343
	.byte	4,2,35,0,23
	.word	14781
	.byte	4,2,35,4,14
	.byte	'SR0',0
	.word	14943
	.byte	4,2,35,8,14
	.byte	'SR1',0
	.word	15054
	.byte	4,2,35,12,14
	.byte	'CM0',0
	.word	15165
	.byte	4,2,35,16,14
	.byte	'CM1',0
	.word	15276
	.byte	4,2,35,20,14
	.byte	'CN0',0
	.word	15387
	.byte	4,2,35,24,14
	.byte	'STAT',0
	.word	15595
	.byte	4,2,35,28,14
	.byte	'IRQ',0
	.word	16275
	.byte	16,2,35,32,0,10
	.word	16280
	.byte	3
	.word	16421
	.byte	10
	.word	16280
	.byte	15,16
	.word	537
	.byte	16,15,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,12,136,3,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,176,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16445
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,12,215,2,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,152,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16895
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,12,229,2,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,160,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17183
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,12,206,2,16,4,12
	.byte	'ACT_TB',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	936
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	5,0,2,35,0,0,13,12,144,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17471
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,12,173,3,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,192,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17627
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,12,187,3,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,200,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17915
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,12,243,2,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,168,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18203
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,12,159,3,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,184,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18635
	.byte	4,2,35,0,0,15,32
	.word	537
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_ATOM_AGC',0,12,236,78,25,64,14
	.byte	'GLB_CTRL',0
	.word	16855
	.byte	4,2,35,0,14
	.byte	'ENDIS_CTRL',0
	.word	17143
	.byte	4,2,35,4,14
	.byte	'ENDIS_STAT',0
	.word	17431
	.byte	4,2,35,8,14
	.byte	'ACT_TB',0
	.word	17587
	.byte	4,2,35,12,14
	.byte	'OUTEN_CTRL',0
	.word	17875
	.byte	4,2,35,16,14
	.byte	'OUTEN_STAT',0
	.word	18163
	.byte	4,2,35,20,14
	.byte	'FUPD_CTRL',0
	.word	18595
	.byte	4,2,35,24,14
	.byte	'INT_TRIG',0
	.word	18865
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	18905
	.byte	32,2,35,32,0,10
	.word	18914
	.byte	10
	.word	16280
	.byte	15,80
	.word	537
	.byte	16,79,0,10
	.word	16280
	.byte	10
	.word	16280
	.byte	10
	.word	16280
	.byte	10
	.word	16280
	.byte	10
	.word	16280
	.byte	10
	.word	16280
	.byte	15,208,8
	.word	537
	.byte	16,207,8,0,11
	.byte	'_Ifx_GTM_ATOM',0,12,134,79,25,128,16,14
	.byte	'CH0',0
	.word	16431
	.byte	48,2,35,0,14
	.byte	'reserved_30',0
	.word	16436
	.byte	16,2,35,48,14
	.byte	'AGC',0
	.word	19111
	.byte	64,2,35,64,14
	.byte	'CH1',0
	.word	19116
	.byte	48,3,35,128,1,14
	.byte	'reserved_B0',0
	.word	19121
	.byte	80,3,35,176,1,14
	.byte	'CH2',0
	.word	19130
	.byte	48,3,35,128,2,14
	.byte	'reserved_130',0
	.word	19121
	.byte	80,3,35,176,2,14
	.byte	'CH3',0
	.word	19135
	.byte	48,3,35,128,3,14
	.byte	'reserved_1B0',0
	.word	19121
	.byte	80,3,35,176,3,14
	.byte	'CH4',0
	.word	19140
	.byte	48,3,35,128,4,14
	.byte	'reserved_230',0
	.word	19121
	.byte	80,3,35,176,4,14
	.byte	'CH5',0
	.word	19145
	.byte	48,3,35,128,5,14
	.byte	'reserved_2B0',0
	.word	19121
	.byte	80,3,35,176,5,14
	.byte	'CH6',0
	.word	19150
	.byte	48,3,35,128,6,14
	.byte	'reserved_330',0
	.word	19121
	.byte	80,3,35,176,6,14
	.byte	'CH7',0
	.word	19155
	.byte	48,3,35,128,7,14
	.byte	'reserved_3B0',0
	.word	19160
	.byte	208,8,3,35,176,7,0,10
	.word	19171
	.byte	3
	.word	19499
	.byte	17,13,255,1,9,1,18
	.byte	'IfxGtm_Atom_Ch_none',0,127,18
	.byte	'IfxGtm_Atom_Ch_0',0,0,18
	.byte	'IfxGtm_Atom_Ch_1',0,1,18
	.byte	'IfxGtm_Atom_Ch_2',0,2,18
	.byte	'IfxGtm_Atom_Ch_3',0,3,18
	.byte	'IfxGtm_Atom_Ch_4',0,4,18
	.byte	'IfxGtm_Atom_Ch_5',0,5,18
	.byte	'IfxGtm_Atom_Ch_6',0,6,18
	.byte	'IfxGtm_Atom_Ch_7',0,7,0,8
	.byte	'IfxGtm_Atom_Ch_getChannelPointer',0,3,11,247,4,29
	.word	16426
	.byte	1,1,5
	.byte	'atom',0,11,247,4,76
	.word	19504
	.byte	5
	.byte	'channel',0,11,247,4,97
	.word	19509
	.byte	6,0,17,15,155,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,14,229,6,31
	.word	19768
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,14,227,5,20
	.word	537
	.byte	1,1,6,0,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,14,249,6,19
	.word	9855
	.byte	1,1,5
	.byte	'address',0,14,249,6,55
	.word	1088
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,14,150,7,20
	.word	537
	.byte	1,1,5
	.byte	'address',0,14,150,7,70
	.word	1088
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,14,132,9,17,1,1,5
	.byte	'address',0,14,132,9,56
	.word	9855
	.byte	5
	.byte	'count',0,14,132,9,72
	.word	9855
	.byte	24,6,0,0,4
	.byte	'IfxScuCcu_wait',0,3,16,205,13,17,1,1,5
	.byte	'timeSec',0,16,205,13,40
	.word	238
	.byte	24,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,16,128,13,20
	.word	238
	.byte	1,1,6,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CTRL_Bits',0,12,219,9,16,4,12
	.byte	'CLK_SEL',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'DTM_SEL',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'UPD_MODE',0,4
	.word	936
	.byte	3,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SR_UPD_EN',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'SHUT_OFF_RST',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	15,0,2,35,0,0,13,12,216,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20240
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CH_CTRL1_Bits',0,12,194,8,16,4,12
	.byte	'O1SEL_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'I1SEL_0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SWAP_0',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'O1F_0',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'XDT_EN_0_1',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'O1SEL_1',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'I1SEL_1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SH_EN_1',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SWAP_1',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'O1F_1',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'O1SEL_2',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'I1SEL_2',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'SH_EN_2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'SWAP_2',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'O1F_2',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'XDT_EN_2_3',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'O1SEL_3',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'I1SEL_3',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SH_EN_3',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'SWAP_3',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'O1F_3',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,168,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20485
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CH_CTRL2_Bits',0,12,225,8,16,4,12
	.byte	'POL0_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'OC0_0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SL0_0',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DT0_0',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'POL1_0',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'OC1_0',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SL1_0',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DT1_0',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'POL0_1',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'OC0_1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SL0_1',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'DT0_1',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'POL1_1',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'OC1_1',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'SL1_1',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'DT1_1',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'POL0_2',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'OC0_2',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'SL0_2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'DT0_2',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'POL1_2',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'OC1_2',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'SL1_2',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'DT1_2',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'POL0_3',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'OC0_3',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SL0_3',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'DT0_3',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'POL1_3',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'OC1_3',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'SL1_3',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'DT1_3',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,176,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21070
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CH_CTRL2_SR_Bits',0,12,134,9,16,4,12
	.byte	'POL0_0_SR',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'OC0_0_SR',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SL0_0_SR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DT0_0_SR',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'POL1_0_SR',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'OC1_0_SR',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SL1_0_SR',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DT1_0_SR',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'POL0_1_SR',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'OC0_1_SR',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SL0_1_SR',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'DT0_1_SR',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'POL1_1_SR',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'OC1_1_SR',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'SL1_1_SR',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'DT1_1_SR',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'POL0_2_SR',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'OC0_2_SR',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'SL0_2_SR',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'DT0_2_SR',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'POL1_2_SR',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'OC1_2_SR',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'SL1_2_SR',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'DT1_2_SR',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'POL0_3_SR',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'OC0_3_SR',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SL0_3_SR',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'DT0_3_SR',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'POL1_3_SR',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'OC1_3_SR',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'SL1_3_SR',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'DT1_3_SR',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,184,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21701
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_PS_CTRL_Bits',0,12,232,9,16,4,12
	.byte	'RELBLK',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	6,16,2,35,0,12
	.byte	'PSU_IN_SEL',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'IN_POL',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TIM_SEL',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'SHIFT_SEL',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	10,0,2,35,0,0,13,12,224,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22431
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CH_DTV_Bits',0,12,196,9,16,4,12
	.byte	'RELRISE',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	6,16,2,35,0,12
	.byte	'RELFALL',0,4
	.word	936
	.byte	10,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	6,0,2,35,0,0,13,12,200,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22676
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CH',0,12,246,77,25,4,14
	.byte	'DTV',0
	.word	22797
	.byte	4,2,35,0,0,15,16
	.word	22837
	.byte	16,3,0,10
	.word	22878
	.byte	11
	.byte	'_Ifx_GTM_CDTM_DTM_CH_SR_Bits',0,12,205,9,16,4,12
	.byte	'SL0_0_SR_SR',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SL1_0_SR_SR',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SL0_1_SR_SR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SL1_1_SR_SR',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SL0_2_SR_SR',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SL1_2_SR_SR',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SL0_3_SR_SR',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SL1_3_SR_SR',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,208,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22892
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CDTM_DTM_CH_CTRL3_Bits',0,12,171,9,16,4,12
	.byte	'CII0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CIS0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TSEL0_0',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TSEL1_0',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	4,24,2,35,0,12
	.byte	'CII1',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'CIS1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TSEL0_1',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TSEL1_1',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'CII2',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'CIS2',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TSEL0_2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TSEL1_2',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'CII3',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'CIS3',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TSEL0_3',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TSEL1_3',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,192,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23174
	.byte	4,2,35,0,0,15,20
	.word	537
	.byte	16,19,0,11
	.byte	'_Ifx_GTM_CDTM_DTM',0,12,136,78,25,64,14
	.byte	'CTRL',0
	.word	20445
	.byte	4,2,35,0,14
	.byte	'CH_CTRL1',0
	.word	21030
	.byte	4,2,35,4,14
	.byte	'CH_CTRL2',0
	.word	21661
	.byte	4,2,35,8,14
	.byte	'CH_CTRL2_SR',0
	.word	22391
	.byte	4,2,35,12,14
	.byte	'PS_CTRL',0
	.word	22636
	.byte	4,2,35,16,14
	.byte	'CH',0
	.word	22887
	.byte	16,2,35,20,14
	.byte	'CH_SR',0
	.word	23134
	.byte	4,2,35,36,14
	.byte	'CH_CTRL3',0
	.word	23584
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	23624
	.byte	20,2,35,44,0,10
	.word	23633
	.byte	3
	.word	23812
	.byte	17,17,70,9,1,18
	.byte	'IfxGtm_Dtm_ClockSource_systemClock',0,0,18
	.byte	'IfxGtm_Dtm_ClockSource_cmuClock0',0,1,18
	.byte	'IfxGtm_Dtm_ClockSource_cmuClock1',0,2,18
	.byte	'IfxGtm_Dtm_ClockSource_cmuClock2',0,3,0
.L318:
	.byte	4
	.byte	'IfxGtm_Dtm_setClockSource',0,3,17,212,1,17,1,1
.L321:
	.byte	5
	.byte	'dtm',0,17,212,1,61
	.word	23817
.L323:
	.byte	5
	.byte	'clockSource',0,17,212,1,89
	.word	23822
.L325:
	.byte	6,0
.L331:
	.byte	17,13,189,2,9,1,18
	.byte	'IfxGtm_Dtm_Ch_none',0,127,18
	.byte	'IfxGtm_Dtm_Ch_0',0,0,18
	.byte	'IfxGtm_Dtm_Ch_1',0,1,18
	.byte	'IfxGtm_Dtm_Ch_2',0,2,18
	.byte	'IfxGtm_Dtm_Ch_3',0,3,0,17,17,103,9,1,18
	.byte	'IfxGtm_Dtm_DeadTimePath_feedThrough',0,0,18
	.byte	'IfxGtm_Dtm_DeadTimePath_enable',0,1,0
.L333:
	.byte	4
	.byte	'IfxGtm_Dtm_setOutput0DeadTimePath',0,3,17,218,1,17,1,1
.L336:
	.byte	5
	.byte	'dtm',0,17,218,1,69
	.word	23817
.L338:
	.byte	5
	.byte	'channel',0,17,218,1,88
	.word	24040
.L340:
	.byte	5
	.byte	'deadTimePath',0,17,218,1,121
	.word	24140
.L342:
	.byte	6,0
.L347:
	.byte	4
	.byte	'IfxGtm_Dtm_setOutput1DeadTimePath',0,3,17,227,1,17,1,1
.L350:
	.byte	5
	.byte	'dtm',0,17,227,1,69
	.word	23817
.L352:
	.byte	5
	.byte	'channel',0,17,227,1,88
	.word	24040
.L354:
	.byte	5
	.byte	'deadTimePath',0,17,227,1,121
	.word	24140
.L356:
	.byte	6,0,17,13,142,2,9,1,18
	.byte	'IfxGtm_Cdtm_none',0,127,18
	.byte	'IfxGtm_Cdtm_0',0,0,18
	.byte	'IfxGtm_Cdtm_1',0,1,18
	.byte	'IfxGtm_Cdtm_2',0,2,18
	.byte	'IfxGtm_Cdtm_3',0,3,18
	.byte	'IfxGtm_Cdtm_4',0,4,18
	.byte	'IfxGtm_Cdtm_5',0,5,18
	.byte	'IfxGtm_Cdtm_6',0,6,0,17,13,243,1,9,1,18
	.byte	'IfxGtm_Atom_0',0,0,18
	.byte	'IfxGtm_Atom_1',0,1,18
	.byte	'IfxGtm_Atom_2',0,2,18
	.byte	'IfxGtm_Atom_3',0,3,18
	.byte	'IfxGtm_Atom_4',0,4,18
	.byte	'IfxGtm_Atom_5',0,5,0,8
	.byte	'IfxGtm_Dtm_getCdtmIndex',0,3,17,254,1,24
	.word	24409
	.byte	1,1,5
	.byte	'atom',0,17,254,1,60
	.word	24547
	.byte	6,0
.L316:
	.byte	17,13,176,2,9,1,18
	.byte	'IfxGtm_Dtm_none',0,127,18
	.byte	'IfxGtm_Dtm_0',0,0,18
	.byte	'IfxGtm_Dtm_1',0,1,18
	.byte	'IfxGtm_Dtm_2',0,2,18
	.byte	'IfxGtm_Dtm_3',0,3,18
	.byte	'IfxGtm_Dtm_4',0,4,18
	.byte	'IfxGtm_Dtm_5',0,5,0
.L306:
	.byte	8
	.byte	'IfxGtm_Dtm_getDtmIndex',0,3,17,132,2,23
	.word	24702
	.byte	1,1
.L308:
	.byte	5
	.byte	'atom',0,17,132,2,58
	.word	24547
.L310:
	.byte	5
	.byte	'channel',0,17,132,2,79
	.word	19509
.L312:
	.byte	6,0
.L326:
	.byte	8
	.byte	'IfxGtm_Dtm_getDtmChannel',0,3,17,149,2,26
	.word	24040
	.byte	1,1
.L328:
	.byte	5
	.byte	'atomChannel',0,17,149,2,66
	.word	19509
.L330:
	.byte	6,0
.L392:
	.byte	4
	.byte	'IfxGtm_Dtm_setDeadtime',0,3,17,170,2,17,1,1
.L395:
	.byte	5
	.byte	'dtm',0,17,170,2,58
	.word	23817
.L397:
	.byte	5
	.byte	'channel',0,17,170,2,77
	.word	24040
.L399:
	.byte	5
	.byte	'risingEdge',0,17,170,2,93
	.word	9855
.L401:
	.byte	5
	.byte	'fallingEdge',0,17,170,2,113
	.word	238
.L403:
	.byte	6,0,25
	.word	530
	.byte	26
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	25049
	.byte	0,10
	.word	340
	.byte	3
	.word	340
	.byte	27
	.byte	'__cmpswapw',0
	.word	25091
	.byte	1,1,1,1,28
	.byte	'p',0
	.word	25096
	.byte	28
	.byte	'value',0
	.word	340
	.byte	28
	.byte	'compare',0
	.word	340
	.byte	0,29
	.word	186
	.byte	30
	.word	212
	.byte	6,0,29
	.word	247
	.byte	30
	.word	279
	.byte	6,0,29
	.word	292
	.byte	6,0,29
	.word	356
	.byte	30
	.word	373
	.byte	30
	.word	389
	.byte	30
	.word	402
	.byte	6,0,29
	.word	449
	.byte	30
	.word	468
	.byte	6,0,29
	.word	484
	.byte	30
	.word	499
	.byte	30
	.word	513
	.byte	6,0,29
	.word	893
	.byte	30
	.word	921
	.byte	6,0,29
	.word	1680
	.byte	30
	.word	1720
	.byte	30
	.word	1738
	.byte	6,0,29
	.word	1758
	.byte	30
	.word	1801
	.byte	6,0,29
	.word	1821
	.byte	30
	.word	1859
	.byte	30
	.word	1877
	.byte	6,0,29
	.word	1897
	.byte	30
	.word	1938
	.byte	6,0,29
	.word	1958
	.byte	30
	.word	2009
	.byte	6,0,29
	.word	2029
	.byte	6,0,29
	.word	9690
	.byte	30
	.word	9718
	.byte	30
	.word	9732
	.byte	30
	.word	9750
	.byte	6,0,29
	.word	10933
	.byte	30
	.word	10978
	.byte	6,0,29
	.word	11080
	.byte	30
	.word	11115
	.byte	30
	.word	11134
	.byte	6,0,29
	.word	11151
	.byte	30
	.word	11186
	.byte	30
	.word	11205
	.byte	6,0,17,7,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,7,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,17,19,113,9,1,18
	.byte	'Ifx_ActiveState_low',0,0,18
	.byte	'Ifx_ActiveState_high',0,1,0,31,18,200,1,9,16,14
	.byte	'deadtime',0
	.word	238
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	238
	.byte	4,2,35,4,14
	.byte	'channelCount',0
	.word	537
	.byte	1,2,35,8,14
	.byte	'emergencyEnabled',0
	.word	537
	.byte	1,2,35,9,14
	.byte	'outputMode',0
	.word	25392
	.byte	1,2,35,10,14
	.byte	'outputDriver',0
	.word	25488
	.byte	1,2,35,11,14
	.byte	'ccxOutputEnabled',0
	.word	25911
	.byte	1,2,35,12,14
	.byte	'coutxOutputEnabled',0
	.word	25911
	.byte	1,2,35,13,14
	.byte	'ccxActiveState',0
	.word	25911
	.byte	1,2,35,14,14
	.byte	'coutxActiveState',0
	.word	25911
	.byte	1,2,35,15,0,3
	.word	25962
	.byte	32
	.byte	'IfxStdIf_PwmHl_initConfig',0,18,209,2,17,1,1,1,1,5
	.byte	'config',0,18,209,2,66
	.word	26199
	.byte	0,29
	.word	19690
	.byte	30
	.word	19735
	.byte	30
	.word	19749
	.byte	6,0,17,20,83,9,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk1',0,1,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk2',0,2,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk3',0,3,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_cmuFxclk4',0,4,18
	.byte	'IfxGtm_Tom_Ch_ClkSrc_noClock',0,5,0,11
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,12,199,40,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'SR0_TRIG',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'SL',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'ECLK_SRC',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRIG_PULSE',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'UDMODE',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'OSM_TRIG',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EXT_TRIG',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EXTTRIGOUT',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'SPE_TRIG',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'BITREV',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'SPEM',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'GCM',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FREEZE',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,224,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26475
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,12,128,41,16,4,12
	.byte	'SR0',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,136,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26957
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,12,135,41,16,4,12
	.byte	'SR1',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,144,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27067
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,12,178,40,16,4,12
	.byte	'CM0',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,200,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27177
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,12,185,40,16,4,12
	.byte	'CM1',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,208,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27287
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,12,192,40,16,4,12
	.byte	'CN0',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,216,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27397
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,12,142,41,16,4,12
	.byte	'OL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,13,12,152,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27507
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,12,248,40,16,4,12
	.byte	'CCU0TC',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,128,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27616
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,12,225,40,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,232,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27753
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,12,233,40,16,4,12
	.byte	'TRG_CCU0TC0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,240,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27900
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,12,241,40,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,248,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28048
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ',0,12,226,72,25,16,14
	.byte	'NOTIFY',0
	.word	27713
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	27860
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	28008
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	28127
	.byte	4,2,35,12,0,10
	.word	28167
	.byte	11
	.byte	'_Ifx_GTM_TOM_CH',0,12,247,72,25,44,14
	.byte	'CTRL',0
	.word	26917
	.byte	4,2,35,0,14
	.byte	'SR0',0
	.word	27027
	.byte	4,2,35,4,14
	.byte	'SR1',0
	.word	27137
	.byte	4,2,35,8,14
	.byte	'CM0',0
	.word	27247
	.byte	4,2,35,12,14
	.byte	'CM1',0
	.word	27357
	.byte	4,2,35,16,14
	.byte	'CN0',0
	.word	27467
	.byte	4,2,35,20,14
	.byte	'STAT',0
	.word	27576
	.byte	4,2,35,24,14
	.byte	'IRQ',0
	.word	28253
	.byte	16,2,35,28,0,10
	.word	28258
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC_GLB_CTRL_Bits',0,12,207,41,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,192,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28392
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC_ACT_TB_Bits',0,12,149,41,16,4,12
	.byte	'ACT_TB',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	936
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	5,0,2,35,0,0,13,12,160,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28841
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC_FUPD_CTRL_Bits',0,12,186,41,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,184,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28996
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC_INT_TRIG_Bits',0,12,230,41,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,200,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29427
	.byte	4,2,35,0,0,10
	.word	28258
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC_ENDIS_CTRL_Bits',0,12,158,41,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,168,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29701
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC_ENDIS_STAT_Bits',0,12,172,41,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,176,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29988
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC_OUTEN_CTRL_Bits',0,12,244,41,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,208,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30275
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC_OUTEN_STAT_Bits',0,12,130,42,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,216,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30562
	.byte	4,2,35,0,0,10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	10
	.word	28258
	.byte	15,148,8
	.word	537
	.byte	16,147,8,0,11
	.byte	'_Ifx_GTM_TOM',0,12,144,73,25,128,16,14
	.byte	'CH0',0
	.word	28387
	.byte	44,2,35,0,14
	.byte	'reserved_2C',0
	.word	3092
	.byte	4,2,35,44,14
	.byte	'TGC0_GLB_CTRL',0
	.word	28801
	.byte	4,2,35,48,14
	.byte	'TGC0_ACT_TB',0
	.word	28956
	.byte	4,2,35,52,14
	.byte	'TGC0_FUPD_CTRL',0
	.word	29387
	.byte	4,2,35,56,14
	.byte	'TGC0_INT_TRIG',0
	.word	29656
	.byte	4,2,35,60,14
	.byte	'CH1',0
	.word	29696
	.byte	44,2,35,64,14
	.byte	'reserved_6C',0
	.word	3092
	.byte	4,2,35,108,14
	.byte	'TGC0_ENDIS_CTRL',0
	.word	29948
	.byte	4,2,35,112,14
	.byte	'TGC0_ENDIS_STAT',0
	.word	30235
	.byte	4,2,35,116,14
	.byte	'TGC0_OUTEN_CTRL',0
	.word	30522
	.byte	4,2,35,120,14
	.byte	'TGC0_OUTEN_STAT',0
	.word	30809
	.byte	4,2,35,124,14
	.byte	'CH2',0
	.word	30849
	.byte	44,3,35,128,1,14
	.byte	'reserved_AC',0
	.word	23624
	.byte	20,3,35,172,1,14
	.byte	'CH3',0
	.word	30854
	.byte	44,3,35,192,1,14
	.byte	'reserved_EC',0
	.word	23624
	.byte	20,3,35,236,1,14
	.byte	'CH4',0
	.word	30859
	.byte	44,3,35,128,2,14
	.byte	'reserved_12C',0
	.word	23624
	.byte	20,3,35,172,2,14
	.byte	'CH5',0
	.word	30864
	.byte	44,3,35,192,2,14
	.byte	'reserved_16C',0
	.word	23624
	.byte	20,3,35,236,2,14
	.byte	'CH6',0
	.word	30869
	.byte	44,3,35,128,3,14
	.byte	'reserved_1AC',0
	.word	23624
	.byte	20,3,35,172,3,14
	.byte	'CH7',0
	.word	30874
	.byte	44,3,35,192,3,14
	.byte	'reserved_1EC',0
	.word	23624
	.byte	20,3,35,236,3,14
	.byte	'CH8',0
	.word	30879
	.byte	44,3,35,128,4,14
	.byte	'reserved_22C',0
	.word	3092
	.byte	4,3,35,172,4,14
	.byte	'TGC1_GLB_CTRL',0
	.word	28801
	.byte	4,3,35,176,4,14
	.byte	'TGC1_ACT_TB',0
	.word	28956
	.byte	4,3,35,180,4,14
	.byte	'TGC1_FUPD_CTRL',0
	.word	29387
	.byte	4,3,35,184,4,14
	.byte	'TGC1_INT_TRIG',0
	.word	29656
	.byte	4,3,35,188,4,14
	.byte	'CH9',0
	.word	30884
	.byte	44,3,35,192,4,14
	.byte	'reserved_26C',0
	.word	3092
	.byte	4,3,35,236,4,14
	.byte	'TGC1_ENDIS_CTRL',0
	.word	29948
	.byte	4,3,35,240,4,14
	.byte	'TGC1_ENDIS_STAT',0
	.word	30235
	.byte	4,3,35,244,4,14
	.byte	'TGC1_OUTEN_CTRL',0
	.word	30522
	.byte	4,3,35,248,4,14
	.byte	'TGC1_OUTEN_STAT',0
	.word	30809
	.byte	4,3,35,252,4,14
	.byte	'CH10',0
	.word	30889
	.byte	44,3,35,128,5,14
	.byte	'reserved_2AC',0
	.word	23624
	.byte	20,3,35,172,5,14
	.byte	'CH11',0
	.word	30894
	.byte	44,3,35,192,5,14
	.byte	'reserved_2EC',0
	.word	23624
	.byte	20,3,35,236,5,14
	.byte	'CH12',0
	.word	30899
	.byte	44,3,35,128,6,14
	.byte	'reserved_32C',0
	.word	23624
	.byte	20,3,35,172,6,14
	.byte	'CH13',0
	.word	30904
	.byte	44,3,35,192,6,14
	.byte	'reserved_36C',0
	.word	23624
	.byte	20,3,35,236,6,14
	.byte	'CH14',0
	.word	30909
	.byte	44,3,35,128,7,14
	.byte	'reserved_3AC',0
	.word	23624
	.byte	20,3,35,172,7,14
	.byte	'CH15',0
	.word	30914
	.byte	44,3,35,192,7,14
	.byte	'reserved_3EC',0
	.word	30919
	.byte	148,8,3,35,236,7,0,10
	.word	30930
	.byte	3
	.word	31932
.L304:
	.byte	17,13,161,3,9,1,18
	.byte	'IfxGtm_Tom_Ch_none',0,127,18
	.byte	'IfxGtm_Tom_Ch_0',0,0,18
	.byte	'IfxGtm_Tom_Ch_1',0,1,18
	.byte	'IfxGtm_Tom_Ch_2',0,2,18
	.byte	'IfxGtm_Tom_Ch_3',0,3,18
	.byte	'IfxGtm_Tom_Ch_4',0,4,18
	.byte	'IfxGtm_Tom_Ch_5',0,5,18
	.byte	'IfxGtm_Tom_Ch_6',0,6,18
	.byte	'IfxGtm_Tom_Ch_7',0,7,18
	.byte	'IfxGtm_Tom_Ch_8',0,8,18
	.byte	'IfxGtm_Tom_Ch_9',0,9,18
	.byte	'IfxGtm_Tom_Ch_10',0,10,18
	.byte	'IfxGtm_Tom_Ch_11',0,11,18
	.byte	'IfxGtm_Tom_Ch_12',0,12,18
	.byte	'IfxGtm_Tom_Ch_13',0,13,18
	.byte	'IfxGtm_Tom_Ch_14',0,14,18
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,33
	.byte	'IfxGtm_Tom_Ch_getClockSource',0,20,156,1,33
	.word	26273
	.byte	1,1,1,1,5
	.byte	'tom',0,20,156,1,75
	.word	31937
	.byte	5
	.byte	'channel',0,20,156,1,94
	.word	31942
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setClockSource',0,20,249,1,17,1,1,1,1,5
	.byte	'tom',0,20,249,1,59
	.word	31937
	.byte	5
	.byte	'channel',0,20,249,1,78
	.word	31942
	.byte	5
	.byte	'clock',0,20,249,1,108
	.word	26273
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setCompareShadow',0,20,155,2,17,1,1,1,1,5
	.byte	'tom',0,20,155,2,61
	.word	31937
	.byte	5
	.byte	'channel',0,20,155,2,80
	.word	31942
	.byte	5
	.byte	'shadowZero',0,20,155,2,96
	.word	9855
	.byte	5
	.byte	'shadowOne',0,20,155,2,115
	.word	9855
	.byte	0,17,20,103,9,1,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onCm0',0,0,18
	.byte	'IfxGtm_Tom_Ch_ResetEvent_onTrigger',0,1,0,32
	.byte	'IfxGtm_Tom_Ch_setResetSource',0,20,221,2,17,1,1,1,1,5
	.byte	'tom',0,20,221,2,59
	.word	31937
	.byte	5
	.byte	'channel',0,20,221,2,78
	.word	31942
	.byte	5
	.byte	'event',0,20,221,2,112
	.word	32531
	.byte	0,32
	.byte	'IfxGtm_Tom_Ch_setSignalLevel',0,20,229,2,17,1,1,1,1,5
	.byte	'tom',0,20,229,2,59
	.word	31937
	.byte	5
	.byte	'channel',0,20,229,2,78
	.word	31942
	.byte	5
	.byte	'activeState',0,20,229,2,103
	.word	25911
	.byte	0,17,20,95,9,1,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_forward',0,0,18
	.byte	'IfxGtm_Tom_Ch_OutputTrigger_generate',0,1,0,32
	.byte	'IfxGtm_Tom_Ch_setTriggerOutput',0,20,245,2,17,1,1,1,1,5
	.byte	'tom',0,20,245,2,61
	.word	31937
	.byte	5
	.byte	'channel',0,20,245,2,80
	.word	31942
	.byte	5
	.byte	'trigger',0,20,245,2,117
	.word	32781
	.byte	0,10
	.word	28258
	.byte	11
	.byte	'IfxGtm_Tom_TGC',0,13,214,3,8,80,14
	.byte	'GLB_CTRL',0
	.word	28801
	.byte	4,2,35,0,14
	.byte	'ACT_TB',0
	.word	28956
	.byte	4,2,35,4,14
	.byte	'FUPD_CTRL',0
	.word	29387
	.byte	4,2,35,8,14
	.byte	'INT_TRIG',0
	.word	29656
	.byte	4,2,35,12,14
	.byte	'xxxCH1',0
	.word	32952
	.byte	44,2,35,16,14
	.byte	'reserved',0
	.word	9855
	.byte	4,2,35,60,14
	.byte	'ENDIS_CTRL',0
	.word	29948
	.byte	4,2,35,64,14
	.byte	'ENDIS_STAT',0
	.word	30235
	.byte	4,2,35,68,14
	.byte	'OUTEN_CTRL',0
	.word	30522
	.byte	4,2,35,72,14
	.byte	'OUTEN_STAT',0
	.word	30809
	.byte	4,2,35,76,0,10
	.word	32957
	.byte	3
	.word	33164
	.byte	32
	.byte	'IfxGtm_Tom_Tgc_enableChannels',0,20,188,3,17,1,1,1,1,5
	.byte	'tgc',0,20,188,3,64
	.word	33169
	.byte	5
	.byte	'enableMask',0,20,188,3,76
	.word	1088
	.byte	5
	.byte	'disableMask',0,20,188,3,95
	.word	1088
	.byte	5
	.byte	'immediate',0,20,188,3,116
	.word	537
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_enableChannelsOutput',0,20,197,3,17,1,1,1,1,5
	.byte	'tgc',0,20,197,3,70
	.word	33169
	.byte	5
	.byte	'enableMask',0,20,197,3,82
	.word	1088
	.byte	5
	.byte	'disableMask',0,20,197,3,101
	.word	1088
	.byte	5
	.byte	'immediate',0,20,197,3,122
	.word	537
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_setChannelsForceUpdate',0,20,246,3,17,1,1,1,1,5
	.byte	'tgc',0,20,246,3,72
	.word	33169
	.byte	5
	.byte	'enableMask',0,20,246,3,84
	.word	1088
	.byte	5
	.byte	'disableMask',0,20,246,3,103
	.word	1088
	.byte	5
	.byte	'resetEnableMask',0,20,246,3,123
	.word	1088
	.byte	5
	.byte	'resetDisableMask',0,20,246,3,147,1
	.word	1088
	.byte	0,32
	.byte	'IfxGtm_Tom_Tgc_trigger',0,20,132,4,17,1,1,1,1,5
	.byte	'tgc',0,20,132,4,57
	.word	33169
	.byte	0,17,13,152,3,9,1,18
	.byte	'IfxGtm_Tom_0',0,0,18
	.byte	'IfxGtm_Tom_1',0,1,18
	.byte	'IfxGtm_Tom_2',0,2,0,17,21,83,9,1,18
	.byte	'IfxGtm_ToutSel_a',0,0,18
	.byte	'IfxGtm_ToutSel_b',0,1,18
	.byte	'IfxGtm_ToutSel_c',0,2,18
	.byte	'IfxGtm_ToutSel_d',0,3,18
	.byte	'IfxGtm_ToutSel_e',0,4,18
	.byte	'IfxGtm_ToutSel_f',0,5,18
	.byte	'IfxGtm_ToutSel_g',0,6,18
	.byte	'IfxGtm_ToutSel_h',0,7,18
	.byte	'IfxGtm_ToutSel_i',0,8,18
	.byte	'IfxGtm_ToutSel_j',0,9,18
	.byte	'IfxGtm_ToutSel_k',0,10,18
	.byte	'IfxGtm_ToutSel_l',0,11,0,31,7,246,1,9,8,14
	.byte	'port',0
	.word	9582
	.byte	4,2,35,0,14
	.byte	'pinIndex',0
	.word	537
	.byte	1,2,35,4,0,17,7,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,31,21,124,15,20,14
	.byte	'tom',0
	.word	33606
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	31942
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	33658
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	9855
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	33892
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	33931
	.byte	1,2,35,16,0,25
	.word	34148
	.byte	3
	.word	34245
	.byte	32
	.byte	'IfxGtm_PinMap_setTomTout',0,21,147,1,17,1,1,1,1,5
	.byte	'config',0,21,147,1,62
	.word	34250
	.byte	5
	.byte	'outputMode',0,21,147,1,89
	.word	25392
	.byte	5
	.byte	'padDriver',0,21,147,1,119
	.word	25488
	.byte	0,29
	.word	19870
	.byte	6,0,29
	.word	19904
	.byte	6,0,29
	.word	19946
	.byte	30
	.word	19987
	.byte	6,0,29
	.word	20006
	.byte	30
	.word	20061
	.byte	6,0,29
	.word	20080
	.byte	30
	.word	20120
	.byte	30
	.word	20137
	.byte	24,6,0,0,29
	.word	20156
	.byte	30
	.word	20179
	.byte	24,34
	.word	20200
	.byte	35
	.word	20238
	.byte	0,6,0,0,29
	.word	20200
	.byte	6,0,29
	.word	23970
	.byte	30
	.word	24004
	.byte	30
	.word	24017
	.byte	6,0,29
	.word	24217
	.byte	30
	.word	24259
	.byte	30
	.word	24272
	.byte	30
	.word	24289
	.byte	6,0,29
	.word	24313
	.byte	30
	.word	24355
	.byte	30
	.word	24368
	.byte	30
	.word	24385
	.byte	6,0,29
	.word	24650
	.byte	30
	.word	24686
	.byte	6,0,29
	.word	24817
	.byte	30
	.word	24852
	.byte	30
	.word	24866
	.byte	6,0,29
	.word	24885
	.byte	30
	.word	24922
	.byte	6,0,29
	.word	24945
	.byte	30
	.word	24976
	.byte	30
	.word	24989
	.byte	30
	.word	25006
	.byte	30
	.word	25026
	.byte	6,0,11
	.byte	'_Ifx_GTM_REV_Bits',0,12,211,36,16,4,12
	.byte	'STEP',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'NO',0,4
	.word	936
	.byte	4,20,2,35,0,12
	.byte	'MINOR',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'MAJOR',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'DEV_CODE0',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'DEV_CODE1',0,4
	.word	936
	.byte	4,4,2,35,0,12
	.byte	'DEV_CODE2',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,216,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34563
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RST_Bits',0,12,223,36,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	26,5,2,35,0,12
	.byte	'BRIDGE_MODE_WRDIS',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,224,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34755
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CTRL_Bits',0,12,136,12,16,4,12
	.byte	'RF_PROT',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TO_MODE',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'TO_VAL',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'AEIM_CLUSTER',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,248,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34916
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,12,139,1,16,4,12
	.byte	'TO_ADDR',0,4
	.word	936
	.byte	20,12,2,35,0,12
	.byte	'TO_W1R0',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	11,0,2,35,0,0,13,12,208,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35129
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,12,187,29,16,4,12
	.byte	'AEI_TO_XPT',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'AEIM_USP_ADDR',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'AEIM_IM_ADDR',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'AEIM_USP_BE',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CLK_EN_ERR',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'CLK_PER_ERR',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	15,8,2,35,0,12
	.byte	'CLK_EN_ERR_STATE0',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'CLK_EN_ERR_STATE1',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'CLK_EN_EXP_STATE0',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'CLK_EN_EXP_STATE1',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,152,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35264
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,12,150,29,16,4,12
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'AEIM_USP_ADDR_IRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'AEIM_IM_ADDR_IRQ_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'AEIM_USP_BE_IRQ_EN',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CLK_EN_ERR_IRQ_EN',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'CLK_PER_ERR_IRQ_EN',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,128,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35728
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,12,165,29,16,4,12
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_AEI_USP_BE',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG_AEIM_USP_ADDR',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG_AEIM_IM_ADDR',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TRG_AEIM_USP_BE',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TRG_CLK_EN_ERR',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TRG_CLK_PER_ERR',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,136,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,12,180,29,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,144,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36428
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ',0,12,249,67,25,16,14
	.byte	'NOTIFY',0
	.word	35688
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	36049
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	36388
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	36500
	.byte	4,2,35,12,0,10
	.word	36540
	.byte	11
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,12,207,22,16,4,12
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'AEIM_USP_ADDR_EIRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'AEIM_IM_ADDR_EIRQ_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'AEIM_USP_BE_EIRQ_EN',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CLK_EN_ERR_EIRQ_EN',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'CLK_PER_ERR_EIRQ_EN',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,152,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36624
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_HW_CONF_Bits',0,12,230,22,16,4,12
	.byte	'GRSTEN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'BRIDGE_MODE_RST',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CFG_CLOCK_RATE',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ATOM_OUT_RST',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ATOM_TRIG_CHAIN',0,4
	.word	936
	.byte	3,24,2,35,0,12
	.byte	'TOM_OUT_RST',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TOM_TRIG_CHAIN',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'RAM_INIT_RST',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'ERM',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ARU_CONNECT_CONFIG',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'IRQ_MODE_LEVEL',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'IRQ_MODE_PULSE',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'IRQ_MODE_PULSE_NOTIFY',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'IRQ_MODE_SINGLE_PULSE',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'ATOM_TRIG_INTCHAIN',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'TOM_TRIG_INTCHAIN',0,4
	.word	936
	.byte	5,3,2,35,0,12
	.byte	'INT_CLK_EN_GEN',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,168,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36995
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CFG_Bits',0,12,245,9,16,4,12
	.byte	'SRC_IN_MUX',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,13,12,232,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37579
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AEI_STA_XPT_Bits',0,12,147,1,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	20,12,2,35,0,12
	.byte	'W1R0',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	11,0,2,35,0,0,13,12,216,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37688
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,12,233,6,16,4,12
	.byte	'BRG_MODE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MSK_WR_RSP',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'BYPASS_SYNC',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	5,24,2,35,0,12
	.byte	'MODE_UP_PGR',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'BUFF_OVL',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	3,16,2,35,0,12
	.byte	'BRG_RST',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	7,8,2,35,0,12
	.byte	'BUFF_DPT',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37816
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,12,250,6,16,4,12
	.byte	'NEW_TRAN_PTR',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'FIRST_RSP_PTR',0,4
	.word	936
	.byte	5,22,2,35,0,12
	.byte	'TRAN_IN_PGR',0,4
	.word	936
	.byte	5,17,2,35,0,12
	.byte	'ABT_TRAN_PGR',0,4
	.word	936
	.byte	5,12,2,35,0,12
	.byte	'FBC',0,4
	.word	936
	.byte	6,6,2,35,0,12
	.byte	'RSP_TRAN_RDY',0,4
	.word	936
	.byte	6,0,2,35,0,0,13,12,168,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38153
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,12,133,7,16,4,12
	.byte	'TRAN_IN_PGR2',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,176,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38361
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE',0,12,142,68,25,12,14
	.byte	'MODE',0
	.word	38113
	.byte	4,2,35,0,14
	.byte	'PTR1',0
	.word	38321
	.byte	4,2,35,4,14
	.byte	'PTR2',0
	.word	38440
	.byte	4,2,35,8,0,10
	.word	38480
	.byte	11
	.byte	'_Ifx_GTM_MCS_AEM_DIS_Bits',0,12,161,30,16,4,12
	.byte	'DIS_CLS0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'DIS_CLS1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'DIS_CLS2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'DIS_CLS3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'DIS_CLS4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'DIS_CLS5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'DIS_CLS6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'DIS_CLS7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'DIS_CLS8',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'DIS_CLS9',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'DIS_CLS10',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'DIS_CLS11',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38550
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AUX_IN_SRC_TIM_Bits',0,12,210,5,16,4,12
	.byte	'SRC_CH0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SRC_CH1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SRC_CH2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SRC_CH3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SRC_CH4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SRC_CH5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SRC_CH6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SRC_CH7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'SEL_OUT_N_CH0',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'SEL_OUT_N_CH1',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'SEL_OUT_N_CH2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'SEL_OUT_N_CH3',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'SEL_OUT_N_CH4',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'SEL_OUT_N_CH5',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'SEL_OUT_N_CH6',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'SEL_OUT_N_CH7',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38888
	.byte	4,2,35,0,0,15,24
	.word	39321
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_AUX_IN_SRC',0,12,162,68,25,24,14
	.byte	'TIM',0
	.word	39361
	.byte	24,2,35,0,0,10
	.word	39370
	.byte	11
	.byte	'_Ifx_GTM_EXT_CAP_EN_Bits',0,12,222,22,16,4,12
	.byte	'TIM_I_EXT_CAP_EN',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'TIM_IP1_EXT_CAP_EN',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,160,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39415
	.byte	4,2,35,0,0,15,24
	.word	39528
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_OUT_TOM_Bits',0,12,248,34,16,4,12
	.byte	'TOM_OUT',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'TOM_OUT_N',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,144,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39577
	.byte	4,2,35,0,0,15,12
	.word	39646
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_OUT_ATOM_Bits',0,12,239,34,16,4,12
	.byte	'ATOM_I_OUT',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'ATOM_I_OUT_N',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'ATOM_IP1_OUT',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'ATOM_IP1_OUT_N',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39695
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OUT',0,12,180,68,25,48,14
	.byte	'TOM',0
	.word	39686
	.byte	12,2,35,0,14
	.byte	'reserved_C',0
	.word	5252
	.byte	12,2,35,12,14
	.byte	'ATOM0',0
	.word	39821
	.byte	4,2,35,24,14
	.byte	'ATOM2',0
	.word	39821
	.byte	4,2,35,28,14
	.byte	'ATOM4',0
	.word	39821
	.byte	4,2,35,32,14
	.byte	'reserved_24',0
	.word	5252
	.byte	12,2,35,36,0,10
	.word	39861
	.byte	11
	.byte	'_Ifx_GTM_CLS_CLK_CFG_Bits',0,12,134,10,16,4,12
	.byte	'CLS0_CLK_DIV',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'CLS1_CLK_DIV',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'CLS2_CLK_DIV',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'CLS3_CLK_DIV',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'CLS4_CLK_DIV',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'CLS5_CLK_DIV',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,248,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39985
	.byte	4,2,35,0,0,15,76
	.word	537
	.byte	16,75,0,11
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,12,189,38,16,4,12
	.byte	'ENDIS_CH0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CH1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CH2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CH3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,160,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40372
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,12,249,37,16,4,12
	.byte	'LOW_RES',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,216,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40548
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,12,242,37,16,4,12
	.byte	'BASE',0,4
	.word	936
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	5,0,2,35,0,0,13,12,208,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40685
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,12,136,38,16,4,12
	.byte	'CH_MODE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,232,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40798
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,12,129,38,16,4,12
	.byte	'BASE',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40935
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,12,151,38,16,4,12
	.byte	'CH_MODE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,248,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41048
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,12,144,38,16,4,12
	.byte	'BASE',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,240,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41185
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH3_CTRL_Bits',0,12,180,38,16,4,12
	.byte	'CH_MODE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'USE_CH2',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,152,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41298
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH3_BASE_Bits',0,12,159,38,16,4,12
	.byte	'BASE',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41454
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH3_BASE_MARK_Bits',0,12,173,38,16,4,12
	.byte	'BASE_MARK',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41567
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH3_BASE_CAPTURE_Bits',0,12,166,38,16,4,12
	.byte	'BASE_CAPTURE',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41690
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU',0,12,203,68,25,44,14
	.byte	'CHEN',0
	.word	40508
	.byte	4,2,35,0,14
	.byte	'CH0_CTRL',0
	.word	40645
	.byte	4,2,35,4,14
	.byte	'CH0_BASE',0
	.word	40758
	.byte	4,2,35,8,14
	.byte	'CH1_CTRL',0
	.word	40895
	.byte	4,2,35,12,14
	.byte	'CH1_BASE',0
	.word	41008
	.byte	4,2,35,16,14
	.byte	'CH2_CTRL',0
	.word	41145
	.byte	4,2,35,20,14
	.byte	'CH2_BASE',0
	.word	41258
	.byte	4,2,35,24,14
	.byte	'CH3_CTRL',0
	.word	41414
	.byte	4,2,35,28,14
	.byte	'CH3_BASE',0
	.word	41527
	.byte	4,2,35,32,14
	.byte	'CH3_BASE_MARK',0
	.word	41650
	.byte	4,2,35,36,14
	.byte	'CH3_BASE_CAPTURE',0
	.word	41779
	.byte	4,2,35,40,0,10
	.word	41819
	.byte	15,84
	.word	537
	.byte	16,83,0,11
	.byte	'_Ifx_GTM_MON_STATUS_Bits',0,12,253,32,16,4,12
	.byte	'ACT_CMU0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ACT_CMU1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ACT_CMU2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ACT_CMU3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACT_CMU4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ACT_CMU5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ACT_CMU6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ACT_CMU7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ACT_CMUFX0',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ACT_CMUFX1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ACT_CMUFX2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ACT_CMUFX3',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'ACT_CMUFX4',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ACT_CMU8',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'CMP_ERR',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	3,12,2,35,0,12
	.byte	'MCS0_ERR',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCS1_ERR',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCS2_ERR',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCS3_ERR',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCS4_ERR',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,128,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42060
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_R0_Bits',0,12,179,32,16,4,12
	.byte	'MCA_0_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCA_0_1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCA_0_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCA_0_3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCA_0_4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCA_0_5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCA_0_6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCA_0_7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'MCA_1_0',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCA_1_1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'MCA_1_2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MCA_1_3',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCA_1_4',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCA_1_5',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCA_1_6',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCA_1_7',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCA_2_0',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCA_2_1',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCA_2_2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCA_2_3',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'MCA_2_4',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCA_2_5',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCA_2_6',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCA_2_7',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCA_3_0',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCA_3_1',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'MCA_3_2',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'MCA_3_3',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'MCA_3_4',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'MCA_3_5',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'MCA_3_6',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'MCA_3_7',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,240,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42748
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_R1_Bits',0,12,216,32,16,4,12
	.byte	'MCA_4_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCA_4_1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCA_4_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCA_4_3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCA_4_4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCA_4_5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCA_4_6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCA_4_7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'MCA_5_0',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCA_5_1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'MCA_5_2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MCA_5_3',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCA_5_4',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCA_5_5',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCA_5_6',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCA_5_7',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCA_6_0',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCA_6_1',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCA_6_2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCA_6_3',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'MCA_6_4',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCA_6_5',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCA_6_6',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCA_6_7',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCA_7_0',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCA_7_1',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'MCA_7_2',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'MCA_7_3',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'MCA_7_4',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'MCA_7_5',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'MCA_7_6',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'MCA_7_7',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,248,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43433
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_MCS_Bits',0,12,165,32,16,4,12
	.byte	'MCA_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCA_1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCA_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCA_3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCA_4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCA_5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCA_6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCA_7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,232,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44118
	.byte	4,2,35,0,0,15,20
	.word	44314
	.byte	16,4,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY',0,12,231,68,25,28,14
	.byte	'R0',0
	.word	43393
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	44078
	.byte	4,2,35,4,14
	.byte	'MCS',0
	.word	44354
	.byte	20,2,35,8,0,10
	.word	44363
	.byte	11
	.byte	'_Ifx_GTM_MON',0,12,251,68,25,52,14
	.byte	'STATUS',0
	.word	42708
	.byte	4,2,35,0,14
	.byte	'ACTIVITY',0
	.word	44429
	.byte	28,2,35,4,14
	.byte	'reserved_20',0
	.word	23624
	.byte	20,2,35,32,0,10
	.word	44434
	.byte	11
	.byte	'_Ifx_GTM_CMP_EN_Bits',0,12,182,10,16,4,12
	.byte	'ABWC0_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44514
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,12,151,11,16,4,12
	.byte	'ABWC0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ABWC1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ABWC2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ABWC3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ABWC4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ABWC5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ABWC6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ABWC7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ABWC8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ABWC9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ABWC10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ABWC11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TBWC0',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TBWC1',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TBWC2',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TBWC3',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TBWC4',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TBWC5',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TBWC6',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TBWC7',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TBWC8',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TBWC9',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TBWC10',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TBWC11',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_EN_Bits',0,12,212,10,16,4,12
	.byte	'ABWC0_EN_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45600
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,12,242,10,16,4,12
	.byte	'TRG_ABWC0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_ABWC1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_ABWC2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_ABWC3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG_ABWC4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG_ABWC5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TRG_ABWC6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TRG_ABWC7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TRG_ABWC8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TRG_ABWC9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TRG_ABWC10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TRG_ABWC11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TRG_TBWC0',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TRG_TBWC1',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TRG_TBWC2',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TRG_TBWC3',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TRG_TBWC4',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRG_TBWC5',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TRG_TBWC6',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TRG_TBWC7',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TRG_TBWC8',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TRG_TBWC9',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TRG_TBWC10',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TRG_TBWC11',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46275
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_MODE_Bits',0,12,144,11,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,160,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46883
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ',0,12,143,69,25,16,14
	.byte	'NOTIFY',0
	.word	45560
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	46235
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	46843
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	46959
	.byte	4,2,35,12,0,10
	.word	46999
	.byte	11
	.byte	'_Ifx_GTM_CMP_EIRQ_EN_Bits',0,12,152,10,16,4,12
	.byte	'ABWC0_EN_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47087
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP',0,12,164,69,25,24,14
	.byte	'EN',0
	.word	45049
	.byte	4,2,35,0,14
	.byte	'IRQ',0
	.word	47082
	.byte	16,2,35,4,14
	.byte	'EIRQ_EN',0
	.word	47747
	.byte	4,2,35,20,0,10
	.word	47787
	.byte	15,104
	.word	537
	.byte	16,103,0,11
	.byte	'_Ifx_GTM_ARU_ACCESS_Bits',0,12,155,1,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'RREQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'WREQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	18,0,2,35,0,0,13,12,224,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47863
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_H_Bits',0,12,190,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,128,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48028
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_L_Bits',0,12,197,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,136,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48139
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,12,204,1,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,144,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48250
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,12,218,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,160,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48365
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,12,225,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,168,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48481
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,12,211,1,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,152,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48597
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,12,232,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,176,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48712
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,12,239,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,184,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48828
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG',0,12,184,69,25,24,14
	.byte	'ACCESS0',0
	.word	48325
	.byte	4,2,35,0,14
	.byte	'DATA0_H',0
	.word	48441
	.byte	4,2,35,4,14
	.byte	'DATA0_L',0
	.word	48557
	.byte	4,2,35,8,14
	.byte	'ACCESS1',0
	.word	48672
	.byte	4,2,35,12,14
	.byte	'DATA1_H',0
	.word	48788
	.byte	4,2,35,16,14
	.byte	'DATA1_L',0
	.word	48904
	.byte	4,2,35,20,0,10
	.word	48944
	.byte	11
	.byte	'_Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,12,197,2,16,4,12
	.byte	'NEW_DATA0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,136,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49075
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_EN_Bits',0,12,172,2,16,4,12
	.byte	'NEW_DATA0_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,240,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49234
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,12,181,2,16,4,12
	.byte	'TRG_NEW_DATA0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_NEW_DATA1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_ACC_ACK',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,248,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49410
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_MODE_Bits',0,12,190,2,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,128,44,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49582
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ',0,12,207,69,25,16,14
	.byte	'NOTIFY',0
	.word	49194
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	49370
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	49542
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	49658
	.byte	4,2,35,12,0,10
	.word	49698
	.byte	11
	.byte	'_Ifx_GTM_ARU_CADDR_END_Bits',0,12,174,1,16,4,12
	.byte	'CADDR_END',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	25,0,2,35,0,0,13,12,240,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49786
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_CTRL_Bits',0,12,181,1,16,4,12
	.byte	'ARU_0_DYN_EN',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ARU_1_DYN_EN',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'ARU_DYN_RING_MODE',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,248,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49904
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DYN_CTRL_Bits',0,12,246,1,16,4,12
	.byte	'DYN_ARU_UPDATE_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DYN_ROUTE_SWAP',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,192,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50073
	.byte	4,2,35,0,0,15,8
	.word	50184
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ARU_DYN_ROUTE_LOW_Bits',0,12,143,2,16,4,12
	.byte	'DYN_READ_ID0',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'DYN_READ_ID1',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'DYN_READ_ID2',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50233
	.byte	4,2,35,0,0,15,8
	.word	50367
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ARU_DYN_ROUTE_HIGH_Bits',0,12,133,2,16,4,12
	.byte	'DYN_READ_ID3',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'DYN_READ_ID4',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'DYN_READ_ID5',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'DYN_CLK_WAIT',0,4
	.word	936
	.byte	4,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,208,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50416
	.byte	4,2,35,0,0,15,8
	.word	50575
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ARU_DYN_ROUTE_SR_LOW_Bits',0,12,163,2,16,4,12
	.byte	'DYN_READ_ID6',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'DYN_READ_ID7',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'DYN_READ_ID8',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50624
	.byte	4,2,35,0,0,15,8
	.word	50761
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ARU_DYN_ROUTE_SR_HIGH_Bits',0,12,152,2,16,4,12
	.byte	'DYN_READ_ID9',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'DYN_READ_ID10',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'DYN_READ_ID11',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'DYN_CLK_WAIT',0,4
	.word	936
	.byte	4,4,2,35,0,12
	.byte	'DYN_UPDATE_EN',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,224,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50810
	.byte	4,2,35,0,0,15,8
	.word	50999
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ARU_DYN_RDADDR_Bits',0,12,254,1,16,4,12
	.byte	'DYN_ARU_RDADDR',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,200,43,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51048
	.byte	4,2,35,0,0,15,8
	.word	51132
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ARU_CADDR_Bits',0,12,165,1,16,4,12
	.byte	'CADDR_0',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	9,16,2,35,0,12
	.byte	'CADDR_1',0,4
	.word	936
	.byte	7,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	9,0,2,35,0,0,13,12,232,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51181
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU',0,12,228,69,25,128,1,14
	.byte	'ACCESS',0
	.word	47988
	.byte	4,2,35,0,14
	.byte	'DATA_H',0
	.word	48099
	.byte	4,2,35,4,14
	.byte	'DATA_L',0
	.word	48210
	.byte	4,2,35,8,14
	.byte	'DBG',0
	.word	49070
	.byte	24,2,35,12,14
	.byte	'IRQ',0
	.word	49781
	.byte	16,2,35,36,14
	.byte	'CADDR_END',0
	.word	49864
	.byte	4,2,35,52,14
	.byte	'reserved_38',0
	.word	3092
	.byte	4,2,35,56,14
	.byte	'CTRL',0
	.word	50033
	.byte	4,2,35,60,14
	.byte	'DYN_CTRL',0
	.word	50224
	.byte	8,2,35,64,14
	.byte	'DYN_ROUTE_LOW',0
	.word	50407
	.byte	8,2,35,72,14
	.byte	'DYN_ROUTE_HIGH',0
	.word	50615
	.byte	8,2,35,80,14
	.byte	'DYN_ROUTE_SR_LOW',0
	.word	50801
	.byte	8,2,35,88,14
	.byte	'DYN_ROUTE_SR_HIGH',0
	.word	51039
	.byte	8,2,35,96,14
	.byte	'DYN_RDADDR',0
	.word	51172
	.byte	8,2,35,104,14
	.byte	'reserved_70',0
	.word	5252
	.byte	12,2,35,112,14
	.byte	'CADDR',0
	.word	51295
	.byte	4,2,35,124,0,10
	.word	51335
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,12,196,11,16,4,12
	.byte	'EN_CLK0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'EN_CLK1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'EN_CLK2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'EN_CLK3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'EN_CLK4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'EN_CLK5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'EN_CLK6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'EN_CLK7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'EN_ECLK0',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'EN_ECLK1',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'EN_ECLK2',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'EN_FXCLK',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51663
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,12,250,11,16,4,12
	.byte	'GCLK_NUM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51990
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,12,243,11,16,4,12
	.byte	'GCLK_DEN',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52107
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK__CTRL_Bits',0,12,214,11,16,4,12
	.byte	'CLK_CNT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'CLK_SEL',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	6,0,2,35,0,0,13,12,192,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK',0,12,133,70,25,4,14
	.byte	'CTRL',0
	.word	52320
	.byte	4,2,35,0,0,15,32
	.word	52360
	.byte	16,7,0,10
	.word	52398
	.byte	11
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,12,229,11,16,4,12
	.byte	'ECLK_NUM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52412
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,12,222,11,16,4,12
	.byte	'ECLK_DEN',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52529
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK',0,12,151,70,25,8,14
	.byte	'NUM',0
	.word	52489
	.byte	4,2,35,0,14
	.byte	'DEN',0
	.word	52606
	.byte	4,2,35,4,0,15,24
	.word	52646
	.byte	16,2,0,10
	.word	52697
	.byte	11
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,12,236,11,16,4,12
	.byte	'FXCLK_SEL',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,216,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52711
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_FXCLK',0,12,170,70,25,4,14
	.byte	'CTRL',0
	.word	52790
	.byte	4,2,35,0,0,10
	.word	52830
	.byte	11
	.byte	'_Ifx_GTM_CMU_GLB_CTRL_Bits',0,12,129,12,16,4,12
	.byte	'ARU_ADDR_RSTGLB',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,13,12,240,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52875
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_CTRL_Bits',0,12,181,11,16,4,12
	.byte	'CLK0_EXT_DIVIDER',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CLK1_EXT_DIVIDER',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CLK2_EXT_DIVIDER',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CLK3_EXT_DIVIDER',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'CLK4_EXT_DIVIDER',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'CLK5_EXT_DIVIDER',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CLK6_EXT_DIVIDER',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CLK7_EXT_DIVIDER',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'CLK8_EXT_DIVIDER',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,176,48,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52998
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU',0,12,188,70,25,80,14
	.byte	'CLK_EN',0
	.word	51950
	.byte	4,2,35,0,14
	.byte	'GCLK_NUM',0
	.word	52067
	.byte	4,2,35,4,14
	.byte	'GCLK_DEN',0
	.word	52184
	.byte	4,2,35,8,14
	.byte	'CLK',0
	.word	52407
	.byte	32,2,35,12,14
	.byte	'ECLK',0
	.word	52706
	.byte	24,2,35,44,14
	.byte	'FXCLK',0
	.word	52870
	.byte	4,2,35,68,14
	.byte	'GLB_CTRL',0
	.word	52958
	.byte	4,2,35,72,14
	.byte	'CLK_CTRL',0
	.word	53306
	.byte	4,2,35,76,0,10
	.word	53346
	.byte	15,176,1
	.word	537
	.byte	16,175,1,0,11
	.byte	'_Ifx_GTM_BRC_SRC_ADDR_Bits',0,12,195,6,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	19,0,2,35,0,0,13,12,144,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53512
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC_DEST_Bits',0,12,204,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	9,0,2,35,0,0,13,12,152,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53667
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC',0,12,213,70,25,8,14
	.byte	'ADDR',0
	.word	53627
	.byte	4,2,35,0,14
	.byte	'DEST',0
	.word	54199
	.byte	4,2,35,4,0,15,96
	.word	54239
	.byte	16,11,0,10
	.word	54291
	.byte	11
	.byte	'_Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,12,169,6,16,4,12
	.byte	'DEST_ERR',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DID0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'DID1',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DID2',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'DID3',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'DID4',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DID5',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DID6',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'DID7',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'DID8',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'DID9',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'DID10',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'DID11',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	19,0,2,35,0,0,13,12,128,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54305
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_EN_Bits',0,12,252,5,16,4,12
	.byte	'DEST_ERR_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DID_IRQ_EN0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'DID_IRQ_EN1',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DID_IRQ_EN2',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'DID_IRQ_EN3',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'DID_IRQ_EN4',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DID_IRQ_EN5',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DID_IRQ_EN6',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'DID_IRQ_EN7',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'DID_IRQ_EN8',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'DID_IRQ_EN9',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'DID_IRQ_EN10',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'DID_IRQ_EN11',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	19,0,2,35,0,0,13,12,232,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54618
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,12,143,6,16,4,12
	.byte	'TRG_DEST_ERR',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_DID0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_DID1',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_DID2',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG_DID3',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG_DID4',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TRG_DID5',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TRG_DID6',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TRG_DID7',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TRG_DID8',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TRG_DID9',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TRG_DID10',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TRG_DID11',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	19,0,2,35,0,0,13,12,240,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55018
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_MODE_Bits',0,12,162,6,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,248,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55384
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ',0,12,232,70,25,16,14
	.byte	'NOTIFY',0
	.word	54578
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	54978
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	55344
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	55460
	.byte	4,2,35,12,0,10
	.word	55500
	.byte	11
	.byte	'_Ifx_GTM_BRC_RST_Bits',0,12,188,6,16,4,12
	.byte	'RST',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,13,12,136,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55588
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_EIRQ_EN_Bits',0,12,233,5,16,4,12
	.byte	'DEST_ERR_EIRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DID_EIRQ_EN0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'DID_EIRQ_EN1',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DID_EIRQ_EN2',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'DID_EIRQ_EN3',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'DID_EIRQ_EN4',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DID_EIRQ_EN5',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DID_EIRQ_EN6',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'DID_EIRQ_EN7',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'DID_EIRQ_EN8',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'DID_EIRQ_EN9',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'DID_EIRQ_EN10',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'DID_EIRQ_EN11',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	19,0,2,35,0,0,13,12,224,45,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55694
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC',0,12,253,70,25,120,14
	.byte	'SRC',0
	.word	54300
	.byte	96,2,35,0,14
	.byte	'IRQ',0
	.word	55583
	.byte	16,2,35,96,14
	.byte	'RST',0
	.word	55654
	.byte	4,2,35,112,14
	.byte	'EIRQ_EN',0
	.word	56068
	.byte	4,2,35,116,0,10
	.word	56108
	.byte	15,136,3
	.word	537
	.byte	16,135,3,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R0_Bits',0,12,164,26,16,4,12
	.byte	'ARU_NEW_DATA0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ARU_NEW_DATA1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ARU_ACC_ACK_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'BRC_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'AEI_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'CMP_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SPE0_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SPE1_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SPE2_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'SPE3_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SPE4_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SPE5_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'PSM0_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'PSM0_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'PSM0_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'PSM0_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'PSM0_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'PSM0_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'PSM0_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'PSM0_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'PSM1_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'PSM1_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'PSM1_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'PSM1_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'PSM1_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'PSM1_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'PSM1_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'PSM1_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,168,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56200
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R1_Bits',0,12,198,26,16,4,12
	.byte	'DPLL_DCGI_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DPLL_EDI_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'DPLL_TINI_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DPLL_TAXI_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'DPLL_SISI_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'DPLL_TISI_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DPLL_MSI_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DPLL_MTI_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'DPLL_SASI_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'DPLL_TASI_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'DPLL_PWI_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'DPLL_W2I_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'DPLL_W1I_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'DPLL_GL1I_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'DPLL_LL1I_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'DPLL_EI_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'DPLL_GL2I_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'DPLL_LL2I_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'DPLL_TE0I_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'DPLL_TE1I_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'DPLL_TE2I_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'DPLL_TE3I_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'DPLL_TE4I_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'DPLL_CDTI_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'DPLL_CDSI_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'DPLL_TORI_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'DPLL_SORI_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	5,0,2,35,0,0,13,12,176,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56942
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R2_Bits',0,12,140,27,16,4,12
	.byte	'TIM0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TIM3_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TIM3_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TIM3_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TIM3_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TIM3_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TIM3_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TIM3_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TIM3_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,192,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57705
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R3_Bits',0,12,177,27,16,4,12
	.byte	'TIM4_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TIM4_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TIM4_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TIM4_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TIM4_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TIM4_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TIM4_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TIM4_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TIM5_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TIM5_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TIM5_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TIM5_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TIM5_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TIM5_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TIM5_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TIM5_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TIM6_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TIM6_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TIM6_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TIM6_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TIM6_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TIM6_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TIM6_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TIM6_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TIM7_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TIM7_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TIM7_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TIM7_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TIM7_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TIM7_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TIM7_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TIM7_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,200,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58546
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R4_Bits',0,12,214,27,16,4,12
	.byte	'MCS0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCS3_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCS3_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'MCS3_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'MCS3_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'MCS3_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'MCS3_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'MCS3_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'MCS3_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,208,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59387
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R5_Bits',0,12,251,27,16,4,12
	.byte	'MCS4_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS4_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCS4_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCS4_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCS4_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCS4_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCS4_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCS4_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'MCS5_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCS5_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'MCS5_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MCS5_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCS5_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCS5_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCS5_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCS5_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCS6_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCS6_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCS6_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCS6_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'MCS6_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCS6_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCS6_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCS6_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCS7_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCS7_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'MCS7_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'MCS7_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'MCS7_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'MCS7_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'MCS7_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'MCS7_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,216,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60228
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R6_Bits',0,12,160,28,16,4,12
	.byte	'TOM0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TOM0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TOM0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TOM0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TOM0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TOM0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TOM0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TOM0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TOM0_CH8_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TOM0_CH9_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TOM0_CH10_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TOM0_CH11_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TOM0_CH12_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TOM0_CH13_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TOM0_CH14_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TOM0_CH15_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TOM1_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TOM1_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TOM1_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TOM1_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TOM1_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TOM1_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TOM1_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TOM1_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TOM1_CH8_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TOM1_CH9_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TOM1_CH10_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TOM1_CH11_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TOM1_CH12_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TOM1_CH13_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TOM1_CH14_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TOM1_CH15_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,224,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61069
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R7_Bits',0,12,197,28,16,4,12
	.byte	'TOM2_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TOM2_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TOM2_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TOM2_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TOM2_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TOM2_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TOM2_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TOM2_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TOM2_CH8_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TOM2_CH9_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TOM2_CH10_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TOM2_CH11_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TOM2_CH12_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TOM2_CH13_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TOM2_CH14_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TOM2_CH15_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TOM3_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TOM3_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TOM3_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TOM3_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TOM3_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TOM3_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TOM3_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TOM3_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TOM3_CH8_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TOM3_CH9_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TOM3_CH10_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TOM3_CH11_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TOM3_CH12_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TOM3_CH13_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TOM3_CH14_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TOM3_CH15_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,232,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61922
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R9_Bits',0,12,234,28,16,4,12
	.byte	'ATOM0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ATOM0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ATOM0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ATOM0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ATOM0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ATOM0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ATOM0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ATOM0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ATOM1_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ATOM1_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ATOM1_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ATOM1_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'ATOM1_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'ATOM1_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ATOM1_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'ATOM1_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'ATOM2_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'ATOM2_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'ATOM2_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'ATOM2_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'ATOM2_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'ATOM2_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'ATOM2_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'ATOM2_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'ATOM3_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'ATOM3_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'ATOM3_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'ATOM3_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'ATOM3_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'ATOM3_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'ATOM3_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'ATOM3_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,240,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62775
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_R10_Bits',0,12,231,26,16,4,12
	.byte	'ATOM4_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ATOM4_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ATOM4_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ATOM4_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ATOM4_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ATOM4_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ATOM4_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ATOM4_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ATOM5_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ATOM5_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ATOM5_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ATOM5_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'ATOM5_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'ATOM5_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ATOM5_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'ATOM5_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'ATOM6_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'ATOM6_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'ATOM6_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'ATOM6_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'ATOM6_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'ATOM6_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'ATOM6_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'ATOM6_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'ATOM7_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'ATOM7_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'ATOM7_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'ATOM7_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'ATOM7_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'ATOM7_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'ATOM7_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'ATOM7_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,184,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63648
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,12,235,25,16,4,12
	.byte	'GTM_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'BRC_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FIFO1_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TIM0_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TIM1_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TIM2_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TIM3_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TIM4_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TIM5_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TIM6_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TIM7_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCS0_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCS1_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCS2_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCS3_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCS4_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCS5_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCS6_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCS7_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'SPE0_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'SPE1_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'SPE2_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'SPE3_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'CMP_EIRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'DPLL_EIRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	6,0,2,35,0,0,13,12,152,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64522
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI0_Bits',0,12,255,22,16,4,12
	.byte	'FIFO0_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'FIFO0_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FIFO0_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'FIFO0_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'FIFO0_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'FIFO0_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'FIFO0_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'FIFO1_CH0_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'FIFO1_CH1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'FIFO1_CH2_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'FIFO1_CH3_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'FIFO1_CH4_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'FIFO1_CH5_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'FIFO1_CH6_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'FIFO1_CH7_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'FIFO2_CH0_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'FIFO2_CH1_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'FIFO2_CH2_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'FIFO2_CH3_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'FIFO2_CH4_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'FIFO2_CH5_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'FIFO2_CH6_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'FIFO2_CH7_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65164
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,12,157,23,16,4,12
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TIM3_CH0_EIRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TIM3_CH1_EIRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TIM3_CH2_EIRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TIM3_CH3_EIRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TIM3_CH4_EIRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TIM3_CH5_EIRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TIM3_CH6_EIRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TIM3_CH7_EIRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,184,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65886
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI2_Bits',0,12,194,23,16,4,12
	.byte	'TIM4_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TIM4_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TIM4_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TIM4_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TIM4_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TIM4_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TIM4_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TIM4_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TIM5_CH0_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TIM5_CH1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TIM5_CH2_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TIM5_CH3_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TIM5_CH4_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TIM5_CH5_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TIM5_CH6_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TIM5_CH7_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TIM6_CH0_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TIM6_CH1_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TIM6_CH2_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TIM6_CH3_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TIM6_CH4_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TIM6_CH5_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TIM6_CH6_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TIM6_CH7_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TIM7_CH0_EIRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TIM7_CH1_EIRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TIM7_CH2_EIRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TIM7_CH3_EIRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TIM7_CH4_EIRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TIM7_CH5_EIRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TIM7_CH6_EIRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TIM7_CH7_EIRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,192,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66761
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI3_Bits',0,12,231,23,16,4,12
	.byte	'MCS0_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCS3_CH0_EIRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCS3_CH1_EIRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'MCS3_CH2_EIRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'MCS3_CH3_EIRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'MCS3_CH4_EIRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'MCS3_CH5_EIRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'MCS3_CH6_EIRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'MCS3_CH7_EIRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,200,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67636
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI4_Bits',0,12,140,24,16,4,12
	.byte	'MCS4_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS4_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCS4_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCS4_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCS4_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCS4_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCS4_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCS4_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'MCS5_CH0_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCS5_CH1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'MCS5_CH2_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MCS5_CH3_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'MCS5_CH4_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'MCS5_CH5_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'MCS5_CH6_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'MCS5_CH7_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'MCS6_CH0_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCS6_CH1_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'MCS6_CH2_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MCS6_CH3_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'MCS6_CH4_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'MCS6_CH5_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'MCS6_CH6_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'MCS6_CH7_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'MCS7_CH0_EIRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCS7_CH1_EIRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'MCS7_CH2_EIRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'MCS7_CH3_EIRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'MCS7_CH4_EIRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'MCS7_CH5_EIRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'MCS7_CH6_EIRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'MCS7_CH7_EIRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,208,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68511
	.byte	4,2,35,0,0,15,28
	.word	537
	.byte	16,27,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI_MCS_Bits',0,12,177,24,16,4,12
	.byte	'MCS_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCS_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCS_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCS_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCS_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCS_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCS_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,216,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69395
	.byte	4,2,35,0,0,15,20
	.word	69647
	.byte	16,4,0,15,44
	.word	537
	.byte	16,43,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI_PSM_Bits',0,12,191,24,16,4,12
	.byte	'PSM_M0_CH0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PSM_M0_CH1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'PSM_M0_CH2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'PSM_M0_CH3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'PSM_M0_CH4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'PSM_M0_CH5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'PSM_M0_CH6_EIRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PSM_M0_CH7_EIRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'PSM_M1_CH0_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'PSM_M1_CH1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PSM_M1_CH2_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'PSM_M1_CH3_EIRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'PSM_M1_CH4_EIRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'PSM_M1_CH5_EIRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'PSM_M1_CH6_EIRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'PSM_M1_CH7_EIRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'PSM_M2_CH0_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'PSM_M2_CH1_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'PSM_M2_CH2_EIRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'PSM_M2_CH3_EIRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'PSM_M2_CH4_EIRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'PSM_M2_CH5_EIRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'PSM_M2_CH6_EIRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'PSM_M2_CH7_EIRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69705
	.byte	4,2,35,0,0,15,4
	.word	70414
	.byte	16,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI_SPE_Bits',0,12,221,24,16,4,12
	.byte	'SPE0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SPE1_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SPE2_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SPE3_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SPE4_EIRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SPE5_EIRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	26,0,2,35,0,0,13,12,232,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70463
	.byte	4,2,35,0,0,15,88
	.word	537
	.byte	16,87,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_CLS_Bits',0,12,139,26,16,4,12
	.byte	'TIM_M0_EIRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS_M0_EIRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SPE_M0_EIRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FIFO_M0_EIRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	4,24,2,35,0,12
	.byte	'TIM_M1_EIRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MCS_M1_EIRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SPE_M1_EIRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'TIM_M2_EIRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'MCS_M2_EIRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'TIM_M3_EIRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'MCS_M3_EIRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,160,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70698
	.byte	4,2,35,0,0,15,8
	.word	71196
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CI_MCS_Bits',0,12,142,25,16,4,12
	.byte	'MCS_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'MCS_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'MCS_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'MCS_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MCS_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'MCS_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MCS_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MCS_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,248,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71245
	.byte	4,2,35,0,0,15,20
	.word	71488
	.byte	16,4,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CI_PSM_Bits',0,12,156,25,16,4,12
	.byte	'PSM_M0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PSM_M0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'PSM_M0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'PSM_M0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'PSM_M0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'PSM_M0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'PSM_M0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PSM_M0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'PSM_M1_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'PSM_M1_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PSM_M1_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'PSM_M1_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'PSM_M1_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'PSM_M1_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'PSM_M1_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'PSM_M1_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'PSM_M2_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'PSM_M2_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'PSM_M2_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'PSM_M2_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'PSM_M2_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'PSM_M2_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'PSM_M2_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'PSM_M2_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71537
	.byte	4,2,35,0,0,15,4
	.word	72221
	.byte	16,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CI_SPE_Bits',0,12,186,25,16,4,12
	.byte	'SPE0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SPE1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SPE2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SPE3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SPE4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SPE5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	26,0,2,35,0,0,13,12,136,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72270
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CI_ATOM_Bits',0,12,233,24,16,4,12
	.byte	'ATOM_M0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ATOM_M0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ATOM_M0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ATOM_M0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ATOM_M0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ATOM_M0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ATOM_M0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ATOM_M0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'ATOM_M1_CH0_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ATOM_M1_CH1_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'ATOM_M1_CH2_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'ATOM_M1_CH3_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'ATOM_M1_CH4_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'ATOM_M1_CH5_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ATOM_M1_CH6_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'ATOM_M1_CH7_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'ATOM_M2_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'ATOM_M2_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'ATOM_M2_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'ATOM_M2_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'ATOM_M2_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'ATOM_M2_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'ATOM_M2_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'ATOM_M2_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'ATOM_M3_CH0_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'ATOM_M3_CH1_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'ATOM_M3_CH2_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'ATOM_M3_CH3_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'ATOM_M3_CH4_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'ATOM_M3_CH5_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'ATOM_M3_CH6_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'ATOM_M3_CH7_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,240,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72489
	.byte	4,2,35,0,0,15,8
	.word	73391
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CI_TOM_Bits',0,12,198,25,16,4,12
	.byte	'TOM_M0_CH0_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TOM_M0_CH1_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TOM_M0_CH2_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TOM_M0_CH3_IRQ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TOM_M0_CH4_IRQ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TOM_M0_CH5_IRQ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TOM_M0_CH6_IRQ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TOM_M0_CH7_IRQ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TOM_M0_CH8_IRQ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TOM_M0_CH9_IRQ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TOM_M0_CH10_IRQ',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TOM_M0_CH11_IRQ',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TOM_M0_CH12_IRQ',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TOM_M0_CH13_IRQ',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TOM_M0_CH14_IRQ',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TOM_M0_CH15_IRQ',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TOM_M1_CH0_IRQ',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TOM_M1_CH1_IRQ',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TOM_M1_CH2_IRQ',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TOM_M1_CH3_IRQ',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TOM_M1_CH4_IRQ',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TOM_M1_CH5_IRQ',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TOM_M1_CH6_IRQ',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TOM_M1_CH7_IRQ',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TOM_M1_CH8_IRQ',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TOM_M1_CH9_IRQ',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TOM_M1_CH10_IRQ',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TOM_M1_CH11_IRQ',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TOM_M1_CH12_IRQ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TOM_M1_CH13_IRQ',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TOM_M1_CH14_IRQ',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TOM_M1_CH15_IRQ',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,144,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73440
	.byte	4,2,35,0,0,15,8
	.word	74321
	.byte	16,1,0,11
	.byte	'_Ifx_GTM_ICM_IRQG',0,12,146,71,25,172,3,14
	.byte	'R0',0
	.word	56902
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	57665
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	58506
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	59347
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	60188
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	61029
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	61882
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	62735
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	3092
	.byte	4,2,35,32,14
	.byte	'R9',0
	.word	63608
	.byte	4,2,35,36,14
	.byte	'R10',0
	.word	64482
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	3092
	.byte	4,2,35,44,14
	.byte	'MEI',0
	.word	65124
	.byte	4,2,35,48,14
	.byte	'CEI0',0
	.word	65846
	.byte	4,2,35,52,14
	.byte	'CEI1',0
	.word	66721
	.byte	4,2,35,56,14
	.byte	'CEI2',0
	.word	67596
	.byte	4,2,35,60,14
	.byte	'CEI3',0
	.word	68471
	.byte	4,2,35,64,14
	.byte	'CEI4',0
	.word	69346
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	69386
	.byte	28,2,35,72,14
	.byte	'CEI_MCS',0
	.word	69687
	.byte	20,2,35,100,14
	.byte	'reserved_78',0
	.word	69696
	.byte	44,2,35,120,14
	.byte	'CEI_PSM',0
	.word	70454
	.byte	4,3,35,164,1,14
	.byte	'reserved_A8',0
	.word	5252
	.byte	12,3,35,168,1,14
	.byte	'CEI_SPE',0
	.word	70649
	.byte	4,3,35,180,1,14
	.byte	'reserved_B8',0
	.word	70689
	.byte	88,3,35,184,1,14
	.byte	'MEI_CLS',0
	.word	71236
	.byte	8,3,35,144,2,14
	.byte	'reserved_118',0
	.word	4912
	.byte	8,3,35,152,2,14
	.byte	'CI_MCS',0
	.word	71528
	.byte	20,3,35,160,2,14
	.byte	'reserved_134',0
	.word	69696
	.byte	44,3,35,180,2,14
	.byte	'CI_PSM',0
	.word	72261
	.byte	4,3,35,224,2,14
	.byte	'reserved_164',0
	.word	5252
	.byte	12,3,35,228,2,14
	.byte	'CI_SPE',0
	.word	72449
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	69386
	.byte	28,3,35,244,2,14
	.byte	'CI_ATOM',0
	.word	73431
	.byte	8,3,35,144,3,14
	.byte	'reserved_198',0
	.word	4912
	.byte	8,3,35,152,3,14
	.byte	'CI_TOM',0
	.word	74361
	.byte	8,3,35,160,3,14
	.byte	'reserved_1A8',0
	.word	3092
	.byte	4,3,35,168,3,0,10
	.word	74370
	.byte	11
	.byte	'_Ifx_GTM_ICM',0,12,200,71,25,172,3,14
	.byte	'IRQG',0
	.word	75023
	.byte	172,3,2,35,0,0,10
	.word	75028
	.byte	11
	.byte	'_Ifx_GTM_SPE_CTRL_STAT_Bits',0,12,241,36,16,4,12
	.byte	'EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SIE0',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SIE1',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SIE2',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRIG_SEL',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'TIM_SEL',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'FSOM',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SPE_PAT_PTR',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'AIP',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'ADIR',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'PIP',0,4
	.word	936
	.byte	3,13,2,35,0,12
	.byte	'PDIR',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'NIP',0,4
	.word	936
	.byte	3,9,2,35,0,12
	.byte	'ETRIG_SEL',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'FSOL',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,240,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75069
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_PAT_Bits',0,12,207,37,16,4,12
	.byte	'IP0_VAL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'IP0_PAT',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'IP1_VAL',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'IP1_PAT',0,4
	.word	936
	.byte	3,24,2,35,0,12
	.byte	'IP2_VAL',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'IP2_PAT',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'IP3_VAL',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'IP3_PAT',0,4
	.word	936
	.byte	3,16,2,35,0,12
	.byte	'IP4_VAL',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'IP4_PAT',0,4
	.word	936
	.byte	3,12,2,35,0,12
	.byte	'IP5_VAL',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'IP5_PAT',0,4
	.word	936
	.byte	3,8,2,35,0,12
	.byte	'IP6_VAL',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'IP6_PAT',0,4
	.word	936
	.byte	3,4,2,35,0,12
	.byte	'IP7_VAL',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'IP7_PAT',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,184,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75421
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_OUT_PAT_Bits',0,12,200,37,16,4,12
	.byte	'SPE_OUT_PAT',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,176,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75794
	.byte	4,2,35,0,0,15,32
	.word	75873
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_SPE_OUT_CTRL_Bits',0,12,193,37,16,4,12
	.byte	'SPE_OUT_CTRL',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,168,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75922
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,12,182,37,16,4,12
	.byte	'SPE_NIPD',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,160,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76043
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_EN_Bits',0,12,153,37,16,4,12
	.byte	'SPE_NIPD_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_IRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_IRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,136,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76240
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,12,164,37,16,4,12
	.byte	'TRG_SPE_NIPD',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_SPE_DCHG',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_SPE_PERR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_SPE_BIS',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG_SPE_RCMP',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,144,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76468
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_MODE_Bits',0,12,175,37,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,152,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76686
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ',0,12,218,71,25,16,14
	.byte	'NOTIFY',0
	.word	76200
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	76428
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	76646
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	76762
	.byte	4,2,35,12,0,10
	.word	76802
	.byte	11
	.byte	'_Ifx_GTM_SPE_EIRQ_EN_Bits',0,12,142,37,16,4,12
	.byte	'SPE_NIPD_EIRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_EIRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_EIRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_EIRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_EIRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,128,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76890
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_REV_CNT_Bits',0,12,235,37,16,4,12
	.byte	'REV_CNT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77124
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_REV_CMP_Bits',0,12,228,37,16,4,12
	.byte	'REV_CMP',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,64,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77239
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CTRL_STAT2_Bits',0,12,134,37,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'SPE_PAT_PTR_BWD',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	21,0,2,35,0,0,13,12,248,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77354
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CMD_Bits',0,12,232,36,16,4,12
	.byte	'SPE_CTRL_CMD',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	14,16,2,35,0,12
	.byte	'SPE_UPD_TRIG',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	15,0,2,35,0,0,13,12,232,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77502
	.byte	4,2,35,0,0,15,48
	.word	537
	.byte	16,47,0,11
	.byte	'_Ifx_GTM_SPE',0,12,239,71,25,128,1,14
	.byte	'CTRL_STAT',0
	.word	75381
	.byte	4,2,35,0,14
	.byte	'PAT',0
	.word	75754
	.byte	4,2,35,4,14
	.byte	'OUT_PAT',0
	.word	75913
	.byte	32,2,35,8,14
	.byte	'OUT_CTRL',0
	.word	76003
	.byte	4,2,35,40,14
	.byte	'IRQ',0
	.word	76885
	.byte	16,2,35,44,14
	.byte	'EIRQ_EN',0
	.word	77084
	.byte	4,2,35,60,14
	.byte	'REV_CNT',0
	.word	77199
	.byte	4,2,35,64,14
	.byte	'REV_CMP',0
	.word	77314
	.byte	4,2,35,68,14
	.byte	'CTRL_STAT2',0
	.word	77462
	.byte	4,2,35,72,14
	.byte	'CMD',0
	.word	77624
	.byte	4,2,35,76,14
	.byte	'reserved_50',0
	.word	77664
	.byte	48,2,35,80,0,15,128,2
	.word	77673
	.byte	16,1,0,10
	.word	77879
	.byte	15,128,12
	.word	537
	.byte	16,255,11,0,11
	.byte	'_Ifx_GTM_MAP_CTRL_Bits',0,12,215,29,16,4,12
	.byte	'TSEL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SSL',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'LSEL',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	11,16,2,35,0,12
	.byte	'TSPP0_EN',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TSPP0_DLD',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'TSPP0_I0V',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TSPP0_I1V',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TSPP0_I2V',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TSPP1_EN',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TSPP1_DLD',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'TSPP1_I0V',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'TSPP1_I1V',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TSPP1_I2V',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,168,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77905
	.byte	4,2,35,0,0,15,60
	.word	537
	.byte	16,59,0,11
	.byte	'_Ifx_GTM_MCFG_CTRL_Bits',0,12,238,29,16,4,12
	.byte	'MEM0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'MEM1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'MEM2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'MEM3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'MEM4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,13,12,176,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78353
	.byte	4,2,35,0,0,15,188,1
	.word	537
	.byte	16,187,1,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,12,183,39,16,4,12
	.byte	'GPR0',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,240,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78653
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,12,190,39,16,4,12
	.byte	'GPR1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,248,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78758
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,12,212,38,16,4,12
	.byte	'CNT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78863
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,12,255,38,16,4,12
	.byte	'ECNT',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,200,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78973
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,12,219,38,16,4,12
	.byte	'CNTS',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79085
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,12,240,39,16,4,12
	.byte	'TO_CNT',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'TO_CNT1',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'TO_CNT2',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79190
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,12,249,39,16,4,12
	.byte	'TOV',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'TOV1',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'TOV2',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'SLICING',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'TCS_USE_SAMPLE_EVT',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TDU_SAME_CNT_CLK',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'TCS',0,4
	.word	936
	.byte	3,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,168,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79342
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,12,176,39,16,4,12
	.byte	'FLT_RE',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79577
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,12,169,39,16,4,12
	.byte	'FLT_FE',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79693
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,12,226,38,16,4,12
	.byte	'TIM_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TIM_MODE',0,4
	.word	936
	.byte	3,28,2,35,0,12
	.byte	'OSM',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CICTRL',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TBU0_SEL',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'GPR0_SEL',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'GPR1_SEL',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'CNTS_SEL',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'DSL',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ISL',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'ECNT_RESET',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'FLT_EN',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'FLT_CNT_FRQ',0,4
	.word	936
	.byte	2,13,2,35,0,12
	.byte	'EXT_CAP_EN',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'FLT_MODE_RE',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'FLT_CTR_RE',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'FLT_MODE_FE',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'FLT_CTR_FE',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'CLK_SEL',0,4
	.word	936
	.byte	3,5,2,35,0,12
	.byte	'FR_ECNT_OFL',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EGPR0_SEL',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EGPR1_SEL',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TOCTRL',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,192,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79809
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,12,134,39,16,4,12
	.byte	'EXT_CAP_SRC',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'USE_PREV_TDU_IN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TODET_IRQ_SRC',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'TDU_START',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TDU_STOP',0,4
	.word	936
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TDU_RESYNC',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'USE_LUT',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'EFLT_CTR_RE',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EFLT_CTR_FE',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'SWAP_CAPTURE',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'IMM_START',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'ECLK_SEL',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'USE_PREV_CH_IN',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,208,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80358
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,12,228,39,16,4,12
	.byte	'NEWVAL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'GPROFL',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TODET',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	26,0,2,35,0,0,13,12,152,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80840
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,12,197,39,16,4,12
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_IRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TODET_IRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	26,0,2,35,0,0,13,12,128,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81052
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,12,209,39,16,4,12
	.byte	'TRG_NEWVAL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_ECNTOFL',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_CNTOFL',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_GPROFL',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG_TODET',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG_GLITCHDET',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	26,0,2,35,0,0,13,12,136,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81302
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,12,221,39,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,144,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81539
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ',0,12,139,72,25,16,14
	.byte	'NOTIFY',0
	.word	81012
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	81262
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	81499
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	81618
	.byte	4,2,35,12,0,10
	.word	81658
	.byte	11
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,12,157,39,16,4,12
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_EIRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TODET_EIRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	26,0,2,35,0,0,13,12,216,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81749
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH',0,12,160,72,25,64,14
	.byte	'GPR0',0
	.word	78718
	.byte	4,2,35,0,14
	.byte	'GPR1',0
	.word	78823
	.byte	4,2,35,4,14
	.byte	'CNT',0
	.word	78933
	.byte	4,2,35,8,14
	.byte	'ECNT',0
	.word	79045
	.byte	4,2,35,12,14
	.byte	'CNTS',0
	.word	79150
	.byte	4,2,35,16,14
	.byte	'TDUC',0
	.word	79302
	.byte	4,2,35,20,14
	.byte	'TDUV',0
	.word	79537
	.byte	4,2,35,24,14
	.byte	'FLT_RE',0
	.word	79653
	.byte	4,2,35,28,14
	.byte	'FLT_FE',0
	.word	79769
	.byte	4,2,35,32,14
	.byte	'CTRL',0
	.word	80318
	.byte	4,2,35,36,14
	.byte	'ECTRL',0
	.word	80800
	.byte	4,2,35,40,14
	.byte	'IRQ',0
	.word	81744
	.byte	16,2,35,44,14
	.byte	'EIRQ_EN',0
	.word	81966
	.byte	4,2,35,60,0,10
	.word	82006
	.byte	15,52
	.word	537
	.byte	16,51,0,11
	.byte	'_Ifx_GTM_TIM_INP_VAL_Bits',0,12,134,40,16,4,12
	.byte	'F_OUT',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'F_IN',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'TIM_IN',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82231
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,12,143,40,16,4,12
	.byte	'VAL_0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'MODE_0',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'VAL_1',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'MODE_1',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'VAL_2',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'MODE_2',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'VAL_3',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'MODE_3',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'VAL_4',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'MODE_4',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'VAL_5',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'MODE_5',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'VAL_6',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'MODE_6',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'VAL_7',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'MODE_7',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,184,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82378
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,12,164,40,16,4,12
	.byte	'RST_CH0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,192,66,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82730
	.byte	4,2,35,0,0,10
	.word	82006
	.byte	15,64
	.word	537
	.byte	16,63,0,10
	.word	82006
	.byte	10
	.word	82006
	.byte	10
	.word	82006
	.byte	10
	.word	82006
	.byte	10
	.word	82006
	.byte	10
	.word	82006
	.byte	15,192,8
	.word	537
	.byte	16,191,8,0,11
	.byte	'_Ifx_GTM_TIM',0,12,190,72,25,128,16,14
	.byte	'CH0',0
	.word	82217
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	82222
	.byte	52,2,35,64,14
	.byte	'INP_VAL',0
	.word	82338
	.byte	4,2,35,116,14
	.byte	'IN_SRC',0
	.word	82690
	.byte	4,2,35,120,14
	.byte	'RST',0
	.word	82933
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	82973
	.byte	64,3,35,128,1,14
	.byte	'reserved_C0',0
	.word	82978
	.byte	64,3,35,192,1,14
	.byte	'CH2',0
	.word	82987
	.byte	64,3,35,128,2,14
	.byte	'reserved_140',0
	.word	82978
	.byte	64,3,35,192,2,14
	.byte	'CH3',0
	.word	82992
	.byte	64,3,35,128,3,14
	.byte	'reserved_1C0',0
	.word	82978
	.byte	64,3,35,192,3,14
	.byte	'CH4',0
	.word	82997
	.byte	64,3,35,128,4,14
	.byte	'reserved_240',0
	.word	82978
	.byte	64,3,35,192,4,14
	.byte	'CH5',0
	.word	83002
	.byte	64,3,35,128,5,14
	.byte	'reserved_2C0',0
	.word	82978
	.byte	64,3,35,192,5,14
	.byte	'CH6',0
	.word	83007
	.byte	64,3,35,128,6,14
	.byte	'reserved_340',0
	.word	82978
	.byte	64,3,35,192,6,14
	.byte	'CH7',0
	.word	83012
	.byte	64,3,35,128,7,14
	.byte	'reserved_3C0',0
	.word	83017
	.byte	192,8,3,35,192,7,0,15,128,96
	.word	83028
	.byte	16,5,0,10
	.word	83388
	.byte	15,128,128,1
	.word	537
	.byte	16,255,127,0,15,128,48
	.word	30930
	.byte	16,2,0,10
	.word	83415
	.byte	15,128,208,3
	.word	537
	.byte	16,255,207,3,0,11
	.byte	'_Ifx_GTM_PSM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,12,183,35,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,192,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83443
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_F2A_RD_CH',0,12,209,73,25,4,14
	.byte	'ARU_RD_FIFO',0
	.word	83528
	.byte	4,2,35,0,0,15,32
	.word	83568
	.byte	16,7,0,10
	.word	83619
	.byte	11
	.byte	'_Ifx_GTM_PSM_F2A_STR_CH_STR_CFG_Bits',0,12,190,35,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'TMODE',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'DIR',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	13,0,2,35,0,0,13,12,200,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83633
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_F2A_STR_CH',0,12,227,73,25,4,14
	.byte	'STR_CFG',0
	.word	83754
	.byte	4,2,35,0,0,15,32
	.word	83794
	.byte	16,7,0,10
	.word	83842
	.byte	11
	.byte	'_Ifx_GTM_PSM_F2A_ENABLE_Bits',0,12,159,35,16,4,12
	.byte	'STR0_EN',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'STR1_EN',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'STR2_EN',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'STR3_EN',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'STR4_EN',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'STR5_EN',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'STR6_EN',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'STR7_EN',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,176,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83856
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_F2A_F2A_CTRL_Bits',0,12,173,35,16,4,12
	.byte	'STR4_CONF',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'STR5_CONF',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'STR6_CONF',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'STR7_CONF',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,184,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84107
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_F2A',0,12,245,73,25,72,14
	.byte	'RD_CH',0
	.word	83628
	.byte	32,2,35,0,14
	.byte	'STR_CH',0
	.word	83851
	.byte	32,2,35,32,14
	.byte	'ENABLE',0
	.word	84067
	.byte	4,2,35,64,14
	.byte	'F2A_CTRL',0
	.word	84251
	.byte	4,2,35,68,0,10
	.word	84291
	.byte	11
	.byte	'_Ifx_GTM_PSM_AFD_CH_BUF_ACC_Bits',0,12,152,35,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,168,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84385
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_AFD_CH',0,12,138,74,25,16,14
	.byte	'BUF_ACC',0
	.word	84464
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	5252
	.byte	12,2,35,4,0,15,128,1
	.word	84504
	.byte	16,7,0,10
	.word	84568
	.byte	11
	.byte	'_Ifx_GTM_PSM_AFD',0,12,157,74,25,128,1,14
	.byte	'CH',0
	.word	84578
	.byte	128,1,2,35,0,0,10
	.word	84583
	.byte	15,128,6
	.word	537
	.byte	16,255,5,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_CTRL_Bits',0,12,199,35,16,4,12
	.byte	'RBM',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'RAP',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FLUSH',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'WULOCK',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,208,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84637
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_END_ADDR_Bits',0,12,219,35,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,224,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84802
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_START_ADDR_Bits',0,12,158,36,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,160,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84923
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_UPPER_WM_Bits',0,12,175,36,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,176,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85046
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_LOWER_WM_Bits',0,12,144,36,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,144,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85167
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_STATUS_Bits',0,12,165,36,16,4,12
	.byte	'EMPTY',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'FULL',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'LOW_WM',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'UP_WM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,168,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85288
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_FILL_LEVEL_Bits',0,12,226,35,16,4,12
	.byte	'LEVEL',0,4
	.word	936
	.byte	11,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	21,0,2,35,0,0,13,12,232,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85458
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_WR_PTR_Bits',0,12,182,36,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,184,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85582
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_RD_PTR_Bits',0,12,151,36,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,152,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85701
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_IRQ_NOTIFY_Bits',0,12,134,36,16,4,12
	.byte	'FIFO_EMPTY',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,136,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	85820
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_IRQ_EN_Bits',0,12,233,35,16,4,12
	.byte	'FIFO_EMPTY_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_IRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,240,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86009
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_IRQ_FORCINT_Bits',0,12,243,35,16,4,12
	.byte	'TRG_FIFO_EMPTY',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_FIFO_FULL',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_FIFO_LWM',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_FIFO_UWM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,248,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86222
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_IRQ_MODE_Bits',0,12,253,35,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'DMA_HYSTERESIS',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DMA_HYST_DIR',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,128,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86428
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_IRQ',0,12,175,74,25,16,14
	.byte	'NOTIFY',0
	.word	85969
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	86182
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	86388
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	86562
	.byte	4,2,35,12,0,10
	.word	86602
	.byte	11
	.byte	'_Ifx_GTM_PSM_FIFO_CH_EIRQ_EN_Bits',0,12,209,35,16,4,12
	.byte	'FIFO_EMPTY_EIRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_EIRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_EIRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_EIRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,216,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86698
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSM_FIFO_CH',0,12,196,74,25,64,14
	.byte	'CTRL',0
	.word	84762
	.byte	4,2,35,0,14
	.byte	'END_ADDR',0
	.word	84883
	.byte	4,2,35,4,14
	.byte	'START_ADDR',0
	.word	85006
	.byte	4,2,35,8,14
	.byte	'UPPER_WM',0
	.word	85127
	.byte	4,2,35,12,14
	.byte	'LOWER_WM',0
	.word	85248
	.byte	4,2,35,16,14
	.byte	'STATUS',0
	.word	85418
	.byte	4,2,35,20,14
	.byte	'FILL_LEVEL',0
	.word	85542
	.byte	4,2,35,24,14
	.byte	'WR_PTR',0
	.word	85661
	.byte	4,2,35,28,14
	.byte	'RD_PTR',0
	.word	85780
	.byte	4,2,35,32,14
	.byte	'IRQ',0
	.word	86693
	.byte	16,2,35,36,14
	.byte	'EIRQ_EN',0
	.word	86876
	.byte	4,2,35,52,14
	.byte	'reserved_38',0
	.word	4912
	.byte	8,2,35,56,0,15,128,4
	.word	86916
	.byte	16,7,0,10
	.word	87151
	.byte	11
	.byte	'_Ifx_GTM_PSM_FIFO',0,12,225,74,25,128,4,14
	.byte	'CH',0
	.word	87161
	.byte	128,4,2,35,0,0,10
	.word	87166
	.byte	15,128,116
	.word	537
	.byte	16,255,115,0,11
	.byte	'_Ifx_GTM_PSM',0,12,243,74,25,128,128,1,14
	.byte	'F2A',0
	.word	84380
	.byte	72,2,35,0,14
	.byte	'reserved_48',0
	.word	8344
	.byte	56,2,35,72,14
	.byte	'AFD',0
	.word	84621
	.byte	128,1,3,35,128,1,14
	.byte	'reserved_100',0
	.word	84626
	.byte	128,6,3,35,128,2,14
	.byte	'FIFO',0
	.word	87205
	.byte	128,4,3,35,128,8,14
	.byte	'reserved_600',0
	.word	87210
	.byte	128,116,3,35,128,12,0,15,128,128,1
	.word	87221
	.byte	16,0,0,10
	.word	87356
	.byte	15,128,128,3
	.word	537
	.byte	16,255,255,2,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_Bits',0,12,133,14,16,4,12
	.byte	'MLT',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SNU',0,4
	.word	936
	.byte	5,16,2,35,0,12
	.byte	'TNU',0,4
	.word	936
	.byte	9,7,2,35,0,12
	.byte	'AMS',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'AMT',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'SEN',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'TEN',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'RMO',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,232,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87385
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_Bits',0,12,175,14,16,4,12
	.byte	'DMO',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DEN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'IDDS',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'COA',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	936
	.byte	5,16,2,35,0,12
	.byte	'SYN_NT',0,4
	.word	936
	.byte	6,10,2,35,0,12
	.byte	'LCD',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'SWR',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'SYSF',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TS0_HRS',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TS0_HRT',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'SMC',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'SSL',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'TSL',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,128,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87623
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_2_Bits',0,12,139,15,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'AEN0',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'AEN1',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'AEN2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'AEN3',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'AEN4',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'AEN5',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'AEN6',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'AEN7',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WAD0',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'WAD1',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'WAD2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'WAD3',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'WAD4',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'WAD5',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'WAD6',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'WAD7',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88033
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_3_Bits',0,12,162,15,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'AEN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'AEN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'AEN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'AEN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'AEN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'AEN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'AEN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'AEN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WAD8',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'WAD9',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'WAD10',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'WAD11',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'WAD12',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'WAD13',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'WAD14',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'WAD15',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88407
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_4_Bits',0,12,185,15,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'AEN16',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'AEN17',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'AEN18',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'AEN19',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'AEN20',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'AEN21',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'AEN22',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'AEN23',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WAD16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'WAD17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'WAD18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'WAD19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'WAD20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'WAD21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'WAD22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'WAD23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88793
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_5_Bits',0,12,208,15,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'AEN24',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'AEN25',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'AEN26',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'AEN27',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'AEN28',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'AEN29',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'AEN30',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'AEN31',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WAD24',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'WAD25',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'WAD26',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'WAD27',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'WAD28',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'WAD29',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'WAD30',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'WAD31',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89183
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ACT_STA_Bits',0,12,167,12,16,4,12
	.byte	'ACT_N',0,4
	.word	936
	.byte	32,0,2,35,0,0,13,12,144,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89573
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_OSW_Bits',0,12,167,19,16,4,12
	.byte	'SWON_S',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SWON_T',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	6,24,2,35,0,12
	.byte	'OSS',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,152,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89664
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_AOSV_2_Bits',0,12,220,12,16,4,12
	.byte	'AOSV_2A',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'AOSV_2B',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'AOSV_2C',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'AOSV_2D',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89830
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_Bits',0,12,161,13,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'WAPT',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'APT',0,4
	.word	936
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'WAPT_2B',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'APT_2B',0,4
	.word	936
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89979
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_Bits',0,12,229,12,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'WAPS',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'APS',0,4
	.word	936
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	5,19,2,35,0,12
	.byte	'WAPS_1C2',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'APS_1C2',0,4
	.word	936
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,13,12,208,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90185
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_2C_Bits',0,12,173,13,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'APT_2C',0,4
	.word	936
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	20,0,2,35,0,0,13,12,136,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90392
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_1C3_Bits',0,12,241,12,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'APS_1C3',0,4
	.word	936
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,216,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90528
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUTC_Bits',0,12,152,19,16,4,12
	.byte	'NUTE',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'FST',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	2,19,2,35,0,12
	.byte	'SYN_T',0,4
	.word	936
	.byte	3,16,2,35,0,12
	.byte	'SYN_T_OLD',0,4
	.word	936
	.byte	3,13,2,35,0,12
	.byte	'VTN',0,4
	.word	936
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	4,3,2,35,0,12
	.byte	'WNUT',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'WVTN',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,144,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90665
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_Bits',0,12,242,18,16,4,12
	.byte	'NUSE',0,4
	.word	936
	.byte	6,26,2,35,0,12
	.byte	'FSS',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SYN_S',0,4
	.word	936
	.byte	6,19,2,35,0,12
	.byte	'SYN_S_OLD',0,4
	.word	936
	.byte	6,13,2,35,0,12
	.byte	'VSN',0,4
	.word	936
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	4,3,2,35,0,12
	.byte	'WNUS',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'WVSN',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,248,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90914
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NTI_CNT_Bits',0,12,235,18,16,4,12
	.byte	'NTI_CNT',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,13,12,240,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91140
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,12,226,17,16,4,12
	.byte	'PDI',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PEI',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TINI',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TAXI',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SISI',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TISI',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MSI',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MTI',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SASI',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TASI',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PWI',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'W2I',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'W1I',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'GL1I',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'LL1I',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EI',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'GL2I',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'LL2I',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TE0I',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TE1I',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TE2I',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TE3I',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TE4I',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'CDTI',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'CDSI',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,128,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91256
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_EN_Bits',0,12,151,17,16,4,12
	.byte	'PDI_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PEI_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TINI_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TAXI_IRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SISI_IRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TISI_IRQ_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MSI_IRQ_EN',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MTI_IRQ_EN',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SASI_IRQ_EN',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TASI_IRQ_EN',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PWI_IRQ_EN',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'W2I_IRQ_EN',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'W1I_IRQ_EN',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'GL1I_IRQ_EN',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'LL1I_IRQ_EN',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EI_IRQ_EN',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'GL2I_IRQ_EN',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'LL2I_IRQ_EN',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TE0I_IRQ_EN',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TE1I_IRQ_EN',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TE2I_IRQ_EN',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TE3I_IRQ_EN',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TE4I_IRQ_EN',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'CDTI_IRQ_EN',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'CDSI_IRQ_EN',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TORI_IRQ_EN',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SORI_IRQ_EN',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'DCGI_IRQ_EN',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,232,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91795
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,12,185,17,16,4,12
	.byte	'TRG_PDI',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_PEI',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_TINI',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG_TAXI',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG_SISI',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG_TISI',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TRG_MSI',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TRG_MTI',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TRG_SASI',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TRG_TASI',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TRG_PWI',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TRG_W2I',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TRG_W1I',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TRG_GL1I',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TRG_LL1I',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TRG_EI',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TRG_GL2I',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRG_LL2I',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TRG_TE0I',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TRG_TE1I',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TRG_TE2I',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TRG_TE3I',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TRG_TE4I',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TRG_CDTI',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'TRG_CDSI',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TRG_TORI',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'TRG_SORI',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'TRG_DCGI',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,240,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92526
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_MODE_Bits',0,12,219,17,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,248,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93178
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ',0,12,139,75,25,16,14
	.byte	'NOTIFY',0
	.word	91755
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	92486
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	93138
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	93255
	.byte	4,2,35,12,0,10
	.word	93295
	.byte	11
	.byte	'_Ifx_GTM_DPLL_EIRQ_EN_Bits',0,12,182,16,16,4,12
	.byte	'PDI_EIRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PEI_EIRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TINI_EIRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TAXI_EIRQ_EN',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SISI_EIRQ_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TISI_EIRQ_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'MSI_EIRQ_EN',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'MTI_EIRQ_EN',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SASI_EIRQ_EN',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TASI_EIRQ_EN',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PWI_EIRQ_EN',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'W2I_EIRQ_EN',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'W1I_EIRQ_EN',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'GL1I_EIRQ_EN',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'LL1I_EIRQ_EN',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EI_EIRQ_EN',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'GL2I_EIRQ_EN',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'LL2I_EIRQ_EN',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TE0I_EIRQ_EN',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TE1I_EIRQ_EN',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TE2I_EIRQ_EN',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TE3I_EIRQ_EN',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TE4I_EIRQ_EN',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'CDTI_EIRQ_EN',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'CDSI_EIRQ_EN',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'TORI_EIRQ_EN',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SORI_EIRQ_EN',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'DCGI_EIRQ_EN',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,13,12,152,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93384
	.byte	4,2,35,0,0,15,92
	.word	537
	.byte	16,91,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_Bits',0,12,251,16,16,4,12
	.byte	'INC_CNT1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94153
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_Bits',0,12,137,17,16,4,12
	.byte	'INC_CNT2',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94271
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_SYNC_Bits',0,12,181,13,16,4,12
	.byte	'APT_2B_EXT',0,4
	.word	936
	.byte	6,26,2,35,0,12
	.byte	'APT_2B_STATUS',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	7,18,2,35,0,12
	.byte	'APT_2B_OLD',0,4
	.word	936
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94389
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_Bits',0,12,141,13,16,4,12
	.byte	'APS_1C2_EXT',0,4
	.word	936
	.byte	6,26,2,35,0,12
	.byte	'APS_1C2_STATUS',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	7,18,2,35,0,12
	.byte	'APS_1C2_OLD',0,4
	.word	936
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,13,12,240,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94578
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,12,148,21,16,4,12
	.byte	'TBU_TS0_T',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,240,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94770
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,12,141,21,16,4,12
	.byte	'TBU_TS0_S',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94890
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,12,187,12,16,4,12
	.byte	'ADD_IN_LD1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95010
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,12,194,12,16,4,12
	.byte	'ADD_IN_LD2',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95132
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_STATUS_Bits',0,12,214,20,16,4,12
	.byte	'FPCE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CSO',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CTO',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'CRO',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'RCS',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'RCT',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PSE',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SOR',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'MS',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TOR',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'MT',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'RAM2_ERR',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	2,17,2,35,0,12
	.byte	'LOW_RES',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'CSVS',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'CSVT',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'CAIP2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'CAIP1',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'ISN',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'ITN',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'BWD2',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'BWD1',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'LOCK2',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SYS',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'SYT',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'FSD',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'FTD',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'LOCK1',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'ERR',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,208,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95254
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ID_PMTR_Bits',0,12,230,16,16,4,12
	.byte	'ID_PMTR_X',0,4
	.word	936
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,176,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95835
	.byte	4,2,35,0,0,15,128,1
	.word	95912
	.byte	16,31,0,15,96
	.word	537
	.byte	16,95,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,12,162,14,16,4,12
	.byte	'MLT',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	15,6,2,35,0,12
	.byte	'AMT',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	2,1,2,35,0,12
	.byte	'RMO',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,248,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95971
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,12,149,14,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	14,7,2,35,0,12
	.byte	'AMS',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	3,1,2,35,0,12
	.byte	'RMO',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,240,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96203
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,12,254,14,16,4,12
	.byte	'DMO',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,152,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96440
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_STATE_Bits',0,12,238,14,16,4,12
	.byte	'DMO',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	21,0,2,35,0,0,13,12,144,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96665
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RAM_INI_Bits',0,12,248,19,16,4,12
	.byte	'INIT_1A',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'INIT_1BC',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'INIT_2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'INIT_RAM',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,240,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96944
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSA_Bits',0,12,185,19,16,4,12
	.byte	'PSA',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97139
	.byte	4,2,35,0,0,15,128,1
	.word	97207
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_DLA_Bits',0,12,240,15,16,4,12
	.byte	'DLA',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97257
	.byte	4,2,35,0,0,15,128,1
	.word	97325
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_NA_Bits',0,12,178,18,16,4,12
	.byte	'DB',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	936
	.byte	10,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97375
	.byte	4,2,35,0,0,15,128,1
	.word	97478
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_DTA_Bits',0,12,247,15,16,4,12
	.byte	'DTA',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97528
	.byte	4,2,35,0,0,15,128,1
	.word	97596
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_Bits',0,12,253,21,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97646
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_OLD_Bits',0,12,132,22,16,4,12
	.byte	'TRIGGER_TS_OLD',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97762
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_T_Bits',0,12,223,16,16,4,12
	.byte	'TRIGGER_FT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97886
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_Bits',0,12,239,21,16,4,12
	.byte	'STATE_TS',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98003
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_OLD_Bits',0,12,246,21,16,4,12
	.byte	'STATE_TS_OLD',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98117
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_S_Bits',0,12,216,16,16,4,12
	.byte	'STATE_FT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98239
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMI_Bits',0,12,163,21,16,4,12
	.byte	'THMI',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98354
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMA_Bits',0,12,155,21,16,4,12
	.byte	'THMA',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,248,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98487
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THVAL_Bits',0,12,171,21,16,4,12
	.byte	'THVAL',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98620
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_Bits',0,12,200,21,16,4,12
	.byte	'TOV_DB',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'TOV_DW',0,4
	.word	936
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98732
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_S_Bits',0,12,209,21,16,4,12
	.byte	'DB',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	936
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98884
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,12,173,12,16,4,12
	.byte	'ADD_IN_CAL1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99030
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,12,180,12,16,4,12
	.byte	'ADD_IN_CAL2',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99154
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL1_Bits',0,12,162,18,16,4,12
	.byte	'MPVAL1',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'SIX1',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99278
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL2_Bits',0,12,170,18,16,4,12
	.byte	'MPVAL2',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'SIX2',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99408
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,12,219,18,16,4,12
	.byte	'NMB_T_TAR',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99538
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,12,227,18,16,4,12
	.byte	'NMB_T_TAR_OLD',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99681
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,12,195,18,16,4,12
	.byte	'NMB_S_TAR',0,4
	.word	936
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99832
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,12,203,18,16,4,12
	.byte	'NMB_S_TAR_OLD',0,4
	.word	936
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99975
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_Bits',0,12,145,20,16,4,12
	.byte	'RCDT_TX',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100126
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_Bits',0,12,131,20,16,4,12
	.byte	'RCDT_SX',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,248,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100242
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,12,152,20,16,4,12
	.byte	'RCDT_TX_NOM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100358
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,12,138,20,16,4,12
	.byte	'RCDT_SX_NOM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100482
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,12,180,20,16,4,12
	.byte	'RDT_T_ACT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100606
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,12,166,20,16,4,12
	.byte	'RDT_S_ACT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100726
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_T_ACT_Bits',0,12,154,16,16,4,12
	.byte	'DT_T_ACT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,248,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100846
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_ACT_Bits',0,12,133,16,16,4,12
	.byte	'DT_S_ACT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	100964
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_T_Bits',0,12,175,16,16,4,12
	.byte	'EDT_T',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101082
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_T_Bits',0,12,139,18,16,4,12
	.byte	'MEDT_T',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101194
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_S_Bits',0,12,168,16,16,4,12
	.byte	'EDT_S',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101308
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_S_Bits',0,12,132,18,16,4,12
	.byte	'MEDT_S',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,136,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101420
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_Bits',0,12,205,13,16,4,12
	.byte	'CDT_TX',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,168,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101534
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_Bits',0,12,191,13,16,4,12
	.byte	'CDT_SX',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101648
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,12,212,13,16,4,12
	.byte	'CDT_TX_NOM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101762
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,12,198,13,16,4,12
	.byte	'CDT_SX_NOM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	101884
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TLR_Bits',0,12,192,21,16,4,12
	.byte	'TLR',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	16,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102006
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_SLR_Bits',0,12,194,20,16,4,12
	.byte	'SLR',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	16,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102136
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PDT_Bits',0,12,177,19,16,4,12
	.byte	'DB',0,4
	.word	936
	.byte	14,18,2,35,0,12
	.byte	'DW',0,4
	.word	936
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102266
	.byte	4,2,35,0,0,15,128,1
	.word	102347
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_MLS1_Bits',0,12,146,18,16,4,12
	.byte	'MLS1',0,4
	.word	936
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	6,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102397
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MLS2_Bits',0,12,154,18,16,4,12
	.byte	'MLS2',0,4
	.word	936
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	6,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,160,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102530
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM_1_Bits',0,12,219,13,16,4,12
	.byte	'CNT_NUM_1',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102663
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM_2_Bits',0,12,226,13,16,4,12
	.byte	'CNT_NUM_2',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102783
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PVT_Bits',0,12,241,19,16,4,12
	.byte	'PVT',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	102903
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTC_Bits',0,12,220,19,16,4,12
	.byte	'PSTC',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103011
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSC_Bits',0,12,199,19,16,4,12
	.byte	'PSSC',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103121
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_Bits',0,12,227,19,16,4,12
	.byte	'PSTM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103231
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_OLD_Bits',0,12,234,19,16,4,12
	.byte	'PSTM_OLD',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103341
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_Bits',0,12,206,19,16,4,12
	.byte	'PSSM',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103459
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_OLD_Bits',0,12,213,19,16,4,12
	.byte	'PSSM_OLD',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103569
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_Bits',0,12,211,18,16,4,12
	.byte	'NMB_T',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103687
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_Bits',0,12,187,18,16,4,12
	.byte	'NMB_S',0,4
	.word	936
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,53,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103822
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_Bits',0,12,159,20,16,4,12
	.byte	'RDT_S',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	103957
	.byte	4,2,35,0,0,15,128,2
	.word	104029
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_TSF_S_Bits',0,12,225,21,16,4,12
	.byte	'TSF_S',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104079
	.byte	4,2,35,0,0,15,128,2
	.word	104151
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_ADT_S_Bits',0,12,201,12,16,4,12
	.byte	'PD_S',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'NS',0,4
	.word	936
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104201
	.byte	4,2,35,0,0,15,128,2
	.word	104309
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_Bits',0,12,254,15,16,4,12
	.byte	'DT_S',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104359
	.byte	4,2,35,0,0,15,128,2
	.word	104429
	.byte	16,63,0,15,128,8
	.word	537
	.byte	16,255,7,0,11
	.byte	'_Ifx_GTM_DPLL_TSAC_Bits',0,12,218,21,16,4,12
	.byte	'TSAC',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104490
	.byte	4,2,35,0,0,15,128,1
	.word	104560
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_PSAC_Bits',0,12,192,19,16,4,12
	.byte	'PSAC',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104610
	.byte	4,2,35,0,0,15,128,1
	.word	104680
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_DPLL_ACB_Bits',0,12,154,12,16,4,12
	.byte	'ACB_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	3,24,2,35,0,12
	.byte	'ACB_1',0,4
	.word	936
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	3,16,2,35,0,12
	.byte	'ACB_2',0,4
	.word	936
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	3,8,2,35,0,12
	.byte	'ACB_3',0,4
	.word	936
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,13,12,136,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104730
	.byte	4,2,35,0,0,15,32
	.word	104919
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_11_Bits',0,12,201,14,16,4,12
	.byte	'SIP1',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ERZ1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'PCMF1',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FSYL1',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'INCF1',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'PCMF1_INCCNT_B',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ADT',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ADS',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SIP2',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ERZ2',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'PCMF2',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'FSYL2',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'INCF2',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'PCMF2_INCCNT_B',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'STATE_EXT',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'ACBU',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'WSIP1',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'WERZ1',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'WPCMF1',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'WFSYL1',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'WINCF1',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'WPCMF1_INCCNT_B',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'WADT',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'WADS',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'WSIP2',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'WERZ2',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'WPCMF2',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'WFSYL2',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'WINCF2',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'WPCMF2_INCCNT_B',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'WSTATE_EXT',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'WACBU',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,136,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	104968
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THVAL2_Bits',0,12,178,21,16,4,12
	.byte	'THVAL',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,144,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	105628
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TIDEL_Bits',0,12,185,21,16,4,12
	.byte	'TIDEL',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	105741
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_SIDEL_Bits',0,12,187,20,16,4,12
	.byte	'SIDEL',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	105853
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_EXT_Bits',0,12,151,13,16,4,12
	.byte	'APS_1C2_EXT',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	8,17,2,35,0,12
	.byte	'APS_1C2_STATUS',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'APS_1C2_OLD',0,4
	.word	936
	.byte	7,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	9,0,2,35,0,0,13,12,248,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	105965
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_EXT_Bits',0,12,231,15,16,4,12
	.byte	'SNU',0,4
	.word	936
	.byte	6,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	10,16,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	936
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	10,0,2,35,0,0,13,12,192,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	106161
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_EXT_Bits',0,12,129,13,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'WAPS',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'APS',0,4
	.word	936
	.byte	7,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	4,19,2,35,0,12
	.byte	'WAPS_1C2',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'APS_1C2',0,4
	.word	936
	.byte	7,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	11,0,2,35,0,0,13,12,232,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	106314
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_1C3_EXT_Bits',0,12,249,12,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'APS_1C3',0,4
	.word	936
	.byte	7,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	23,0,2,35,0,0,13,12,224,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	106525
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_STA_Bits',0,12,202,20,16,4,12
	.byte	'STA_T',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'CNT_T',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'STA_S',0,4
	.word	936
	.byte	8,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'CNT_S',0,4
	.word	936
	.byte	3,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	106666
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INCF1_OFFSET_Bits',0,12,237,16,16,4,12
	.byte	'DPLL_INCF1_OFFSET',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	106872
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INCF2_OFFSET_Bits',0,12,244,16,16,4,12
	.byte	'DPLL_INCF2_OFFSET',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,192,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107003
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_T_START_Bits',0,12,161,16,16,4,12
	.byte	'DPLL_DT_T_START',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,128,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107134
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_START_Bits',0,12,140,16,16,4,12
	.byte	'DPLL_DT_S_START',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,51,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107261
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_STA_MASK_Bits',0,12,133,21,16,4,12
	.byte	'STA_NOTIFY_T',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'STA_NOTIFY_S',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,224,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107388
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_STA_FLAG_Bits',0,12,250,20,16,4,12
	.byte	'STA_FLAG_T',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	7,24,2,35,0,12
	.byte	'STA_FLAG_S',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'INC_CNT1_FLAG',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'INC_CNT2_FLAG',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	21,0,2,35,0,0,13,12,216,55,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107534
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_MASK_Bits',0,12,130,17,16,4,12
	.byte	'INC_CNT1_NOTIFY',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107748
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_MASK_Bits',0,12,144,17,16,4,12
	.byte	'INC_CNT2_NOTIFY',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,52,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	107878
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_EXT1_Bits',0,12,128,19,16,4,12
	.byte	'SYN_S',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	9,16,2,35,0,12
	.byte	'SYN_S_OLD',0,4
	.word	936
	.byte	7,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	7,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,128,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	108008
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_EXT2_Bits',0,12,139,19,16,4,12
	.byte	'NUSE',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	8,17,2,35,0,12
	.byte	'FSS',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'VSN',0,4
	.word	936
	.byte	7,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	6,3,2,35,0,12
	.byte	'WNUS',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'WVSN',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,136,54,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	108206
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTN_MIN_Bits',0,12,254,13,16,4,12
	.byte	'CTN_MIN',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	108428
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTN_MAX_Bits',0,12,247,13,16,4,12
	.byte	'CTN_MAX',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,216,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	108544
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CSN_MIN_Bits',0,12,240,13,16,4,12
	.byte	'CSN_MIN',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,208,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	108660
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CSN_MAX_Bits',0,12,233,13,16,4,12
	.byte	'CSN_MAX',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,200,50,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	108776
	.byte	4,2,35,0,0,15,132,97
	.word	537
	.byte	16,131,97,0,15,128,64
	.word	340
	.byte	16,255,15,0,15,128,64
	.word	537
	.byte	16,255,63,0,11
	.byte	'_Ifx_GTM_DPLL',0,12,160,75,25,128,128,2,14
	.byte	'CTRL_0',0
	.word	87583
	.byte	4,2,35,0,14
	.byte	'CTRL_1',0
	.word	87993
	.byte	4,2,35,4,14
	.byte	'CTRL_2',0
	.word	88367
	.byte	4,2,35,8,14
	.byte	'CTRL_3',0
	.word	88753
	.byte	4,2,35,12,14
	.byte	'CTRL_4',0
	.word	89143
	.byte	4,2,35,16,14
	.byte	'CTRL_5',0
	.word	89533
	.byte	4,2,35,20,14
	.byte	'ACT_STA',0
	.word	89624
	.byte	4,2,35,24,14
	.byte	'OSW',0
	.word	89790
	.byte	4,2,35,28,14
	.byte	'AOSV_2',0
	.word	89939
	.byte	4,2,35,32,14
	.byte	'APT',0
	.word	90145
	.byte	4,2,35,36,14
	.byte	'APS',0
	.word	90352
	.byte	4,2,35,40,14
	.byte	'APT_2C',0
	.word	90488
	.byte	4,2,35,44,14
	.byte	'APS_1C3',0
	.word	90625
	.byte	4,2,35,48,14
	.byte	'NUTC',0
	.word	90874
	.byte	4,2,35,52,14
	.byte	'NUSC',0
	.word	91100
	.byte	4,2,35,56,14
	.byte	'NTI_CNT',0
	.word	91216
	.byte	4,2,35,60,14
	.byte	'IRQ',0
	.word	93379
	.byte	16,2,35,64,14
	.byte	'EIRQ_EN',0
	.word	94104
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	94144
	.byte	92,2,35,84,14
	.byte	'INC_CNT1',0
	.word	94231
	.byte	4,3,35,176,1,14
	.byte	'INC_CNT2',0
	.word	94349
	.byte	4,3,35,180,1,14
	.byte	'APT_SYNC',0
	.word	94538
	.byte	4,3,35,184,1,14
	.byte	'APS_SYNC',0
	.word	94730
	.byte	4,3,35,188,1,14
	.byte	'TBU_TS0_T',0
	.word	94850
	.byte	4,3,35,192,1,14
	.byte	'TBU_TS0_S',0
	.word	94970
	.byte	4,3,35,196,1,14
	.byte	'ADD_IN_LD1',0
	.word	95092
	.byte	4,3,35,200,1,14
	.byte	'ADD_IN_LD2',0
	.word	95214
	.byte	4,3,35,204,1,14
	.byte	'reserved_D0',0
	.word	69696
	.byte	44,3,35,208,1,14
	.byte	'STATUS',0
	.word	95795
	.byte	4,3,35,252,1,14
	.byte	'ID_PMTR',0
	.word	95952
	.byte	128,1,3,35,128,2,14
	.byte	'reserved_180',0
	.word	95962
	.byte	96,3,35,128,3,14
	.byte	'CTRL_0_SHADOW_TRIGGER',0
	.word	96163
	.byte	4,3,35,224,3,14
	.byte	'CTRL_0_SHADOW_STATE',0
	.word	96400
	.byte	4,3,35,228,3,14
	.byte	'CTRL_1_SHADOW_TRIGGER',0
	.word	96625
	.byte	4,3,35,232,3,14
	.byte	'CTRL_1_SHADOW_STATE',0
	.word	96904
	.byte	4,3,35,236,3,14
	.byte	'reserved_1F0',0
	.word	5252
	.byte	12,3,35,240,3,14
	.byte	'RAM_INI',0
	.word	97099
	.byte	4,3,35,252,3,14
	.byte	'PSA',0
	.word	97247
	.byte	128,1,3,35,128,4,14
	.byte	'DLA',0
	.word	97365
	.byte	128,1,3,35,128,5,14
	.byte	'NA',0
	.word	97518
	.byte	128,1,3,35,128,6,14
	.byte	'DTA',0
	.word	97636
	.byte	128,1,3,35,128,7,14
	.byte	'TS_T',0
	.word	97722
	.byte	4,3,35,128,8,14
	.byte	'TS_T_OLD',0
	.word	97846
	.byte	4,3,35,132,8,14
	.byte	'FTV_T',0
	.word	97963
	.byte	4,3,35,136,8,14
	.byte	'reserved_40C',0
	.word	3092
	.byte	4,3,35,140,8,14
	.byte	'TS_S',0
	.word	98077
	.byte	4,3,35,144,8,14
	.byte	'TS_S_OLD',0
	.word	98199
	.byte	4,3,35,148,8,14
	.byte	'FTV_S',0
	.word	98314
	.byte	4,3,35,152,8,14
	.byte	'reserved_41C',0
	.word	3092
	.byte	4,3,35,156,8,14
	.byte	'THMI',0
	.word	98447
	.byte	4,3,35,160,8,14
	.byte	'THMA',0
	.word	98580
	.byte	4,3,35,164,8,14
	.byte	'THVAL',0
	.word	98692
	.byte	4,3,35,168,8,14
	.byte	'reserved_42C',0
	.word	3092
	.byte	4,3,35,172,8,14
	.byte	'TOV',0
	.word	98844
	.byte	4,3,35,176,8,14
	.byte	'TOV_S',0
	.word	98990
	.byte	4,3,35,180,8,14
	.byte	'ADD_IN_CAL1',0
	.word	99114
	.byte	4,3,35,184,8,14
	.byte	'ADD_IN_CAL2',0
	.word	99238
	.byte	4,3,35,188,8,14
	.byte	'MPVAL1',0
	.word	99368
	.byte	4,3,35,192,8,14
	.byte	'MPVAL2',0
	.word	99498
	.byte	4,3,35,196,8,14
	.byte	'NMB_T_TAR',0
	.word	99641
	.byte	4,3,35,200,8,14
	.byte	'NMB_T_TAR_OLD',0
	.word	99792
	.byte	4,3,35,204,8,14
	.byte	'NMB_S_TAR',0
	.word	99935
	.byte	4,3,35,208,8,14
	.byte	'NMB_S_TAR_OLD',0
	.word	100086
	.byte	4,3,35,212,8,14
	.byte	'reserved_458',0
	.word	4912
	.byte	8,3,35,216,8,14
	.byte	'RCDT_TX',0
	.word	100202
	.byte	4,3,35,224,8,14
	.byte	'RCDT_SX',0
	.word	100318
	.byte	4,3,35,228,8,14
	.byte	'RCDT_TX_NOM',0
	.word	100442
	.byte	4,3,35,232,8,14
	.byte	'RCDT_SX_NOM',0
	.word	100566
	.byte	4,3,35,236,8,14
	.byte	'RDT_T_ACT',0
	.word	100686
	.byte	4,3,35,240,8,14
	.byte	'RDT_S_ACT',0
	.word	100806
	.byte	4,3,35,244,8,14
	.byte	'DT_T_ACT',0
	.word	100924
	.byte	4,3,35,248,8,14
	.byte	'DT_S_ACT',0
	.word	101042
	.byte	4,3,35,252,8,14
	.byte	'EDT_T',0
	.word	101154
	.byte	4,3,35,128,9,14
	.byte	'MEDT_T',0
	.word	101268
	.byte	4,3,35,132,9,14
	.byte	'EDT_S',0
	.word	101380
	.byte	4,3,35,136,9,14
	.byte	'MEDT_S',0
	.word	101494
	.byte	4,3,35,140,9,14
	.byte	'CDT_TX',0
	.word	101608
	.byte	4,3,35,144,9,14
	.byte	'CDT_SX',0
	.word	101722
	.byte	4,3,35,148,9,14
	.byte	'CDT_TX_NOM',0
	.word	101844
	.byte	4,3,35,152,9,14
	.byte	'CDT_SX_NOM',0
	.word	101966
	.byte	4,3,35,156,9,14
	.byte	'TLR',0
	.word	102096
	.byte	4,3,35,160,9,14
	.byte	'SLR',0
	.word	102226
	.byte	4,3,35,164,9,14
	.byte	'reserved_4A8',0
	.word	70689
	.byte	88,3,35,168,9,14
	.byte	'PDT',0
	.word	102387
	.byte	128,1,3,35,128,10,14
	.byte	'reserved_580',0
	.word	82978
	.byte	64,3,35,128,11,14
	.byte	'MLS1',0
	.word	102490
	.byte	4,3,35,192,11,14
	.byte	'MLS2',0
	.word	102623
	.byte	4,3,35,196,11,14
	.byte	'CNT_NUM_1',0
	.word	102743
	.byte	4,3,35,200,11,14
	.byte	'CNT_NUM_2',0
	.word	102863
	.byte	4,3,35,204,11,14
	.byte	'PVT',0
	.word	102971
	.byte	4,3,35,208,11,14
	.byte	'reserved_5D4',0
	.word	5252
	.byte	12,3,35,212,11,14
	.byte	'PSTC',0
	.word	103081
	.byte	4,3,35,224,11,14
	.byte	'PSSC',0
	.word	103191
	.byte	4,3,35,228,11,14
	.byte	'PSTM',0
	.word	103301
	.byte	4,3,35,232,11,14
	.byte	'PSTM_OLD',0
	.word	103419
	.byte	4,3,35,236,11,14
	.byte	'PSSM',0
	.word	103529
	.byte	4,3,35,240,11,14
	.byte	'PSSM_OLD',0
	.word	103647
	.byte	4,3,35,244,11,14
	.byte	'NMB_T',0
	.word	103782
	.byte	4,3,35,248,11,14
	.byte	'NMB_S',0
	.word	103917
	.byte	4,3,35,252,11,14
	.byte	'RDT_S',0
	.word	104069
	.byte	128,2,3,35,128,12,14
	.byte	'TSF_S',0
	.word	104191
	.byte	128,2,3,35,128,14,14
	.byte	'ADT_S',0
	.word	104349
	.byte	128,2,3,35,128,16,14
	.byte	'DT_S',0
	.word	104469
	.byte	128,2,3,35,128,18,14
	.byte	'reserved_A00',0
	.word	104479
	.byte	128,8,3,35,128,20,14
	.byte	'TSAC',0
	.word	104600
	.byte	128,1,3,35,128,28,14
	.byte	'PSAC',0
	.word	104720
	.byte	128,1,3,35,128,29,14
	.byte	'ACB',0
	.word	104959
	.byte	32,3,35,128,30,14
	.byte	'CTRL_11',0
	.word	105588
	.byte	4,3,35,160,30,14
	.byte	'THVAL2',0
	.word	105701
	.byte	4,3,35,164,30,14
	.byte	'TIDEL',0
	.word	105813
	.byte	4,3,35,168,30,14
	.byte	'SIDEL',0
	.word	105925
	.byte	4,3,35,172,30,14
	.byte	'APS_SYNC_EXT',0
	.word	106121
	.byte	4,3,35,176,30,14
	.byte	'CTRL_EXT',0
	.word	106274
	.byte	4,3,35,180,30,14
	.byte	'APS_EXT',0
	.word	106485
	.byte	4,3,35,184,30,14
	.byte	'APS_1C3_EXT',0
	.word	106626
	.byte	4,3,35,188,30,14
	.byte	'STA',0
	.word	106832
	.byte	4,3,35,192,30,14
	.byte	'INCF1_OFFSET',0
	.word	106963
	.byte	4,3,35,196,30,14
	.byte	'INCF2_OFFSET',0
	.word	107094
	.byte	4,3,35,200,30,14
	.byte	'DT_T_START',0
	.word	107221
	.byte	4,3,35,204,30,14
	.byte	'DT_S_START',0
	.word	107348
	.byte	4,3,35,208,30,14
	.byte	'STA_MASK',0
	.word	107494
	.byte	4,3,35,212,30,14
	.byte	'STA_FLAG',0
	.word	107708
	.byte	4,3,35,216,30,14
	.byte	'INC_CNT1_MASK',0
	.word	107838
	.byte	4,3,35,220,30,14
	.byte	'INC_CNT2_MASK',0
	.word	107968
	.byte	4,3,35,224,30,14
	.byte	'NUSC_EXT1',0
	.word	108166
	.byte	4,3,35,228,30,14
	.byte	'NUSC_EXT2',0
	.word	108388
	.byte	4,3,35,232,30,14
	.byte	'CTN_MIN',0
	.word	108504
	.byte	4,3,35,236,30,14
	.byte	'CTN_MAX',0
	.word	108620
	.byte	4,3,35,240,30,14
	.byte	'CSN_MIN',0
	.word	108736
	.byte	4,3,35,244,30,14
	.byte	'CSN_MAX',0
	.word	108852
	.byte	4,3,35,248,30,14
	.byte	'reserved_F7C',0
	.word	108892
	.byte	132,97,3,35,252,30,14
	.byte	'RR2',0
	.word	108903
	.byte	128,64,4,35,128,128,1,14
	.byte	'reserved_6000',0
	.word	108914
	.byte	128,64,4,35,128,192,1,0,10
	.word	108925
	.byte	15,128,250,27
	.word	537
	.byte	16,255,249,27,0,11
	.byte	'_Ifx_GTM_CLC_Bits',0,12,252,9,16,4,12
	.byte	'DISR',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'DISS',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EDIS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,13,12,240,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	111438
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RESET_CLR_Bits',0,12,204,36,16,4,12
	.byte	'CLR',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	340
	.byte	31,0,2,35,0,0,13,12,208,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	111595
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RESET1_Bits',0,12,189,36,16,4,12
	.byte	'RST',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'RSTSTAT',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,13,12,192,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	111703
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RESET2_Bits',0,12,197,36,16,4,12
	.byte	'RST',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	340
	.byte	31,0,2,35,0,0,13,12,200,63,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	111827
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,12,73,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	537
	.byte	1,0,2,35,3,0,13,12,176,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	111932
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,12,110,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,13,12,184,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	112501
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTBU0T_Bits',0,12,163,34,16,4,12
	.byte	'CV',0,4
	.word	340
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'CM',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,12,208,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	112590
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTBU1T_Bits',0,12,172,34,16,4,12
	.byte	'CV',0,4
	.word	340
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'EN',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,216,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	112737
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTBU2T_Bits',0,12,181,34,16,4,12
	.byte	'CV',0,4
	.word	340
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'EN',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,224,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	112884
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTBU3T_Bits',0,12,190,34,16,4,12
	.byte	'CV',0,4
	.word	340
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'EN',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,232,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113031
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTSS_Bits',0,12,226,34,16,4,12
	.byte	'OTGB0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'OTGB1',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'OTGBM0',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'OTGBM1',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,128,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113178
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTSC0_Bits',0,12,199,34,16,4,12
	.byte	'B0LMT',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'B0LMI',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'B0HMT',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'B0HMI',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'B1LMT',0,1
	.word	537
	.byte	3,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'B1LMI',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'B1HMT',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'B1HMI',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,240,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113410
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OTSC1_Bits',0,12,216,34,16,4,12
	.byte	'MCS',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'MI',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'MOE',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,4
	.word	340
	.byte	22,0,2,35,0,0,13,12,248,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113709
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_ODA_Bits',0,12,156,34,16,4,12
	.byte	'DRAC',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,13,12,200,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113870
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS_OCS_Bits',0,12,146,34,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	24,8,2,35,0,12
	.byte	'SUS',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SUS_P',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'SUSSTA',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,12,192,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113978
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCDS',0,12,201,76,25,36,14
	.byte	'OTBU0T',0
	.word	112697
	.byte	4,2,35,0,14
	.byte	'OTBU1T',0
	.word	112844
	.byte	4,2,35,4,14
	.byte	'OTBU2T',0
	.word	112991
	.byte	4,2,35,8,14
	.byte	'OTBU3T',0
	.word	113138
	.byte	4,2,35,12,14
	.byte	'OTSS',0
	.word	113370
	.byte	4,2,35,16,14
	.byte	'OTSC0',0
	.word	113669
	.byte	4,2,35,20,14
	.byte	'OTSC1',0
	.word	113830
	.byte	4,2,35,24,14
	.byte	'ODA',0
	.word	113938
	.byte	4,2,35,28,14
	.byte	'OCS',0
	.word	114103
	.byte	4,2,35,32,0,10
	.word	114143
	.byte	11
	.byte	'_Ifx_GTM_TIMINSEL_Bits',0,12,199,38,16,4,12
	.byte	'CH0SEL',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'CH1SEL',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'CH2SEL',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'CH3SEL',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'CH4SEL',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'CH5SEL',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'CH6SEL',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'CH7SEL',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,168,65,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114303
	.byte	4,2,35,0,0,15,24
	.word	114477
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_TOUTSEL_Bits',0,12,144,42,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'SEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'SEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'SEL6',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SEL7',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,224,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114526
	.byte	4,2,35,0,0,15,76
	.word	114683
	.byte	16,18,0,11
	.byte	'_Ifx_GTM_DSADCINSEL_Bits',0,12,139,22,16,4,12
	.byte	'INSEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'INSEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'INSEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'INSEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'INSEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'INSEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'INSEL6',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'INSEL7',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,240,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114732
	.byte	4,2,35,0,0,15,24
	.word	114908
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_DSADC_OUTSEL0_Bits',0,12,152,22,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'SEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'SEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	8,0,2,35,3,0,13,12,248,56,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114957
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DSADC',0,12,227,76,25,8,14
	.byte	'OUTSEL0',0
	.word	115111
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	3092
	.byte	4,2,35,4,0,15,32
	.word	115151
	.byte	16,3,0,10
	.word	115210
	.byte	11
	.byte	'_Ifx_GTM_ADCTRIG_OUT0_Bits',0,12,116,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'SEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'SEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'SEL6',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SEL7',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,192,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115224
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ADCTRIG_OUT1_Bits',0,12,129,1,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,12,200,42,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115425
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ADCTRIG',0,12,246,76,25,8,14
	.byte	'OUT0',0
	.word	115385
	.byte	4,2,35,0,14
	.byte	'OUT1',0
	.word	115546
	.byte	4,2,35,4,0,15,40
	.word	115586
	.byte	16,4,0,10
	.word	115638
	.byte	11
	.byte	'_Ifx_GTM_DXOUTCON_Bits',0,12,196,22,16,4,12
	.byte	'OUT0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'OUT1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'OUT2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'OUT3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'OUT4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,4
	.word	340
	.byte	27,0,2,35,0,0,13,12,144,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115652
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TRIGOUT_Bits',0,12,157,42,16,4,12
	.byte	'TRIG0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'TRIG1',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'TRIG2',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'TRIG3',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'TRIG4',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'TRIG5',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'TRIG6',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'TRIG7',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,12,232,67,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115824
	.byte	4,2,35,0,0,15,20
	.word	116012
	.byte	16,4,0,11
	.byte	'_Ifx_GTM_INTOUT_Bits',0,12,143,29,16,4,12
	.byte	'INT0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,13,12,248,58,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116061
	.byte	4,2,35,0,0,15,20
	.word	116127
	.byte	16,4,0,11
	.byte	'_Ifx_GTM_MCSTRIGOUTSEL_Bits',0,12,148,30,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,200,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116176
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCSINTSTAT_Bits',0,12,137,30,16,4,12
	.byte	'MCS00',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'MCS10',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'MCS20',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'MCS30',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'MCS40',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,4
	.word	340
	.byte	27,0,2,35,0,0,13,12,192,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116407
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCSINTCLR_Bits',0,12,254,29,16,4,12
	.byte	'MCS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'MCS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'MCS2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'MCS3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'MCS4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,4
	.word	340
	.byte	27,0,2,35,0,0,13,12,184,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116586
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXINCON_Bits',0,12,179,22,16,4,12
	.byte	'IN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'IN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'IN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'IN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,2
	.word	1088
	.byte	11,0,2,35,0,12
	.byte	'DSS0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'DSS1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'DSS2',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'DSS3',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'DSS4',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,2
	.word	1088
	.byte	11,0,2,35,2,0,13,12,136,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116759
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DATAIN_Bits',0,12,148,12,16,4,12
	.byte	'DATA',0,4
	.word	340
	.byte	32,0,2,35,0,0,13,12,128,49,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117028
	.byte	4,2,35,0,0,15,20
	.word	117072
	.byte	16,4,0,11
	.byte	'_Ifx_GTM_MSC_SET_CON0_Bits',0,12,222,33,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	5,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	3,0,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	5,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'SEL2',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	3,0,2,35,2,12
	.byte	'SEL3',0,1
	.word	537
	.byte	5,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,160,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117121
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_SET_CON1_Bits',0,12,235,33,16,4,12
	.byte	'SEL4',0,1
	.word	537
	.byte	5,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	3,0,2,35,0,12
	.byte	'SEL5',0,1
	.word	537
	.byte	5,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'SEL6',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	3,0,2,35,2,12
	.byte	'SEL7',0,1
	.word	537
	.byte	5,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,168,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117350
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_SET_CON2_Bits',0,12,248,33,16,4,12
	.byte	'SEL8',0,1
	.word	537
	.byte	5,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	3,0,2,35,0,12
	.byte	'SEL9',0,1
	.word	537
	.byte	5,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'SEL10',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	3,0,2,35,2,12
	.byte	'SEL11',0,1
	.word	537
	.byte	5,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,176,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117579
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_SET_CON3_Bits',0,12,133,34,16,4,12
	.byte	'SEL12',0,1
	.word	537
	.byte	5,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	3,0,2,35,0,12
	.byte	'SEL13',0,1
	.word	537
	.byte	5,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'SEL14',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	3,0,2,35,2,12
	.byte	'SEL15',0,1
	.word	537
	.byte	5,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,13,12,184,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117810
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_SET',0,12,137,77,25,16,14
	.byte	'CON0',0
	.word	117310
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	117539
	.byte	4,2,35,4,14
	.byte	'CON2',0
	.word	117770
	.byte	4,2,35,8,14
	.byte	'CON3',0
	.word	118003
	.byte	4,2,35,12,0,15,64
	.word	118043
	.byte	16,3,0,10
	.word	118123
	.byte	11
	.byte	'_Ifx_GTM_MSC_MSCQ_INLCON_Bits',0,12,180,33,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'SEL3',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'SEL4',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'SEL5',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'SEL6',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'SEL7',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'SEL8',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'SEL9',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'SEL10',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'SEL11',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'SEL12',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'SEL13',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'SEL14',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'SEL15',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,12,144,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118137
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_MSCQ_INHCON_Bits',0,12,159,33,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'SEL3',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'SEL4',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'SEL5',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'SEL6',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'SEL7',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'SEL8',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'SEL9',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'SEL10',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'SEL11',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'SEL12',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'SEL13',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'SEL14',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'SEL15',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,12,136,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118476
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_MSCQ_INLEXTCON_Bits',0,12,201,33,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'SEL3',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'SEL4',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'SEL5',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'SEL6',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'SEL7',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'SEL8',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'SEL9',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'SEL10',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'SEL11',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'SEL12',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'SEL13',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'SEL14',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'SEL15',0,1
	.word	537
	.byte	2,0,2,35,3,0,13,12,152,61,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118815
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSC_MSCQ',0,12,158,77,25,12,14
	.byte	'INLCON',0
	.word	118436
	.byte	4,2,35,0,14
	.byte	'INHCON',0
	.word	118775
	.byte	4,2,35,4,14
	.byte	'INLEXTCON',0
	.word	119117
	.byte	4,2,35,8,0,15,24
	.word	119157
	.byte	16,1,0,10
	.word	119233
	.byte	11
	.byte	'_Ifx_GTM_MSC',0,12,178,77,25,168,1,14
	.byte	'SET',0
	.word	118132
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	19121
	.byte	80,2,35,64,14
	.byte	'MSCQ',0
	.word	119242
	.byte	24,3,35,144,1,0,10
	.word	119247
	.byte	15,36
	.word	537
	.byte	16,35,0,11
	.byte	'_Ifx_GTM_PSI5OUTSEL_Bits',0,12,255,34,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'SEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'SEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	8,0,2,35,3,0,13,12,152,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119331
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_PSI5SOUTSEL_Bits',0,12,139,35,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'SEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'SEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'SEL6',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SEL7',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,160,62,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119522
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_LCDCDCOUTSEL_Bits',0,12,208,29,16,4,12
	.byte	'SEL',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,13,12,160,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119723
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DTMAUXINSEL_Bits',0,12,164,22,16,4,12
	.byte	'ASEL0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'ASEL1',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'ASEL2',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'ASEL3',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'ASEL4',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	537
	.byte	6,0,2,35,1,12
	.byte	'TSEL0',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'TSEL1',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'TSEL2',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	1088
	.byte	10,0,2,35,2,0,13,12,128,57,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119834
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CANOUTSEL0_Bits',0,12,140,7,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'SEL4',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'SEL5',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'SEL6',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SEL7',0,1
	.word	537
	.byte	4,0,2,35,3,0,13,12,184,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CANOUTSEL1_Bits',0,12,153,7,16,4,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SEL2',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'SEL3',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,13,12,192,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120289
	.byte	4,2,35,0,0,15,156,192,16
	.word	537
	.byte	16,155,192,16,0,11
	.byte	'_Ifx_GTM_CCM_ARP_CTRL_Bits',0,12,172,7,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'SIZE',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'DIS_PROT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	6,1,2,35,0,12
	.byte	'WPROT_AEI',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,208,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120461
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_ARP_PROT_Bits',0,12,183,7,16,4,12
	.byte	'WPROT0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'WPROT1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'WPROT2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'WPROT3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'WPROT4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'WPROT5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'WPROT6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'WPROT7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,216,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120654
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_ARP',0,12,198,77,25,8,14
	.byte	'CTRL',0
	.word	120614
	.byte	4,2,35,0,14
	.byte	'PROT',0
	.word	120854
	.byte	4,2,35,4,0,15,80
	.word	120894
	.byte	16,9,0,10
	.word	120946
	.byte	11
	.byte	'_Ifx_GTM_CCM_AEIM_STA_Bits',0,12,163,7,16,4,12
	.byte	'AEIM_XPT_ADDR',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'AEIM_XPT_STA',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	6,0,2,35,0,0,13,12,200,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120960
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_HW_CONF_Bits',0,12,132,8,16,4,12
	.byte	'GRSTEN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'BRIDGE_MODE_RST',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CFG_CLOCK_RATE',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ATOM_OUT_RST',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ATOM_TRIG_CHAIN',0,4
	.word	936
	.byte	3,24,2,35,0,12
	.byte	'TOM_OUT_RST',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TOM_TRIG_CHAIN',0,4
	.word	936
	.byte	3,20,2,35,0,12
	.byte	'RAM_INIT_RST',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'ERM',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'ARU_CONNECT_CONFIG',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'IRQ_MODE_LEVEL',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'IRQ_MODE_PULSE',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'IRQ_MODE_PULSE_NOTIFY',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'IRQ_MODE_SINGLE_PULSE',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'ATOM_TRIG_INTCHAIN',0,4
	.word	936
	.byte	4,8,2,35,0,12
	.byte	'TOM_TRIG_INTCHAIN',0,4
	.word	936
	.byte	5,3,2,35,0,12
	.byte	'INT_CLK_EN_GEN',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,136,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121129
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_TIM_AUX_IN_SRC_Bits',0,12,164,8,16,4,12
	.byte	'SRC_CH0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SRC_CH1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SRC_CH2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SRC_CH3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SRC_CH4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SRC_CH5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SRC_CH6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SRC_CH7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'SEL_OUT_N_CH0',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'SEL_OUT_N_CH1',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'SEL_OUT_N_CH2',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'SEL_OUT_N_CH3',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'SEL_OUT_N_CH4',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'SEL_OUT_N_CH5',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'SEL_OUT_N_CH6',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'SEL_OUT_N_CH7',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,152,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121717
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_EXT_CAP_EN_Bits',0,12,252,7,16,4,12
	.byte	'TIM_I_EXT_CAP_EN',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'TIM_IP1_EXT_CAP_EN',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,128,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122194
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_TOM_OUT_Bits',0,12,187,8,16,4,12
	.byte	'TOM_OUT',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'TOM_OUT_N',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,160,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122351
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_ATOM_OUT_Bits',0,12,197,7,16,4,12
	.byte	'ATOM_I_OUT',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'ATOM_I_OUT_N',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'ATOM_IP1_OUT',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'ATOM_IP1_OUT_N',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,224,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122464
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_CMU_CLK_CFG_Bits',0,12,224,7,16,4,12
	.byte	'CLK0_SRC',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'CLK1_SRC',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'CLK2_SRC',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'CLK3_SRC',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'CLK4_SRC',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'CLK5_SRC',0,4
	.word	936
	.byte	2,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'CLK6_SRC',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'CLK7_SRC',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,13,12,240,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122634
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_CMU_FXCLK_CFG_Bits',0,12,245,7,16,4,12
	.byte	'FXCLK0_SRC',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	28,0,2,35,0,0,13,12,248,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123053
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_CFG_Bits',0,12,206,7,16,4,12
	.byte	'EN_TIM',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN_TOM_SPE_TDTM',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN_ATOM_ADTM',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN_MCS',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN_DPLL_MAP',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN_BRC',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN_PSM',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN_CMP_MON',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'CLS_CLK_DIV',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	12,2,2,35,0,12
	.byte	'TBU_DIR1',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'TBU_DIR2',0,4
	.word	936
	.byte	1,0,2,35,0,0,13,12,232,46,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123176
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM_PROT_Bits',0,12,157,8,16,4,12
	.byte	'CLS_PROT',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,13,12,144,47,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123521
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CCM',0,12,217,77,25,128,4,14
	.byte	'ARP',0
	.word	120955
	.byte	80,2,35,0,14
	.byte	'reserved_50',0
	.word	56189
	.byte	136,3,2,35,80,14
	.byte	'AEIM_STA',0
	.word	121089
	.byte	4,3,35,216,3,14
	.byte	'HW_CONF',0
	.word	121677
	.byte	4,3,35,220,3,14
	.byte	'TIM_AUX_IN_SRC',0
	.word	122154
	.byte	4,3,35,224,3,14
	.byte	'EXT_CAP_EN',0
	.word	122311
	.byte	4,3,35,228,3,14
	.byte	'TOM_OUT',0
	.word	122424
	.byte	4,3,35,232,3,14
	.byte	'ATOM_OUT',0
	.word	122594
	.byte	4,3,35,236,3,14
	.byte	'CMU_CLK_CFG',0
	.word	123013
	.byte	4,3,35,240,3,14
	.byte	'CMU_FXCLK_CFG',0
	.word	123136
	.byte	4,3,35,244,3,14
	.byte	'CFG',0
	.word	123481
	.byte	4,3,35,248,3,14
	.byte	'PROT',0
	.word	123593
	.byte	4,3,35,252,3,0,15,128,24
	.word	123633
	.byte	16,5,0,10
	.word	123884
	.byte	15,128,40
	.word	537
	.byte	16,255,39,0,15,128,3
	.word	23633
	.byte	16,5,0,10
	.word	123910
	.byte	15,128,5
	.word	537
	.byte	16,255,4,0,11
	.byte	'_Ifx_GTM_CDTM',0,12,162,78,25,128,8,14
	.byte	'DTM',0
	.word	123920
	.byte	128,3,2,35,0,14
	.byte	'reserved_180',0
	.word	123925
	.byte	128,5,3,35,128,3,0,15,128,40
	.word	123936
	.byte	16,4,0,10
	.word	123996
	.byte	15,128,88
	.word	537
	.byte	16,255,87,0,15,128,96
	.word	19171
	.byte	16,5,0,10
	.word	124022
	.byte	15,128,160,1
	.word	537
	.byte	16,255,159,1,0,11
	.byte	'_Ifx_GTM_MCS_CH_R_Bits',0,12,182,31,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,176,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124050
	.byte	4,2,35,0,0,15,32
	.word	124119
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_MCS_CH_CTRL_Bits',0,12,234,30,16,4,12
	.byte	'EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ERR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'CY',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'Z',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'V',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'N',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'CAT',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'CWT',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SAT',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	5,16,2,35,0,12
	.byte	'SP_CNT',0,4
	.word	936
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	13,0,2,35,0,0,13,12,240,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124168
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_ACB_Bits',0,12,193,30,16,4,12
	.byte	'ACB0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ACB1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ACB2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ACB3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ACB4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,13,12,224,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124469
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_CTRG_Bits',0,12,204,30,16,4,12
	.byte	'TRG0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TRG16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRG17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TRG18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TRG19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TRG20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TRG21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TRG22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TRG23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,232,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124643
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_STRG_Bits',0,12,189,31,16,4,12
	.byte	'TRG0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'TRG16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'TRG17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'TRG18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'TRG19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'TRG20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'TRG21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'TRG22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'TRG23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,13,12,184,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125137
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_MHB_Bits',0,12,168,31,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,160,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125631
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_PC_Bits',0,12,175,31,16,4,12
	.byte	'PC',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,168,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125741
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,12,159,31,16,4,12
	.byte	'MCS_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ERR_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,152,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125849
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,12,134,31,16,4,12
	.byte	'MCS_IRQ_EN',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ERR_IRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,128,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126011
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,12,143,31,16,4,12
	.byte	'TRG_MCS_IRQ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TRG_STK_ERR_IRQ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TRG_ERR_IRQ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,136,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126178
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,12,152,31,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,13,12,144,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126353
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ',0,12,168,79,25,16,14
	.byte	'NOTIFY',0
	.word	125971
	.byte	4,2,35,0,14
	.byte	'EN',0
	.word	126138
	.byte	4,2,35,4,14
	.byte	'FORCINT',0
	.word	126313
	.byte	4,2,35,8,14
	.byte	'MODE',0
	.word	126432
	.byte	4,2,35,12,0,10
	.word	126472
	.byte	11
	.byte	'_Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,12,253,30,16,4,12
	.byte	'MCS_EIRQ_EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_EIRQ_EN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ERR_EIRQ_EN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,13,12,248,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126563
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH',0,12,189,79,25,88,14
	.byte	'R',0
	.word	124159
	.byte	32,2,35,0,14
	.byte	'CTRL',0
	.word	124429
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	124603
	.byte	4,2,35,36,14
	.byte	'CTRG',0
	.word	125097
	.byte	4,2,35,40,14
	.byte	'STRG',0
	.word	125591
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	5252
	.byte	12,2,35,48,14
	.byte	'MHB',0
	.word	125701
	.byte	4,2,35,60,14
	.byte	'PC',0
	.word	125809
	.byte	4,2,35,64,14
	.byte	'IRQ',0
	.word	126558
	.byte	16,2,35,68,14
	.byte	'EIRQ_EN',0
	.word	126695
	.byte	4,2,35,84,0,10
	.word	126735
	.byte	11
	.byte	'_Ifx_GTM_MCS_REG_PROT_Bits',0,12,137,32,16,4,12
	.byte	'WPROT0',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'WPROT1',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'WPROT2',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'WPROT3',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'WPROT4',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'WPROT5',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'WPROT6',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'WPROT7',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,13,12,216,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126905
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CTRL_STAT_Bits',0,12,219,31,16,4,12
	.byte	'SCD_MODE',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	6,24,2,35,0,12
	.byte	'SCD_CH',0,4
	.word	936
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'RAM_RST',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'HLT_SP_OFL',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	2,12,2,35,0,12
	.byte	'ERR_SRC_ID',0,4
	.word	936
	.byte	3,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN_TIM_FOUT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN_XOREG',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'HLT_AEIM_ERR',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	5,0,2,35,0,0,13,12,192,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127146
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_RESET_Bits',0,12,151,32,16,4,12
	.byte	'RST0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'RST1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'RST2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'RST3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'RST4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'RST5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'RST6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'RST7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,224,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127503
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CAT_Bits',0,12,179,30,16,4,12
	.byte	'CAT0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CAT1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CAT2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CAT3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'CAT4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'CAT5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CAT6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CAT7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,216,59,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127724
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CWT_Bits',0,12,237,31,16,4,12
	.byte	'CWT0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CWT1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CWT2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CWT3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'CWT4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'CWT5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CWT6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CWT7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,200,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127943
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_ERR_Bits',0,12,251,31,16,4,12
	.byte	'ERR0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ERR1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'ERR2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'ERR3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'ERR4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ERR5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'ERR6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'ERR7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,13,12,208,60,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128162
	.byte	4,2,35,0,0,10
	.word	126735
	.byte	15,40
	.word	537
	.byte	16,39,0,10
	.word	126735
	.byte	10
	.word	126735
	.byte	10
	.word	126735
	.byte	10
	.word	126735
	.byte	10
	.word	126735
	.byte	10
	.word	126735
	.byte	15,168,24
	.word	537
	.byte	16,167,24,0,11
	.byte	'_Ifx_GTM_MCS',0,12,216,79,25,128,32,14
	.byte	'CH0',0
	.word	126900
	.byte	88,2,35,0,14
	.byte	'reserved_58',0
	.word	4912
	.byte	8,2,35,88,14
	.byte	'REG_PROT',0
	.word	127106
	.byte	4,2,35,96,14
	.byte	'CTRL_STAT',0
	.word	127463
	.byte	4,2,35,100,14
	.byte	'RESET',0
	.word	127684
	.byte	4,2,35,104,14
	.byte	'CAT',0
	.word	127903
	.byte	4,2,35,108,14
	.byte	'CWT',0
	.word	128122
	.byte	4,2,35,112,14
	.byte	'reserved_74',0
	.word	4912
	.byte	8,2,35,116,14
	.byte	'ERR',0
	.word	128341
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	128381
	.byte	88,3,35,128,1,14
	.byte	'reserved_D8',0
	.word	128386
	.byte	40,3,35,216,1,14
	.byte	'CH2',0
	.word	128395
	.byte	88,3,35,128,2,14
	.byte	'reserved_158',0
	.word	128386
	.byte	40,3,35,216,2,14
	.byte	'CH3',0
	.word	128400
	.byte	88,3,35,128,3,14
	.byte	'reserved_1D8',0
	.word	128386
	.byte	40,3,35,216,3,14
	.byte	'CH4',0
	.word	128405
	.byte	88,3,35,128,4,14
	.byte	'reserved_258',0
	.word	128386
	.byte	40,3,35,216,4,14
	.byte	'CH5',0
	.word	128410
	.byte	88,3,35,128,5,14
	.byte	'reserved_2D8',0
	.word	128386
	.byte	40,3,35,216,5,14
	.byte	'CH6',0
	.word	128415
	.byte	88,3,35,128,6,14
	.byte	'reserved_358',0
	.word	128386
	.byte	40,3,35,216,6,14
	.byte	'CH7',0
	.word	128420
	.byte	88,3,35,128,7,14
	.byte	'reserved_3D8',0
	.word	128425
	.byte	168,24,3,35,216,7,0,15,128,160,1
	.word	128436
	.byte	16,4,0,10
	.word	128862
	.byte	15,128,224,2
	.word	537
	.byte	16,255,223,2,0,11
	.byte	'_Ifx_GTM',0,12,128,80,25,128,128,64,14
	.byte	'REV',0
	.word	34715
	.byte	4,2,35,0,14
	.byte	'RST',0
	.word	34876
	.byte	4,2,35,4,14
	.byte	'CTRL',0
	.word	35089
	.byte	4,2,35,8,14
	.byte	'AEI_ADDR_XPT',0
	.word	35224
	.byte	4,2,35,12,14
	.byte	'IRQ',0
	.word	36619
	.byte	16,2,35,16,14
	.byte	'EIRQ_EN',0
	.word	36955
	.byte	4,2,35,32,14
	.byte	'HW_CONF',0
	.word	37539
	.byte	4,2,35,36,14
	.byte	'CFG',0
	.word	37648
	.byte	4,2,35,40,14
	.byte	'AEI_STA_XPT',0
	.word	37776
	.byte	4,2,35,44,14
	.byte	'BRIDGE',0
	.word	38545
	.byte	12,2,35,48,14
	.byte	'MCS_AEM_DIS',0
	.word	38848
	.byte	4,2,35,60,14
	.byte	'AUX_IN_SRC',0
	.word	39410
	.byte	24,2,35,64,14
	.byte	'reserved_58',0
	.word	3092
	.byte	4,2,35,88,14
	.byte	'EXT_CAP_EN',0
	.word	39568
	.byte	24,2,35,92,14
	.byte	'reserved_74',0
	.word	5252
	.byte	12,2,35,116,14
	.byte	'OUT',0
	.word	39980
	.byte	48,3,35,128,1,14
	.byte	'CLS_CLK_CFG',0
	.word	40323
	.byte	4,3,35,176,1,14
	.byte	'reserved_B4',0
	.word	40363
	.byte	76,3,35,180,1,14
	.byte	'TBU',0
	.word	42046
	.byte	44,3,35,128,2,14
	.byte	'reserved_12C',0
	.word	42051
	.byte	84,3,35,172,2,14
	.byte	'MON',0
	.word	44509
	.byte	52,3,35,128,3,14
	.byte	'reserved_1B4',0
	.word	40363
	.byte	76,3,35,180,3,14
	.byte	'CMP',0
	.word	47849
	.byte	24,3,35,128,4,14
	.byte	'reserved_218',0
	.word	47854
	.byte	104,3,35,152,4,14
	.byte	'ARU',0
	.word	51658
	.byte	128,1,3,35,128,5,14
	.byte	'CMU',0
	.word	53496
	.byte	80,3,35,128,6,14
	.byte	'reserved_350',0
	.word	53501
	.byte	176,1,3,35,208,6,14
	.byte	'BRC',0
	.word	56184
	.byte	120,3,35,128,8,14
	.byte	'reserved_478',0
	.word	56189
	.byte	136,3,3,35,248,8,14
	.byte	'ICM',0
	.word	75064
	.byte	172,3,3,35,128,12,14
	.byte	'reserved_7AC',0
	.word	42051
	.byte	84,3,35,172,15,14
	.byte	'SPE',0
	.word	77889
	.byte	128,2,3,35,128,16,14
	.byte	'reserved_900',0
	.word	77894
	.byte	128,12,3,35,128,18,14
	.byte	'MAP_CTRL',0
	.word	78304
	.byte	4,3,35,128,30,14
	.byte	'reserved_F04',0
	.word	78344
	.byte	60,3,35,132,30,14
	.byte	'MCFG_CTRL',0
	.word	78602
	.byte	4,3,35,192,30,14
	.byte	'reserved_F44',0
	.word	78642
	.byte	188,1,3,35,196,30,14
	.byte	'TIM',0
	.word	83398
	.byte	128,96,3,35,128,32,14
	.byte	'reserved_4000',0
	.word	83403
	.byte	128,128,1,4,35,128,128,1,14
	.byte	'TOM',0
	.word	83425
	.byte	128,48,4,35,128,128,2,14
	.byte	'reserved_9800',0
	.word	83430
	.byte	128,208,3,4,35,128,176,2,14
	.byte	'PSM',0
	.word	87367
	.byte	128,128,1,4,35,128,128,6,14
	.byte	'reserved_1C000',0
	.word	87372
	.byte	128,128,3,4,35,128,128,7,14
	.byte	'DPLL',0
	.word	111420
	.byte	128,128,2,4,35,128,128,10,14
	.byte	'reserved_30000',0
	.word	111425
	.byte	128,250,27,4,35,128,128,12,14
	.byte	'CLC',0
	.word	111555
	.byte	4,4,35,128,250,39,14
	.byte	'RESET_CLR',0
	.word	111663
	.byte	4,4,35,132,250,39,14
	.byte	'RESET1',0
	.word	111787
	.byte	4,4,35,136,250,39,14
	.byte	'RESET2',0
	.word	111892
	.byte	4,4,35,140,250,39,14
	.byte	'ACCEN0',0
	.word	112461
	.byte	4,4,35,144,250,39,14
	.byte	'ACCEN1',0
	.word	112550
	.byte	4,4,35,148,250,39,14
	.byte	'OCDS',0
	.word	114298
	.byte	36,4,35,152,250,39,14
	.byte	'reserved_9FD3C',0
	.word	3092
	.byte	4,4,35,188,250,39,14
	.byte	'TIMINSEL',0
	.word	114517
	.byte	24,4,35,192,250,39,14
	.byte	'reserved_9FD58',0
	.word	4912
	.byte	8,4,35,216,250,39,14
	.byte	'TOUTSEL',0
	.word	114723
	.byte	76,4,35,224,250,39,14
	.byte	'reserved_9FDAC',0
	.word	42051
	.byte	84,4,35,172,251,39,14
	.byte	'DSADCINSEL',0
	.word	114948
	.byte	24,4,35,128,252,39,14
	.byte	'reserved_9FE18',0
	.word	4912
	.byte	8,4,35,152,252,39,14
	.byte	'DSADC',0
	.word	115219
	.byte	32,4,35,160,252,39,14
	.byte	'ADCTRIG',0
	.word	115647
	.byte	40,4,35,192,252,39,14
	.byte	'reserved_9FE68',0
	.word	4912
	.byte	8,4,35,232,252,39,14
	.byte	'DXOUTCON',0
	.word	115784
	.byte	4,4,35,240,252,39,14
	.byte	'TRIGOUT',0
	.word	116052
	.byte	20,4,35,244,252,39,14
	.byte	'reserved_9FE88',0
	.word	23624
	.byte	20,4,35,136,253,39,14
	.byte	'INTOUT',0
	.word	116167
	.byte	20,4,35,156,253,39,14
	.byte	'reserved_9FEB0',0
	.word	23624
	.byte	20,4,35,176,253,39,14
	.byte	'MCSTRIGOUTSEL',0
	.word	116367
	.byte	4,4,35,196,253,39,14
	.byte	'MCSINTSTAT',0
	.word	116546
	.byte	4,4,35,200,253,39,14
	.byte	'MCSINTCLR',0
	.word	116719
	.byte	4,4,35,204,253,39,14
	.byte	'DXINCON',0
	.word	116988
	.byte	4,4,35,208,253,39,14
	.byte	'DATAIN',0
	.word	117112
	.byte	20,4,35,212,253,39,14
	.byte	'reserved_9FEE8',0
	.word	4283
	.byte	24,4,35,232,253,39,14
	.byte	'MSC',0
	.word	119317
	.byte	168,1,4,35,128,254,39,14
	.byte	'reserved_9FFA8',0
	.word	119322
	.byte	36,4,35,168,255,39,14
	.byte	'PSI5OUTSEL',0
	.word	119482
	.byte	4,4,35,204,255,39,14
	.byte	'PSI5SOUTSEL',0
	.word	119683
	.byte	4,4,35,208,255,39,14
	.byte	'LCDCDCOUTSEL',0
	.word	119794
	.byte	4,4,35,212,255,39,14
	.byte	'DTMAUXINSEL',0
	.word	120049
	.byte	4,4,35,216,255,39,14
	.byte	'CANOUTSEL0',0
	.word	120249
	.byte	4,4,35,220,255,39,14
	.byte	'CANOUTSEL1',0
	.word	120408
	.byte	4,4,35,224,255,39,14
	.byte	'reserved_9FFE4',0
	.word	120448
	.byte	156,192,16,4,35,228,255,39,14
	.byte	'CCM',0
	.word	123894
	.byte	128,24,4,35,128,192,56,14
	.byte	'reserved_E2C00',0
	.word	123899
	.byte	128,40,4,35,128,216,56,14
	.byte	'CDTM',0
	.word	124006
	.byte	128,40,4,35,128,128,57,14
	.byte	'reserved_E5400',0
	.word	124011
	.byte	128,88,4,35,128,168,57,14
	.byte	'ATOM',0
	.word	124032
	.byte	128,96,4,35,128,128,58,14
	.byte	'reserved_EB000',0
	.word	124037
	.byte	128,160,1,4,35,128,224,58,14
	.byte	'MCS',0
	.word	128873
	.byte	128,160,1,4,35,128,128,60,14
	.byte	'reserved_F5000',0
	.word	128878
	.byte	128,224,2,4,35,128,160,61,0,10
	.word	128891
	.byte	3
	.word	130744
	.byte	33
	.byte	'IfxGtm_Dtm_getDtmPointer',0,17,198,1,30
	.word	23817
	.byte	1,1,1,1,5
	.byte	'gtm',0,17,198,1,64
	.word	130749
	.byte	5
	.byte	'cdtmIndex',0,17,198,1,81
	.word	24409
	.byte	5
	.byte	'dtmIndex',0,17,198,1,103
	.word	24702
	.byte	0,33
	.byte	'IfxGtm_Dtm_getClockFrequency',0,17,206,1,20
	.word	238
	.byte	1,1,1,1,5
	.byte	'gtm',0,17,206,1,58
	.word	130749
	.byte	5
	.byte	'cdtmIndex',0,17,206,1,75
	.word	24409
	.byte	5
	.byte	'dtmIndex',0,17,206,1,97
	.word	24702
	.byte	0,17,9,85,9,1,18
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,18
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,18
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,31,22,147,1,9,12,14
	.byte	'period',0
	.word	9855
	.byte	4,2,35,0,14
	.byte	'triggerEnabled',0
	.word	537
	.byte	1,2,35,4,14
	.byte	'clockFreq',0
	.word	238
	.byte	4,2,35,6,14
	.byte	'countDir',0
	.word	130936
	.byte	1,2,35,10,0,15,8
	.word	33169
	.byte	16,1,0,15,4
	.word	1088
	.byte	16,1,0,15,8
	.word	9855
	.byte	16,1,0,31,22,161,1,9,64,14
	.byte	'base',0
	.word	131038
	.byte	12,2,35,0,14
	.byte	'gtm',0
	.word	130749
	.byte	4,2,35,12,14
	.byte	'tom',0
	.word	31937
	.byte	4,2,35,16,14
	.byte	'tgc',0
	.word	131122
	.byte	8,2,35,20,14
	.byte	'tomIndex',0
	.word	33606
	.byte	1,2,35,28,14
	.byte	'timerChannel',0
	.word	31942
	.byte	1,2,35,29,14
	.byte	'triggerChannel',0
	.word	31942
	.byte	1,2,35,30,14
	.byte	'channelsMask',0
	.word	131131
	.byte	4,2,35,32,14
	.byte	'offset',0
	.word	9855
	.byte	4,2,35,36,14
	.byte	'tgcGlobalControlDisableUpdate',0
	.word	131140
	.byte	8,2,35,40,14
	.byte	'tgcGlobalControlApplyUpdate',0
	.word	131140
	.byte	8,2,35,48,14
	.byte	'dtm',0
	.word	23817
	.byte	4,2,35,56,14
	.byte	'dtmChannel',0
	.word	24040
	.byte	1,2,35,60,0
.L298:
	.byte	3
	.word	131149
	.byte	32
	.byte	'IfxGtm_Tom_Timer_addToChannelMask',0,22,138,2,17,1,1,1,1,5
	.byte	'driver',0,22,138,2,69
	.word	131420
	.byte	5
	.byte	'channel',0,22,138,2,91
	.word	31942
	.byte	0,33
	.byte	'IfxGtm_Tom_Timer_stdIfTimerInit',0,22,233,2,20
	.word	537
	.byte	1,1,1,1,5
	.byte	'stdif',0,22,233,2,68
	.word	10928
	.byte	5
	.byte	'driver',0,22,233,2,93
	.word	131420
	.byte	0
.L377:
	.byte	17,19,175,1,9,1,18
	.byte	'Ifx_Pwm_Mode_centerAligned',0,0,18
	.byte	'Ifx_Pwm_Mode_centerAlignedInverted',0,1,18
	.byte	'Ifx_Pwm_Mode_leftAligned',0,2,18
	.byte	'Ifx_Pwm_Mode_rightAligned',0,3,18
	.byte	'Ifx_Pwm_Mode_off',0,4,18
	.byte	'Ifx_Pwm_Mode_init',0,5,18
	.byte	'Ifx_Pwm_Mode_count',0,6,0,7
	.byte	'char',0,1,6,31,23,123,9,20,14
	.byte	'deadtime',0
	.word	9855
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	9855
	.byte	4,2,35,4,14
	.byte	'maxPulse',0
	.word	9855
	.byte	4,2,35,8,14
	.byte	'mode',0
	.word	131579
	.byte	1,2,35,12,14
	.byte	'setMode',0
	.word	131767
	.byte	1,2,35,13,14
	.byte	'ccxActiveState',0
	.word	25911
	.byte	1,2,35,14,14
	.byte	'coutxActiveState',0
	.word	25911
	.byte	1,2,35,15,14
	.byte	'inverted',0
	.word	537
	.byte	1,2,35,16,14
	.byte	'channelCount',0
	.word	537
	.byte	1,2,35,17,0,3
	.word	.L600-.L147
	.byte	3
	.word	9855
	.byte	22,1,1,21
	.word	131956
	.byte	21
	.word	131961
	.byte	0,3
	.word	131966
	.byte	19
	.byte	'IfxGtm_Tom_Dtm_PwmHl_Update',0,23,111,40
	.word	131980
	.byte	22,1,1,21
	.word	131956
	.byte	21
	.word	131961
	.byte	21
	.word	131961
	.byte	0,3
	.word	132021
	.byte	19
	.byte	'IfxGtm_Tom_Dtm_PwmHl_UpdateShift',0,23,113,40
	.word	132040
	.byte	3
	.word	238
	.byte	22,1,1,21
	.word	131956
	.byte	21
	.word	132086
	.byte	21
	.word	132086
	.byte	0,3
	.word	132091
	.byte	19
	.byte	'IfxGtm_Tom_Dtm_PwmHl_UpdatePulse',0,23,115,40
	.word	132110
	.byte	15,3
	.word	31942
	.byte	16,2,0,15,12
	.word	23817
	.byte	16,2,0,15,3
	.word	24040
	.byte	16,2,0
.L600:
	.byte	11
	.byte	'IfxGtm_Tom_Dtm_PwmHl_s',0,23,162,1,8,72,14
	.byte	'base',0
	.word	131775
	.byte	20,2,35,0,14
	.byte	'timer',0
	.word	131420
	.byte	4,2,35,20,14
	.byte	'update',0
	.word	131985
	.byte	4,2,35,24,14
	.byte	'updateAndShift',0
	.word	132045
	.byte	4,2,35,28,14
	.byte	'updatePulse',0
	.word	132115
	.byte	4,2,35,32,14
	.byte	'tom',0
	.word	31937
	.byte	4,2,35,36,14
	.byte	'tgc',0
	.word	33169
	.byte	4,2,35,40,14
	.byte	'ccx',0
	.word	132156
	.byte	3,2,35,44,14
	.byte	'coutx',0
	.word	132156
	.byte	3,2,35,47,14
	.byte	'dtm',0
	.word	132165
	.byte	12,2,35,52,14
	.byte	'dtmChannel',0
	.word	132174
	.byte	3,2,35,64,14
	.byte	'dtmClockFreq',0
	.word	238
	.byte	4,2,35,68,0
.L289:
	.byte	3
	.word	132183
	.byte	3
	.word	131966
	.byte	3
	.word	132021
	.byte	3
	.word	132091
	.byte	19
	.byte	'IfxGtm_Tom_ToutMapP',0,21,143,1,29
	.word	34250
	.byte	25
	.word	132432
	.byte	3
	.word	132461
	.byte	31,23,138,1,9,36,14
	.byte	'base',0
	.word	25962
	.byte	16,2,35,0,14
	.byte	'timer',0
	.word	131420
	.byte	4,2,35,16,14
	.byte	'tom',0
	.word	33606
	.byte	1,2,35,20,14
	.byte	'ccx',0
	.word	132466
	.byte	4,2,35,24,14
	.byte	'coutx',0
	.word	132466
	.byte	4,2,35,28,14
	.byte	'deadTimeClock',0
	.word	23822
	.byte	1,2,35,32,14
	.byte	'initPins',0
	.word	537
	.byte	1,2,35,33,0,25
	.word	132471
.L291:
	.byte	3
	.word	132589
	.byte	25
	.word	34148
	.byte	3
	.word	132599
.L301:
	.byte	17,24,64,9,1,18
	.byte	'IfxGtm_Cmu_Clk_0',0,0,18
	.byte	'IfxGtm_Cmu_Clk_1',0,1,18
	.byte	'IfxGtm_Cmu_Clk_2',0,2,18
	.byte	'IfxGtm_Cmu_Clk_3',0,3,18
	.byte	'IfxGtm_Cmu_Clk_4',0,4,18
	.byte	'IfxGtm_Cmu_Clk_5',0,5,18
	.byte	'IfxGtm_Cmu_Clk_6',0,6,18
	.byte	'IfxGtm_Cmu_Clk_7',0,7,0
.L364:
	.byte	15,12
	.word	9855
	.byte	16,2,0
.L367:
	.byte	3
	.word	132471
.L372:
	.byte	7
	.byte	'long long int',0,8,5
.L418:
	.byte	3
	.word	131775
.L422:
	.byte	3
	.word	9855
.L427:
	.byte	3
	.word	238
.L432:
	.byte	3
	.word	537
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetDeadtime',0,18,86,19
	.word	10016
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetDeadtime',0,18,94,19
	.word	9814
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetDeadtimeTick',0,18,102,19
	.word	9814
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMinPulse',0,18,109,19
	.word	10016
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMinPulse',0,18,117,19
	.word	9814
	.byte	20
	.word	131579
	.byte	1,1,21
	.word	444
	.byte	0,3
	.word	132997
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMode',0,18,125,24
	.word	133010
	.byte	20
	.word	537
	.byte	1,1,21
	.word	444
	.byte	21
	.word	131579
	.byte	0,3
	.word	133046
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMode',0,18,133,1,19
	.word	133064
	.byte	22,1,1,21
	.word	444
	.byte	21
	.word	131961
	.byte	0,3
	.word	133101
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTime',0,18,140,1,16
	.word	133115
	.byte	22,1,1,21
	.word	444
	.byte	21
	.word	131961
	.byte	21
	.word	131961
	.byte	0,3
	.word	133154
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTimeAndShift',0,18,148,1,16
	.word	133173
	.byte	22,1,1,21
	.word	444
	.byte	21
	.word	132086
	.byte	21
	.word	132086
	.byte	0,3
	.word	133220
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetPulse',0,18,156,1,16
	.word	133239
	.byte	3
	.word	537
	.byte	22,1,1,21
	.word	444
	.byte	21
	.word	133277
	.byte	21
	.word	133277
	.byte	0,3
	.word	133282
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetupChannels',0,18,175,1,16
	.word	133301
	.byte	11
	.byte	'IfxStdIf_PwmHl_',0,18,179,1,8,116,14
	.byte	'driver',0
	.word	9768
	.byte	4,2,35,0,14
	.byte	'setDeadtime',0
	.word	132818
	.byte	4,2,35,4,14
	.byte	'getDeadtime',0
	.word	132853
	.byte	4,2,35,8,14
	.byte	'getDeadtimeTick',0
	.word	132888
	.byte	4,2,35,12,14
	.byte	'setMinPulse',0
	.word	132927
	.byte	4,2,35,16,14
	.byte	'getMinPulse',0
	.word	132962
	.byte	4,2,35,20,14
	.byte	'getMode',0
	.word	133015
	.byte	4,2,35,24,14
	.byte	'setMode',0
	.word	133069
	.byte	4,2,35,28,14
	.byte	'setOnTime',0
	.word	133120
	.byte	4,2,35,32,14
	.byte	'setOnTimeAndShift',0
	.word	133178
	.byte	4,2,35,36,14
	.byte	'setPulse',0
	.word	133244
	.byte	4,2,35,40,14
	.byte	'setupChannels',0
	.word	133306
	.byte	4,2,35,44,14
	.byte	'timer',0
	.word	10549
	.byte	68,2,35,48,0
.L436:
	.byte	3
	.word	133344
	.byte	3
	.word	9998
	.byte	3
	.word	9801
	.byte	3
	.word	9801
	.byte	3
	.word	9998
	.byte	3
	.word	9801
	.byte	3
	.word	132997
	.byte	3
	.word	133046
	.byte	3
	.word	133101
	.byte	3
	.word	133154
	.byte	3
	.word	133220
	.byte	3
	.word	133282
	.byte	33
	.byte	'memset',0,25,56,17
	.word	444
	.byte	1,1,1,1,36,25,56,33
	.word	444
	.byte	36,25,56,36
	.word	530
	.byte	36,25,56,41
	.word	340
	.byte	0,37
	.byte	'__INDIRECT__',0,26,1,1,1,1,1,7
	.byte	'short int',0,2,5,19
	.byte	'__wchar_t',0,26,1,1
	.word	133752
	.byte	19
	.byte	'__size_t',0,26,1,1
	.word	340
	.byte	19
	.byte	'__ptrdiff_t',0,26,1,1
	.word	530
	.byte	38,1,3
	.word	133820
	.byte	19
	.byte	'__codeptr',0,26,1,1
	.word	133822
	.byte	19
	.byte	'size_t',0,27,24,25
	.word	340
	.byte	19
	.byte	'boolean',0,28,104,29
	.word	537
	.byte	19
	.byte	'uint8',0,28,108,29
	.word	537
	.byte	19
	.byte	'uint16',0,28,112,29
	.word	1088
	.byte	19
	.byte	'uint32',0,28,116,29
	.word	9855
	.byte	19
	.byte	'uint64',0,28,121,29
	.word	418
	.byte	19
	.byte	'sint8',0,28,125,29
	.word	131767
	.byte	19
	.byte	'sint16',0,28,129,1,29
	.word	133752
	.byte	7
	.byte	'long int',0,4,5,19
	.byte	'sint32',0,28,134,1,29
	.word	133965
	.byte	19
	.byte	'sint64',0,28,141,1,29
	.word	132781
	.byte	19
	.byte	'float32',0,28,170,1,29
	.word	238
	.byte	19
	.byte	'pvoid',0,19,54,28
	.word	444
	.byte	19
	.byte	'Ifx_TickTime',0,19,76,28
	.word	132781
	.byte	19
	.byte	'Ifx_Priority',0,19,100,16
	.word	1088
	.byte	19
	.byte	'Ifx_TimerValue',0,19,101,16
	.word	9855
	.byte	19
	.byte	'Ifx_ActiveState',0,19,117,3
	.word	25911
	.byte	17,19,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,19
	.byte	'Ifx_RxSel',0,19,137,1,3
	.word	134129
	.byte	19
	.byte	'Ifx_Pwm_Mode',0,19,184,1,3
	.word	131579
	.byte	17,29,66,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,18
	.byte	'IfxSrc_Tos_cpu1',0,2,18
	.byte	'IfxSrc_Tos_cpu2',0,3,0,19
	.byte	'IfxSrc_Tos',0,29,72,3
	.word	134288
	.byte	19
	.byte	'Ifx_UReg_8Bit',0,30,96,24
	.word	537
	.byte	19
	.byte	'Ifx_UReg_32Bit',0,30,98,24
	.word	340
	.byte	19
	.byte	'Ifx_SReg_32Bit',0,30,101,24
	.word	530
	.byte	19
	.byte	'Ifx_SRC_SRCR_Bits',0,4,85,3
	.word	554
	.byte	19
	.byte	'Ifx_SRC_SRCR',0,4,98,3
	.word	844
	.byte	11
	.byte	'_Ifx_SRC_CPU_CPU',0,4,110,25,4,14
	.byte	'SB',0
	.word	844
	.byte	4,2,35,0,0,10
	.word	134499
	.byte	19
	.byte	'Ifx_SRC_CPU_CPU',0,4,113,3
	.word	134534
	.byte	15,12
	.word	134499
	.byte	16,2,0,10
	.word	134563
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,4,128,1,25,12,14
	.byte	'CPU',0
	.word	134572
	.byte	12,2,35,0,0,10
	.word	134577
	.byte	19
	.byte	'Ifx_SRC_CPU',0,4,131,1,3
	.word	134610
	.byte	15,8
	.word	844
	.byte	16,1,0,11
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,4,146,1,25,8,14
	.byte	'SR',0
	.word	134636
	.byte	8,2,35,0,0,10
	.word	134645
	.byte	19
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,4,149,1,3
	.word	134691
	.byte	10
	.word	134645
	.byte	11
	.byte	'_Ifx_SRC_CERBERUS',0,4,164,1,25,8,14
	.byte	'CERBERUS',0
	.word	134731
	.byte	8,2,35,0,0,10
	.word	134736
	.byte	19
	.byte	'Ifx_SRC_CERBERUS',0,4,167,1,3
	.word	134779
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,4,182,1,25,12,14
	.byte	'TX',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	844
	.byte	4,2,35,8,0,10
	.word	134810
	.byte	19
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,4,187,1,3
	.word	134877
	.byte	15,144,1
	.word	134810
	.byte	16,11,0,10
	.word	134913
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,4,202,1,25,144,1,14
	.byte	'ASCLIN',0
	.word	134923
	.byte	144,1,2,35,0,0,10
	.word	134928
	.byte	19
	.byte	'Ifx_SRC_ASCLIN',0,4,205,1,3
	.word	134969
	.byte	11
	.byte	'_Ifx_SRC_QSPI_QSPI',0,4,220,1,25,20,14
	.byte	'TX',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'PT',0
	.word	844
	.byte	4,2,35,12,14
	.byte	'U',0
	.word	844
	.byte	4,2,35,16,0,10
	.word	134998
	.byte	19
	.byte	'Ifx_SRC_QSPI_QSPI',0,4,227,1,3
	.word	135084
	.byte	15,100
	.word	134998
	.byte	16,4,0,10
	.word	135116
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,4,242,1,25,100,14
	.byte	'QSPI',0
	.word	135125
	.byte	100,2,35,0,0,10
	.word	135130
	.byte	19
	.byte	'Ifx_SRC_QSPI',0,4,245,1,3
	.word	135165
	.byte	11
	.byte	'_Ifx_SRC_HSCT_HSCT',0,4,132,2,25,4,14
	.byte	'SR',0
	.word	844
	.byte	4,2,35,0,0,10
	.word	135192
	.byte	19
	.byte	'Ifx_SRC_HSCT_HSCT',0,4,135,2,3
	.word	135230
	.byte	15,4
	.word	135192
	.byte	16,0,0,10
	.word	135262
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,4,150,2,25,4,14
	.byte	'HSCT',0
	.word	135271
	.byte	4,2,35,0,0,10
	.word	135276
	.byte	19
	.byte	'Ifx_SRC_HSCT',0,4,153,2,3
	.word	135311
	.byte	11
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,4,168,2,25,16,14
	.byte	'COK',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'RDI',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'TRG',0
	.word	844
	.byte	4,2,35,12,0,10
	.word	135338
	.byte	19
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,4,174,2,3
	.word	135419
	.byte	15,64
	.word	135338
	.byte	16,3,0,10
	.word	135454
	.byte	11
	.byte	'_Ifx_SRC_HSSL_HSSL',0,4,189,2,25,68,14
	.byte	'CH',0
	.word	135463
	.byte	64,2,35,0,14
	.byte	'EXI',0
	.word	844
	.byte	4,2,35,64,0,10
	.word	135468
	.byte	19
	.byte	'Ifx_SRC_HSSL_HSSL',0,4,193,2,3
	.word	135519
	.byte	15,68
	.word	135468
	.byte	16,0,0,10
	.word	135551
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,4,208,2,25,68,14
	.byte	'HSSL',0
	.word	135560
	.byte	68,2,35,0,0,10
	.word	135565
	.byte	19
	.byte	'Ifx_SRC_HSSL',0,4,211,2,3
	.word	135600
	.byte	11
	.byte	'_Ifx_SRC_I2C_I2C',0,4,226,2,25,16,14
	.byte	'DTR',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'ERR',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'P',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	3092
	.byte	4,2,35,12,0,10
	.word	135627
	.byte	19
	.byte	'Ifx_SRC_I2C_I2C',0,4,232,2,3
	.word	135708
	.byte	15,16
	.word	135627
	.byte	16,0,0,10
	.word	135738
	.byte	11
	.byte	'_Ifx_SRC_I2C',0,4,247,2,25,16,14
	.byte	'I2C',0
	.word	135747
	.byte	16,2,35,0,0,10
	.word	135752
	.byte	19
	.byte	'Ifx_SRC_I2C',0,4,250,2,3
	.word	135785
	.byte	11
	.byte	'_Ifx_SRC_SENT_SENT',0,4,137,3,25,4,14
	.byte	'SR',0
	.word	844
	.byte	4,2,35,0,0,10
	.word	135811
	.byte	19
	.byte	'Ifx_SRC_SENT_SENT',0,4,140,3,3
	.word	135849
	.byte	15,40
	.word	135811
	.byte	16,9,0,10
	.word	135881
	.byte	11
	.byte	'_Ifx_SRC_SENT',0,4,155,3,25,40,14
	.byte	'SENT',0
	.word	135890
	.byte	40,2,35,0,0,10
	.word	135895
	.byte	19
	.byte	'Ifx_SRC_SENT',0,4,158,3,3
	.word	135930
	.byte	15,20
	.word	844
	.byte	16,4,0,11
	.byte	'_Ifx_SRC_MSC_MSC',0,4,173,3,25,20,14
	.byte	'SR',0
	.word	135957
	.byte	20,2,35,0,0,10
	.word	135966
	.byte	19
	.byte	'Ifx_SRC_MSC_MSC',0,4,176,3,3
	.word	136002
	.byte	15,40
	.word	135966
	.byte	16,1,0,10
	.word	136032
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,4,191,3,25,40,14
	.byte	'MSC',0
	.word	136041
	.byte	40,2,35,0,0,10
	.word	136046
	.byte	19
	.byte	'Ifx_SRC_MSC',0,4,194,3,3
	.word	136079
	.byte	15,16
	.word	844
	.byte	16,3,0,11
	.byte	'_Ifx_SRC_CCU6_CCU',0,4,209,3,25,16,14
	.byte	'SR',0
	.word	136105
	.byte	16,2,35,0,0,10
	.word	136114
	.byte	19
	.byte	'Ifx_SRC_CCU6_CCU',0,4,212,3,3
	.word	136151
	.byte	15,32
	.word	136114
	.byte	16,1,0,10
	.word	136182
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,4,227,3,25,32,14
	.byte	'CCU',0
	.word	136191
	.byte	32,2,35,0,0,10
	.word	136196
	.byte	19
	.byte	'Ifx_SRC_CCU6',0,4,230,3,3
	.word	136230
	.byte	11
	.byte	'_Ifx_SRC_GPT12_GPT12',0,4,245,3,25,24,14
	.byte	'CIRQ',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'T2',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'T3',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'T4',0
	.word	844
	.byte	4,2,35,12,14
	.byte	'T5',0
	.word	844
	.byte	4,2,35,16,14
	.byte	'T6',0
	.word	844
	.byte	4,2,35,20,0,10
	.word	136257
	.byte	19
	.byte	'Ifx_SRC_GPT12_GPT12',0,4,253,3,3
	.word	136359
	.byte	15,24
	.word	136257
	.byte	16,0,0,10
	.word	136393
	.byte	11
	.byte	'_Ifx_SRC_GPT12',0,4,140,4,25,24,14
	.byte	'GPT12',0
	.word	136402
	.byte	24,2,35,0,0,10
	.word	136407
	.byte	19
	.byte	'Ifx_SRC_GPT12',0,4,143,4,3
	.word	136444
	.byte	11
	.byte	'_Ifx_SRC_STM_STM',0,4,158,4,25,8,14
	.byte	'SR',0
	.word	134636
	.byte	8,2,35,0,0,10
	.word	136472
	.byte	19
	.byte	'Ifx_SRC_STM_STM',0,4,161,4,3
	.word	136508
	.byte	15,24
	.word	136472
	.byte	16,2,0,10
	.word	136538
	.byte	11
	.byte	'_Ifx_SRC_STM',0,4,176,4,25,24,14
	.byte	'STM',0
	.word	136547
	.byte	24,2,35,0,0,10
	.word	136552
	.byte	19
	.byte	'Ifx_SRC_STM',0,4,179,4,3
	.word	136585
	.byte	11
	.byte	'_Ifx_SRC_FCE_FCE0',0,4,194,4,25,4,14
	.byte	'SR',0
	.word	844
	.byte	4,2,35,0,0,10
	.word	136611
	.byte	19
	.byte	'Ifx_SRC_FCE_FCE0',0,4,197,4,3
	.word	136648
	.byte	10
	.word	136611
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,4,212,4,25,4,14
	.byte	'FCE0',0
	.word	136679
	.byte	4,2,35,0,0,10
	.word	136684
	.byte	19
	.byte	'Ifx_SRC_FCE',0,4,215,4,3
	.word	136718
	.byte	15,128,4
	.word	844
	.byte	16,127,0,11
	.byte	'_Ifx_SRC_DMA_DMA',0,4,230,4,25,176,4,14
	.byte	'ERR',0
	.word	136105
	.byte	16,2,35,0,14
	.byte	'reserved_10',0
	.word	18905
	.byte	32,2,35,16,14
	.byte	'CH',0
	.word	136744
	.byte	128,4,2,35,48,0,10
	.word	136754
	.byte	19
	.byte	'Ifx_SRC_DMA_DMA',0,4,235,4,3
	.word	136826
	.byte	15,176,4
	.word	136754
	.byte	16,0,0,10
	.word	136856
	.byte	11
	.byte	'_Ifx_SRC_DMA',0,4,250,4,25,176,4,14
	.byte	'DMA',0
	.word	136866
	.byte	176,4,2,35,0,0,10
	.word	136871
	.byte	19
	.byte	'Ifx_SRC_DMA',0,4,253,4,3
	.word	136906
	.byte	15,40
	.word	844
	.byte	16,9,0,11
	.byte	'_Ifx_SRC_GETH_GETH',0,4,140,5,25,40,14
	.byte	'SR',0
	.word	136932
	.byte	40,2,35,0,0,10
	.word	136941
	.byte	19
	.byte	'Ifx_SRC_GETH_GETH',0,4,143,5,3
	.word	136979
	.byte	15,40
	.word	136941
	.byte	16,0,0,10
	.word	137011
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,4,158,5,25,40,14
	.byte	'GETH',0
	.word	137020
	.byte	40,2,35,0,0,10
	.word	137025
	.byte	19
	.byte	'Ifx_SRC_GETH',0,4,161,5,3
	.word	137060
	.byte	15,64
	.word	844
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_CAN_CAN',0,4,176,5,25,64,14
	.byte	'INT',0
	.word	137087
	.byte	64,2,35,0,0,10
	.word	137096
	.byte	19
	.byte	'Ifx_SRC_CAN_CAN',0,4,179,5,3
	.word	137133
	.byte	15,128,1
	.word	137096
	.byte	16,1,0,10
	.word	137163
	.byte	11
	.byte	'_Ifx_SRC_CAN',0,4,194,5,25,128,1,14
	.byte	'CAN',0
	.word	137173
	.byte	128,1,2,35,0,0,10
	.word	137178
	.byte	19
	.byte	'Ifx_SRC_CAN',0,4,197,5,3
	.word	137213
	.byte	11
	.byte	'_Ifx_SRC_VADC_G',0,4,212,5,25,16,14
	.byte	'SR0',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	844
	.byte	4,2,35,12,0,10
	.word	137239
	.byte	19
	.byte	'Ifx_SRC_VADC_G',0,4,218,5,3
	.word	137314
	.byte	11
	.byte	'_Ifx_SRC_VADC_FC',0,4,237,5,25,4,14
	.byte	'SR0',0
	.word	844
	.byte	4,2,35,0,0,10
	.word	137343
	.byte	19
	.byte	'Ifx_SRC_VADC_FC',0,4,240,5,3
	.word	137380
	.byte	15,64
	.word	137239
	.byte	16,3,0,10
	.word	137410
	.byte	10
	.word	137239
	.byte	10
	.word	137239
	.byte	10
	.word	137239
	.byte	10
	.word	137239
	.byte	15,16
	.word	137343
	.byte	16,3,0,10
	.word	137444
	.byte	15,32
	.word	137239
	.byte	16,1,0,10
	.word	137458
	.byte	11
	.byte	'_Ifx_SRC_VADC',0,4,128,6,25,128,2,14
	.byte	'G',0
	.word	137419
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	82978
	.byte	64,2,35,64,14
	.byte	'G8',0
	.word	137424
	.byte	16,3,35,128,1,14
	.byte	'G9',0
	.word	137429
	.byte	16,3,35,144,1,14
	.byte	'G10',0
	.word	137434
	.byte	16,3,35,160,1,14
	.byte	'G11',0
	.word	137439
	.byte	16,3,35,176,1,14
	.byte	'FC',0
	.word	137453
	.byte	16,3,35,192,1,14
	.byte	'reserved_D0',0
	.word	16436
	.byte	16,3,35,208,1,14
	.byte	'CG',0
	.word	137467
	.byte	32,3,35,224,1,0,10
	.word	137472
	.byte	19
	.byte	'Ifx_SRC_VADC',0,4,139,6,3
	.word	137628
	.byte	11
	.byte	'_Ifx_SRC_DSADC_DSADC',0,4,154,6,25,8,14
	.byte	'SRM',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'SRA',0
	.word	844
	.byte	4,2,35,4,0,10
	.word	137655
	.byte	19
	.byte	'Ifx_SRC_DSADC_DSADC',0,4,158,6,3
	.word	137709
	.byte	15,48
	.word	137655
	.byte	16,5,0,10
	.word	137743
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,4,173,6,25,48,14
	.byte	'DSADC',0
	.word	137752
	.byte	48,2,35,0,0,10
	.word	137757
	.byte	19
	.byte	'Ifx_SRC_DSADC',0,4,176,6,3
	.word	137794
	.byte	11
	.byte	'_Ifx_SRC_ERAY_ERAY',0,4,191,6,25,48,14
	.byte	'INT0',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'INT1',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'TINT0',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'TINT1',0
	.word	844
	.byte	4,2,35,12,14
	.byte	'NDAT0',0
	.word	844
	.byte	4,2,35,16,14
	.byte	'NDAT1',0
	.word	844
	.byte	4,2,35,20,14
	.byte	'MBSC0',0
	.word	844
	.byte	4,2,35,24,14
	.byte	'MBSC1',0
	.word	844
	.byte	4,2,35,28,14
	.byte	'OBUSY',0
	.word	844
	.byte	4,2,35,32,14
	.byte	'IBUSY',0
	.word	844
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	4912
	.byte	8,2,35,40,0,10
	.word	137822
	.byte	19
	.byte	'Ifx_SRC_ERAY_ERAY',0,4,204,6,3
	.word	138017
	.byte	15,48
	.word	137822
	.byte	16,0,0,10
	.word	138049
	.byte	11
	.byte	'_Ifx_SRC_ERAY',0,4,219,6,25,48,14
	.byte	'ERAY',0
	.word	138058
	.byte	48,2,35,0,0,10
	.word	138063
	.byte	19
	.byte	'Ifx_SRC_ERAY',0,4,222,6,3
	.word	138098
	.byte	11
	.byte	'_Ifx_SRC_HSM_HSM',0,4,237,6,25,8,14
	.byte	'HSM',0
	.word	134636
	.byte	8,2,35,0,0,10
	.word	138125
	.byte	19
	.byte	'Ifx_SRC_HSM_HSM',0,4,240,6,3
	.word	138162
	.byte	15,8
	.word	138125
	.byte	16,0,0,10
	.word	138192
	.byte	11
	.byte	'_Ifx_SRC_HSM',0,4,255,6,25,8,14
	.byte	'HSM',0
	.word	138201
	.byte	8,2,35,0,0,10
	.word	138206
	.byte	19
	.byte	'Ifx_SRC_HSM',0,4,130,7,3
	.word	138239
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,4,145,7,25,16,14
	.byte	'SCUERU',0
	.word	136105
	.byte	16,2,35,0,0,10
	.word	138265
	.byte	19
	.byte	'Ifx_SRC_SCU',0,4,148,7,3
	.word	138301
	.byte	11
	.byte	'_Ifx_SRC_PMS_PMS',0,4,163,7,25,4,14
	.byte	'SR',0
	.word	844
	.byte	4,2,35,0,0,10
	.word	138327
	.byte	19
	.byte	'Ifx_SRC_PMS_PMS',0,4,166,7,3
	.word	138363
	.byte	15,16
	.word	138327
	.byte	16,3,0,10
	.word	138393
	.byte	11
	.byte	'_Ifx_SRC_PMS',0,4,181,7,25,16,14
	.byte	'PMS',0
	.word	138402
	.byte	16,2,35,0,0,10
	.word	138407
	.byte	19
	.byte	'Ifx_SRC_PMS',0,4,184,7,3
	.word	138440
	.byte	15,12
	.word	844
	.byte	16,2,0,11
	.byte	'_Ifx_SRC_SMU_SMU',0,4,199,7,25,12,14
	.byte	'SR',0
	.word	138466
	.byte	12,2,35,0,0,10
	.word	138475
	.byte	19
	.byte	'Ifx_SRC_SMU_SMU',0,4,202,7,3
	.word	138511
	.byte	15,12
	.word	138475
	.byte	16,0,0,10
	.word	138541
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,4,217,7,25,12,14
	.byte	'SMU',0
	.word	138550
	.byte	12,2,35,0,0,10
	.word	138555
	.byte	19
	.byte	'Ifx_SRC_SMU',0,4,220,7,3
	.word	138588
	.byte	15,32
	.word	844
	.byte	16,7,0,11
	.byte	'_Ifx_SRC_PSI5_PSI5',0,4,235,7,25,32,14
	.byte	'SR',0
	.word	138614
	.byte	32,2,35,0,0,10
	.word	138623
	.byte	19
	.byte	'Ifx_SRC_PSI5_PSI5',0,4,238,7,3
	.word	138661
	.byte	15,32
	.word	138623
	.byte	16,0,0,10
	.word	138693
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,4,253,7,25,32,14
	.byte	'PSI5',0
	.word	138702
	.byte	32,2,35,0,0,10
	.word	138707
	.byte	19
	.byte	'Ifx_SRC_PSI5',0,4,128,8,3
	.word	138742
	.byte	11
	.byte	'_Ifx_SRC_DAM_DAM',0,4,143,8,25,24,14
	.byte	'LI0',0
	.word	844
	.byte	4,2,35,0,14
	.byte	'RI0',0
	.word	844
	.byte	4,2,35,4,14
	.byte	'LI1',0
	.word	844
	.byte	4,2,35,8,14
	.byte	'RI1',0
	.word	844
	.byte	4,2,35,12,14
	.byte	'DR',0
	.word	844
	.byte	4,2,35,16,14
	.byte	'ERR',0
	.word	844
	.byte	4,2,35,20,0,10
	.word	138769
	.byte	19
	.byte	'Ifx_SRC_DAM_DAM',0,4,151,8,3
	.word	138870
	.byte	15,24
	.word	138769
	.byte	16,0,0,10
	.word	138900
	.byte	11
	.byte	'_Ifx_SRC_DAM',0,4,166,8,25,24,14
	.byte	'DAM',0
	.word	138909
	.byte	24,2,35,0,0,10
	.word	138914
	.byte	19
	.byte	'Ifx_SRC_DAM',0,4,169,8,3
	.word	138947
	.byte	11
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,4,184,8,25,32,14
	.byte	'SR',0
	.word	138614
	.byte	32,2,35,0,0,10
	.word	138973
	.byte	19
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,4,187,8,3
	.word	139013
	.byte	15,32
	.word	138973
	.byte	16,0,0,10
	.word	139047
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,4,202,8,25,32,14
	.byte	'PSI5S',0
	.word	139056
	.byte	32,2,35,0,0,10
	.word	139061
	.byte	19
	.byte	'Ifx_SRC_PSI5S',0,4,205,8,3
	.word	139098
	.byte	11
	.byte	'_Ifx_SRC_GPSR_GPSR',0,4,220,8,25,32,14
	.byte	'SR',0
	.word	138614
	.byte	32,2,35,0,0,10
	.word	139126
	.byte	19
	.byte	'Ifx_SRC_GPSR_GPSR',0,4,223,8,3
	.word	139164
	.byte	15,96
	.word	139126
	.byte	16,2,0,10
	.word	139196
	.byte	11
	.byte	'_Ifx_SRC_GPSR',0,4,238,8,25,96,14
	.byte	'GPSR',0
	.word	139205
	.byte	96,2,35,0,0,10
	.word	139210
	.byte	19
	.byte	'Ifx_SRC_GPSR',0,4,241,8,3
	.word	139245
	.byte	19
	.byte	'Ifx_P_ACCEN0_Bits',0,8,102,3
	.word	8440
	.byte	19
	.byte	'Ifx_P_ACCEN1_Bits',0,8,108,3
	.word	8353
	.byte	19
	.byte	'Ifx_P_ESR_Bits',0,8,130,1,3
	.word	4921
	.byte	19
	.byte	'Ifx_P_ID_Bits',0,8,138,1,3
	.word	2972
	.byte	19
	.byte	'Ifx_P_IN_Bits',0,8,160,1,3
	.word	3968
	.byte	19
	.byte	'Ifx_P_IOCR0_Bits',0,8,173,1,3
	.word	3101
	.byte	19
	.byte	'Ifx_P_IOCR12_Bits',0,8,186,1,3
	.word	3748
	.byte	19
	.byte	'Ifx_P_IOCR4_Bits',0,8,199,1,3
	.word	3316
	.byte	19
	.byte	'Ifx_P_IOCR8_Bits',0,8,212,1,3
	.word	3531
	.byte	19
	.byte	'Ifx_P_LPCR_Bits',0,8,231,1,3
	.word	8015
	.byte	19
	.byte	'Ifx_P_OMCR_Bits',0,8,253,1,3
	.word	7667
	.byte	19
	.byte	'Ifx_P_OMCR0_Bits',0,8,136,2,3
	.word	6654
	.byte	19
	.byte	'Ifx_P_OMCR12_Bits',0,8,146,2,3
	.word	7178
	.byte	19
	.byte	'Ifx_P_OMCR4_Bits',0,8,157,2,3
	.word	6828
	.byte	19
	.byte	'Ifx_P_OMCR8_Bits',0,8,168,2,3
	.word	7002
	.byte	19
	.byte	'Ifx_P_OMR_Bits',0,8,205,2,3
	.word	2401
	.byte	19
	.byte	'Ifx_P_OMSR_Bits',0,8,227,2,3
	.word	7334
	.byte	19
	.byte	'Ifx_P_OMSR0_Bits',0,8,237,2,3
	.word	5991
	.byte	19
	.byte	'Ifx_P_OMSR12_Bits',0,8,248,2,3
	.word	6479
	.byte	19
	.byte	'Ifx_P_OMSR4_Bits',0,8,131,3,3
	.word	6138
	.byte	19
	.byte	'Ifx_P_OMSR8_Bits',0,8,142,3,3
	.word	6307
	.byte	19
	.byte	'Ifx_P_OUT_Bits',0,8,164,3,3
	.word	2085
	.byte	19
	.byte	'Ifx_P_PCSR_Bits',0,8,187,3,3
	.word	5627
	.byte	19
	.byte	'Ifx_P_PDISC_Bits',0,8,209,3,3
	.word	5261
	.byte	19
	.byte	'Ifx_P_PDR0_Bits',0,8,230,3,3
	.word	4292
	.byte	19
	.byte	'Ifx_P_PDR1_Bits',0,8,251,3,3
	.word	4596
	.byte	19
	.byte	'Ifx_P_ACCEN0',0,8,136,4,3
	.word	8967
	.byte	19
	.byte	'Ifx_P_ACCEN1',0,8,144,4,3
	.word	8400
	.byte	19
	.byte	'Ifx_P_ESR',0,8,152,4,3
	.word	5212
	.byte	19
	.byte	'Ifx_P_ID',0,8,160,4,3
	.word	3052
	.byte	19
	.byte	'Ifx_P_IN',0,8,168,4,3
	.word	4243
	.byte	19
	.byte	'Ifx_P_IOCR0',0,8,176,4,3
	.word	3276
	.byte	19
	.byte	'Ifx_P_IOCR12',0,8,184,4,3
	.word	3928
	.byte	19
	.byte	'Ifx_P_IOCR4',0,8,192,4,3
	.word	3491
	.byte	19
	.byte	'Ifx_P_IOCR8',0,8,200,4,3
	.word	3708
	.byte	19
	.byte	'Ifx_P_LPCR',0,8,208,4,3
	.word	8295
	.byte	19
	.byte	'Ifx_P_OMCR',0,8,216,4,3
	.word	7975
	.byte	19
	.byte	'Ifx_P_OMCR0',0,8,224,4,3
	.word	6788
	.byte	19
	.byte	'Ifx_P_OMCR12',0,8,232,4,3
	.word	7294
	.byte	19
	.byte	'Ifx_P_OMCR4',0,8,240,4,3
	.word	6962
	.byte	19
	.byte	'Ifx_P_OMCR8',0,8,248,4,3
	.word	7138
	.byte	19
	.byte	'Ifx_P_OMR',0,8,128,5,3
	.word	2932
	.byte	19
	.byte	'Ifx_P_OMSR',0,8,136,5,3
	.word	7627
	.byte	19
	.byte	'Ifx_P_OMSR0',0,8,144,5,3
	.word	6098
	.byte	19
	.byte	'Ifx_P_OMSR12',0,8,152,5,3
	.word	6614
	.byte	19
	.byte	'Ifx_P_OMSR4',0,8,160,5,3
	.word	6267
	.byte	19
	.byte	'Ifx_P_OMSR8',0,8,168,5,3
	.word	6439
	.byte	19
	.byte	'Ifx_P_OUT',0,8,176,5,3
	.word	2361
	.byte	19
	.byte	'Ifx_P_PCSR',0,8,184,5,3
	.word	5951
	.byte	19
	.byte	'Ifx_P_PDISC',0,8,192,5,3
	.word	5587
	.byte	19
	.byte	'Ifx_P_PDR0',0,8,200,5,3
	.word	4556
	.byte	19
	.byte	'Ifx_P_PDR1',0,8,208,5,3
	.word	4872
	.byte	10
	.word	9007
	.byte	19
	.byte	'Ifx_P',0,8,128,6,3
	.word	140466
	.byte	17,31,254,9,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,19
	.byte	'IfxScu_WDTCON1_IR',0,31,131,10,3
	.word	140486
	.byte	11
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,6,68,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_ACCEN00_Bits',0,6,102,3
	.word	140608
	.byte	11
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,6,105,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN01_Bits',0,6,108,3
	.word	141167
	.byte	11
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,6,111,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_ACCEN10_Bits',0,6,145,1,3
	.word	141246
	.byte	11
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,6,148,1,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN11_Bits',0,6,151,1,3
	.word	141806
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,154,1,16,4,12
	.byte	'STM0DIS',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	340
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,164,1,3
	.word	141887
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,167,1,16,4,12
	.byte	'STMDIV',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	537
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'BBBDIV',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'FSI2DIV',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,181,1,3
	.word	142113
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,184,1,16,4,12
	.byte	'MCANDIV',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'CLKSELMCAN',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PLL1DIVDIS',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'I2CDIV',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'MSCDIV',0,1
	.word	537
	.byte	4,4,2,35,2,12
	.byte	'CLKSELMSC',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'QSPIDIV',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'CLKSELQSPI',0,1
	.word	537
	.byte	2,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,199,1,3
	.word	142386
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,202,1,16,4,12
	.byte	'ASCLINFDIV',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'ASCLINSDIV',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'CLKSELASCLINS',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,4
	.word	340
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'ERAYPERON',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	537
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,214,1,3
	.word	142712
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,217,1,16,4,12
	.byte	'PLL0MONEN',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PLL1MONEN',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PLL2MONEN',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'SPBMONEN',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'BACKMONEN',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	3,0,2,35,0,12
	.byte	'PLL0MONTST',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'PLL1MONTST',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'PLL2MONTST',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'SPBMONTST',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'BACKMONTST',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,4
	.word	340
	.byte	11,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	6,2,2,35,3,12
	.byte	'UP',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,234,1,3
	.word	142990
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,237,1,16,4,12
	.byte	'LOTHR',0,2
	.word	1088
	.byte	12,4,2,35,0,12
	.byte	'UPTHR',0,4
	.word	340
	.byte	12,8,2,35,0,12
	.byte	'MONEN',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'MONTST',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	4,2,2,35,3,12
	.byte	'UP',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,246,1,3
	.word	143359
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,249,1,16,4,12
	.byte	'GETHDIV',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'MCANHDIV',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	340
	.byte	18,2,2,35,0,12
	.byte	'UP',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,129,2,3
	.word	143539
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,132,2,16,4,12
	.byte	'CPU0DIV',0,1
	.word	537
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	340
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,136,2,3
	.word	143711
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,139,2,16,4,12
	.byte	'CPU1DIV',0,1
	.word	537
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	340
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,143,2,3
	.word	143811
	.byte	11
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,146,2,16,4,12
	.byte	'CPU2DIV',0,1
	.word	537
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	340
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,150,2,3
	.word	143911
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,153,2,16,4,12
	.byte	'CHREV',0,1
	.word	537
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'CHPK',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'CHID',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'EEA',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	537
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'VART',0,1
	.word	537
	.byte	3,1,2,35,3,12
	.byte	'SEC',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,164,2,3
	.word	144011
	.byte	11
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,6,167,2,16,4,12
	.byte	'LOWER',0,2
	.word	1088
	.byte	12,4,2,35,0,12
	.byte	'reserved_12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'BGPOK',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'LLU',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	1088
	.byte	12,4,2,35,2,12
	.byte	'INTEN',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'INT',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,6,179,2,3
	.word	144214
	.byte	11
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,6,182,2,16,4,12
	.byte	'RESULT',0,2
	.word	1088
	.byte	12,4,2,35,0,12
	.byte	'reserved_12',0,4
	.word	340
	.byte	20,0,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,6,186,2,3
	.word	144446
	.byte	11
	.byte	'_Ifx_SCU_EICON0_Bits',0,6,189,2,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ENDINIT',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EPW',0,4
	.word	936
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_EICON0_Bits',0,6,195,2,3
	.word	144548
	.byte	11
	.byte	'_Ifx_SCU_EICON1_Bits',0,6,198,2,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	340
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_EICON1_Bits',0,6,207,2,3
	.word	144676
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,6,210,2,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	537
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	537
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	340
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	537
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	537
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EICR_Bits',0,6,229,2,3
	.word	144865
	.byte	11
	.byte	'_Ifx_SCU_EIFILT_Bits',0,6,232,2,16,4,12
	.byte	'FILRQ0A',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'FILRQ5A',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'FILRQ2A',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'FILRQ3A',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'FILRQ0C',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'FILRQ1C',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'FILRQ3C',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'FILRQ2C',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'FILRQ4A',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'FILRQ6A',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'FILRQ1A',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'FILRQ7A',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'FILRQ6D',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'FILRQ4D',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'FILRQ2B',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'FILRQ3B',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'FILRQ7C',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	537
	.byte	7,0,2,35,2,12
	.byte	'FILTDIV',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'DEPTH',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_EIFILT_Bits',0,6,254,2,3
	.word	145229
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,129,3,16,4,12
	.byte	'INTF0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	340
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR_Bits',0,6,140,3,3
	.word	145668
	.byte	11
	.byte	'_Ifx_SCU_EISR_Bits',0,6,143,3,16,4,12
	.byte	'AE',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	10,0,2,35,0,12
	.byte	'TIM',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_EISR_Bits',0,6,153,3,3
	.word	145879
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,156,3,16,4,12
	.byte	'POL',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	1088
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	1088
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_EMSR_Bits',0,6,166,3,3
	.word	146055
	.byte	11
	.byte	'_Ifx_SCU_EMSSW_Bits',0,6,169,3,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	24,8,2,35,0,12
	.byte	'EMSFM',0,1
	.word	537
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	537
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_EMSSW_Bits',0,6,175,3,3
	.word	146249
	.byte	11
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,6,178,3,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	1088
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	340
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,6,183,3,3
	.word	146384
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,186,3,16,4,12
	.byte	'ARI',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,191,3,3
	.word	146520
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,194,3,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	537
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	537
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	537
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	537
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,205,3,3
	.word	146631
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,6,208,3,16,4,12
	.byte	'STEP',0,2
	.word	1088
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	537
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	1088
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_FDR_Bits',0,6,216,3,3
	.word	146849
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,6,219,3,16,4,12
	.byte	'FS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_FMR_Bits',0,6,239,3,3
	.word	147012
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,6,242,3,16,4,12
	.byte	'MODREV',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	537
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_ID_Bits',0,6,247,3,3
	.word	147348
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,250,3,16,4,12
	.byte	'IPEN00',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	537
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_IGCR_Bits',0,6,146,4,3
	.word	147455
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,6,149,4,16,4,12
	.byte	'P0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_IN_Bits',0,6,154,4,3
	.word	147907
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,157,4,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_IOCR_Bits',0,6,164,4,3
	.word	148006
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,167,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'LBISTRES',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,4
	.word	340
	.byte	18,12,2,35,0,12
	.byte	'reserved_20',0,2
	.word	1088
	.byte	8,4,2,35,2,12
	.byte	'LBISTDONE',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'LBISTERRINJ',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'LBISTREQRED',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,177,4,3
	.word	148156
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,180,4,16,4,12
	.byte	'SEED',0,4
	.word	340
	.byte	19,13,2,35,0,12
	.byte	'reserved_19',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,187,4,3
	.word	148394
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,190,4,16,4,12
	.byte	'LENGTH',0,2
	.word	1088
	.byte	12,4,2,35,0,12
	.byte	'reserved_12',0,4
	.word	340
	.byte	20,0,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,194,4,3
	.word	148555
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,6,197,4,16,4,12
	.byte	'SIGNATURE',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,6,200,4,3
	.word	148661
	.byte	11
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,203,4,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,2
	.word	1088
	.byte	14,1,2,35,0,12
	.byte	'reserved_15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'LS0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	1088
	.byte	14,1,2,35,2,12
	.byte	'LSEN0',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,211,4,3
	.word	148747
	.byte	11
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,6,214,4,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,2
	.word	1088
	.byte	14,1,2,35,0,12
	.byte	'reserved_15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'LS1',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	1088
	.byte	14,1,2,35,2,12
	.byte	'LSEN1',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LCLCON1_Bits',0,6,222,4,3
	.word	148928
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,225,4,16,4,12
	.byte	'LCLT0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'LCLT2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	10,0,2,35,0,12
	.byte	'PLCLT0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'PLCLT1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'PLCLT2',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	1088
	.byte	10,0,2,35,2,0,19
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,241,4,3
	.word	149109
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,6,244,4,16,4,12
	.byte	'DEPT',0,1
	.word	537
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	1088
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_MANID_Bits',0,6,249,4,3
	.word	149453
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,6,252,4,16,4,12
	.byte	'PS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	1088
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	1088
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_OMR_Bits',0,6,132,5,3
	.word	149564
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,135,5,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	537
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	537
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'HYSEN',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'HYSCTL',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'AMPCTL',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,156,5,3
	.word	149722
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,6,159,5,16,4,12
	.byte	'P0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_OUT_Bits',0,6,164,5,3
	.word	150133
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,167,5,16,4,12
	.byte	'CSEL0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	10,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,183,5,3
	.word	150234
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,186,5,16,4,12
	.byte	'OVEN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	340
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,195,5,3
	.word	150567
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,198,5,16,4,12
	.byte	'PDIS0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC_Bits',0,6,203,5,3
	.word	150769
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,6,206,5,16,4,12
	.byte	'PD0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'PL0',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'PD1',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'PL1',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	340
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDR_Bits',0,6,213,5,3
	.word	150880
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,216,5,16,4,12
	.byte	'PDR0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	340
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR_Bits',0,6,227,5,3
	.word	151013
	.byte	11
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,6,230,5,16,4,12
	.byte	'DIVBY',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,2
	.word	1088
	.byte	8,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	537
	.byte	5,0,2,35,3,0,19
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,6,241,5,3
	.word	151216
	.byte	11
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,6,244,5,16,4,12
	.byte	'K2DIV',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	5,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,6,250,5,3
	.word	151456
	.byte	11
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,6,253,5,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'LOCK',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'K3RDY',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,4
	.word	340
	.byte	25,0,2,35,0,0,19
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,6,135,6,3
	.word	151600
	.byte	11
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,6,138,6,16,4,12
	.byte	'REQSLP',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR0_Bits',0,6,144,6,3
	.word	151822
	.byte	11
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,6,147,6,16,4,12
	.byte	'REQSLP',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR1_Bits',0,6,153,6,3
	.word	151958
	.byte	11
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,6,156,6,16,4,12
	.byte	'REQSLP',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR2_Bits',0,6,162,6,3
	.word	152094
	.byte	11
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,6,165,6,16,4,12
	.byte	'REQSLP',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR3_Bits',0,6,171,6,3
	.word	152230
	.byte	11
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,6,174,6,16,4,12
	.byte	'REQSLP',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR4_Bits',0,6,180,6,3
	.word	152366
	.byte	11
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,6,183,6,16,4,12
	.byte	'REQSLP',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	340
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR5_Bits',0,6,189,6,3
	.word	152502
	.byte	11
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,6,192,6,16,4,12
	.byte	'CPU0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'CPU1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'CPU2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'CPU3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'CPU4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'CPU5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	10,0,2,35,0,12
	.byte	'CPU0LS',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'CPU1LS',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'CPU2LS',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'CPU3LS',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	1088
	.byte	12,0,2,35,2,0,19
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,6,206,6,3
	.word	152638
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,209,6,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	537
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,4
	.word	340
	.byte	11,8,2,35,0,12
	.byte	'CPUSEL',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	537
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,220,6,3
	.word	152910
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,6,223,6,16,4,12
	.byte	'LJTEN',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'LJTOVEN',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'LJTOVIEN',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'LJTSTRT',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'LJTSTP',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'LJTCLR',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	6,4,2,35,0,12
	.byte	'SDSTEP',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'VDTEN',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'VDTOVEN',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'VDTOVIEN',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'VDTSTRT',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'VDTSTP',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'VDTCLR',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	1088
	.byte	7,3,2,35,2,12
	.byte	'LPSLPEN',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	537
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,6,242,6,3
	.word	153155
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,6,245,6,16,4,12
	.byte	'LJTCV',0,2
	.word	1088
	.byte	16,0,2,35,0,12
	.byte	'VDTCV',0,2
	.word	1088
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,6,250,6,3
	.word	153543
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,6,253,6,16,4,12
	.byte	'LDJMPREQ',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'LJTRUN',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'LJTOV',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	537
	.byte	3,4,2,35,1,12
	.byte	'LJTOVCLR',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'LJTCNT',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,6,136,7,3
	.word	153661
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,6,139,7,16,4,12
	.byte	'VDROOPREQ',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'VDTRUN',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'VDTOV',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	537
	.byte	3,4,2,35,1,12
	.byte	'VDTOVCLR',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'VDTCNT',0,2
	.word	1088
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,6,151,7,3
	.word	153904
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,154,7,16,4,12
	.byte	'ESR0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	537
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	537
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	537
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	537
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	537
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	537
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	537
	.byte	2,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	537
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	1088
	.byte	10,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,168,7,3
	.word	154171
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,171,7,16,4,12
	.byte	'FRTO',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'CSSX',0,2
	.word	1088
	.byte	6,3,2,35,0,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,185,7,3
	.word	154451
	.byte	11
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,6,188,7,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON3_Bits',0,6,191,7,3
	.word	154756
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,194,7,16,4,12
	.byte	'ESR0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	537
	.byte	5,0,2,35,1,12
	.byte	'PORST',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EVRC',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'HSMS',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'HSMA',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'LBPORST',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'LBTERM',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,224,7,3
	.word	154837
	.byte	11
	.byte	'_Ifx_SCU_SEICON0_Bits',0,6,227,7,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'ENDINIT',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EPW',0,4
	.word	936
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_SEICON0_Bits',0,6,233,7,3
	.word	155405
	.byte	11
	.byte	'_Ifx_SCU_SEICON1_Bits',0,6,236,7,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	340
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_SEICON1_Bits',0,6,245,7,3
	.word	155535
	.byte	11
	.byte	'_Ifx_SCU_SEISR_Bits',0,6,248,7,16,4,12
	.byte	'AE',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	1088
	.byte	10,0,2,35,0,12
	.byte	'TIM',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_SEISR_Bits',0,6,130,8,3
	.word	155726
	.byte	11
	.byte	'_Ifx_SCU_STCON_Bits',0,6,133,8,16,4,12
	.byte	'reserved_0',0,2
	.word	1088
	.byte	13,3,2,35,0,12
	.byte	'SFCBAE',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'CFCBAE',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'STP',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_STCON_Bits',0,6,140,8,3
	.word	155904
	.byte	11
	.byte	'_Ifx_SCU_STMEM1_Bits',0,6,143,8,16,4,12
	.byte	'MEM',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM1_Bits',0,6,146,8,3
	.word	156055
	.byte	11
	.byte	'_Ifx_SCU_STMEM2_Bits',0,6,149,8,16,4,12
	.byte	'MEM',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM2_Bits',0,6,152,8,3
	.word	156127
	.byte	11
	.byte	'_Ifx_SCU_STMEM3_Bits',0,6,155,8,16,4,12
	.byte	'MEM',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM3_Bits',0,6,158,8,3
	.word	156199
	.byte	11
	.byte	'_Ifx_SCU_STMEM4_Bits',0,6,161,8,16,4,12
	.byte	'MEM',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM4_Bits',0,6,164,8,3
	.word	156271
	.byte	11
	.byte	'_Ifx_SCU_STMEM5_Bits',0,6,167,8,16,4,12
	.byte	'MEM',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM5_Bits',0,6,170,8,3
	.word	156343
	.byte	11
	.byte	'_Ifx_SCU_STMEM6_Bits',0,6,173,8,16,4,12
	.byte	'MEM',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM6_Bits',0,6,176,8,3
	.word	156415
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,179,8,16,4,12
	.byte	'HWCFG',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	537
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	537
	.byte	3,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,195,8,3
	.word	156487
	.byte	11
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,6,198,8,16,4,12
	.byte	'ADDRCFG',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'SPARE',0,2
	.word	1088
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,6,203,8,3
	.word	156816
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,206,8,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	6,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,213,8,3
	.word	156936
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,216,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	537
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'DDC',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,228,8,3
	.word	157106
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,6,231,8,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	1088
	.byte	6,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	537
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	537
	.byte	3,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	537
	.byte	3,2,2,35,3,12
	.byte	'INSEL',0,1
	.word	537
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,6,244,8,3
	.word	157369
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,6,247,8,16,4,12
	.byte	'K2DIV',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	340
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,6,251,8,3
	.word	157648
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,6,254,8,16,4,12
	.byte	'MODCFG',0,2
	.word	1088
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,6,130,9,3
	.word	157752
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,6,133,9,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'LOCK',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	2,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	340
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,6,143,9,3
	.word	157858
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,146,9,16,4,12
	.byte	'ESR0T',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'TRAP2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,153,9,3
	.word	158081
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,6,156,9,16,4,12
	.byte	'CPU0ESR0T',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'CPU0ESR1T',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'CPU0TRAP2T',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'CPU0SMUT',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'CPU1ESR0T',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'CPU1ESR1T',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'CPU1TRAP2T',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'CPU1SMUT',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'CPU2ESR0T',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'CPU2ESR1T',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'CPU2TRAP2T',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'CPU2SMUT',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	537
	.byte	4,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,6,175,9,3
	.word	158229
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,6,178,9,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	537
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,6,185,9,3
	.word	158656
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,188,9,16,4,12
	.byte	'ESR0T',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'TRAP2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,195,9,3
	.word	158829
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,198,9,16,4,12
	.byte	'ESR0T',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'TRAP2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,205,9,3
	.word	158977
	.byte	19
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,214,9,3
	.word	952
	.byte	19
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,230,9,3
	.word	1110
	.byte	19
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,246,9,3
	.word	1376
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,249,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	936
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,255,9,3
	.word	159227
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,130,10,16,4,12
	.byte	'CLRIRF',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,143,10,3
	.word	159353
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,146,10,16,4,12
	.byte	'AE',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	537
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,159,10,3
	.word	159605
	.byte	13,6,167,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	140608
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN00',0,6,172,10,3
	.word	159824
	.byte	13,6,175,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141167
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN01',0,6,180,10,3
	.word	159889
	.byte	13,6,183,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141246
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN10',0,6,188,10,3
	.word	159954
	.byte	13,6,191,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141806
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN11',0,6,196,10,3
	.word	160019
	.byte	13,6,199,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	141887
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS',0,6,204,10,3
	.word	160084
	.byte	13,6,207,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142113
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON0',0,6,212,10,3
	.word	160149
	.byte	13,6,215,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142386
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON1',0,6,220,10,3
	.word	160214
	.byte	13,6,223,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142712
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON2',0,6,228,10,3
	.word	160279
	.byte	13,6,231,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	142990
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON3',0,6,236,10,3
	.word	160344
	.byte	13,6,239,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143359
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON4',0,6,244,10,3
	.word	160409
	.byte	13,6,247,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143539
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON5',0,6,252,10,3
	.word	160474
	.byte	13,6,255,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143711
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6',0,6,132,11,3
	.word	160539
	.byte	13,6,135,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143811
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7',0,6,140,11,3
	.word	160604
	.byte	13,6,143,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	143911
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON8',0,6,148,11,3
	.word	160669
	.byte	13,6,151,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144011
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CHIPID',0,6,156,11,3
	.word	160734
	.byte	13,6,159,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144214
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCLIM',0,6,164,11,3
	.word	160798
	.byte	13,6,167,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144446
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCSTAT',0,6,172,11,3
	.word	160863
	.byte	13,6,175,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144548
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICON0',0,6,180,11,3
	.word	160929
	.byte	13,6,183,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144676
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICON1',0,6,188,11,3
	.word	160993
	.byte	13,6,191,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	144865
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICR',0,6,196,11,3
	.word	161057
	.byte	13,6,199,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	145229
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EIFILT',0,6,204,11,3
	.word	161119
	.byte	13,6,207,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	145668
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR',0,6,212,11,3
	.word	161183
	.byte	13,6,215,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	145879
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EISR',0,6,220,11,3
	.word	161245
	.byte	13,6,223,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146055
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EMSR',0,6,228,11,3
	.word	161307
	.byte	13,6,231,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146249
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EMSSW',0,6,236,11,3
	.word	161369
	.byte	13,6,239,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146384
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,6,244,11,3
	.word	161432
	.byte	13,6,247,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146520
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG',0,6,252,11,3
	.word	161505
	.byte	13,6,255,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146631
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EXTCON',0,6,132,12,3
	.word	161570
	.byte	13,6,135,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	146849
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FDR',0,6,140,12,3
	.word	161634
	.byte	13,6,143,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147012
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FMR',0,6,148,12,3
	.word	161695
	.byte	13,6,151,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147348
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ID',0,6,156,12,3
	.word	161756
	.byte	13,6,159,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147455
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IGCR',0,6,164,12,3
	.word	161816
	.byte	13,6,167,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	147907
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IN',0,6,172,12,3
	.word	161878
	.byte	13,6,175,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148006
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IOCR',0,6,180,12,3
	.word	161938
	.byte	13,6,183,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148156
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,188,12,3
	.word	162000
	.byte	13,6,191,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148394
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,196,12,3
	.word	162068
	.byte	13,6,199,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148555
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,204,12,3
	.word	162136
	.byte	13,6,207,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148661
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL3',0,6,212,12,3
	.word	162204
	.byte	13,6,215,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148747
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLCON0',0,6,220,12,3
	.word	162272
	.byte	13,6,223,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	148928
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLCON1',0,6,228,12,3
	.word	162337
	.byte	13,6,231,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	149109
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST',0,6,236,12,3
	.word	162402
	.byte	13,6,239,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	149453
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_MANID',0,6,244,12,3
	.word	162467
	.byte	13,6,247,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	149564
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OMR',0,6,252,12,3
	.word	162530
	.byte	13,6,255,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	149722
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OSCCON',0,6,132,13,3
	.word	162591
	.byte	13,6,135,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	150133
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OUT',0,6,140,13,3
	.word	162655
	.byte	13,6,143,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	150234
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCCON',0,6,148,13,3
	.word	162716
	.byte	13,6,151,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	150567
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE',0,6,156,13,3
	.word	162780
	.byte	13,6,159,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	150769
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC',0,6,164,13,3
	.word	162847
	.byte	13,6,167,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	150880
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDR',0,6,172,13,3
	.word	162910
	.byte	13,6,175,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	151013
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR',0,6,180,13,3
	.word	162971
	.byte	13,6,183,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	151216
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PERPLLCON0',0,6,188,13,3
	.word	163033
	.byte	13,6,191,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	151456
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PERPLLCON1',0,6,196,13,3
	.word	163101
	.byte	13,6,199,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	151600
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PERPLLSTAT',0,6,204,13,3
	.word	163169
	.byte	13,6,207,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	151822
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR0',0,6,212,13,3
	.word	163237
	.byte	13,6,215,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	151958
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR1',0,6,220,13,3
	.word	163301
	.byte	13,6,223,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	152094
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR2',0,6,228,13,3
	.word	163365
	.byte	13,6,231,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	152230
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR3',0,6,236,13,3
	.word	163429
	.byte	13,6,239,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	152366
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR4',0,6,244,13,3
	.word	163493
	.byte	13,6,247,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	152502
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR5',0,6,252,13,3
	.word	163557
	.byte	13,6,255,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	152638
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSTAT0',0,6,132,14,3
	.word	163621
	.byte	13,6,135,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	152910
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR1',0,6,140,14,3
	.word	163686
	.byte	13,6,143,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	153155
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMTRCSR0',0,6,148,14,3
	.word	163751
	.byte	13,6,151,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	153543
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMTRCSR1',0,6,156,14,3
	.word	163817
	.byte	13,6,159,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	153661
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMTRCSR2',0,6,164,14,3
	.word	163883
	.byte	13,6,167,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	153904
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMTRCSR3',0,6,172,14,3
	.word	163949
	.byte	13,6,175,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	154171
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON',0,6,180,14,3
	.word	164015
	.byte	13,6,183,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	154451
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON2',0,6,188,14,3
	.word	164079
	.byte	13,6,191,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	154756
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON3',0,6,196,14,3
	.word	164144
	.byte	13,6,199,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	154837
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTSTAT',0,6,204,14,3
	.word	164209
	.byte	13,6,207,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	155405
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SEICON0',0,6,212,14,3
	.word	164274
	.byte	13,6,215,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	155535
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SEICON1',0,6,220,14,3
	.word	164339
	.byte	13,6,223,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	155726
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SEISR',0,6,228,14,3
	.word	164404
	.byte	13,6,231,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	155904
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STCON',0,6,236,14,3
	.word	164467
	.byte	13,6,239,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156055
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM1',0,6,244,14,3
	.word	164530
	.byte	13,6,247,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156127
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM2',0,6,252,14,3
	.word	164594
	.byte	13,6,255,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156199
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM3',0,6,132,15,3
	.word	164658
	.byte	13,6,135,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156271
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM4',0,6,140,15,3
	.word	164722
	.byte	13,6,143,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156343
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM5',0,6,148,15,3
	.word	164786
	.byte	13,6,151,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156415
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STMEM6',0,6,156,15,3
	.word	164850
	.byte	13,6,159,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156487
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STSTAT',0,6,164,15,3
	.word	164914
	.byte	13,6,167,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156816
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SWAPCTRL',0,6,172,15,3
	.word	164978
	.byte	13,6,175,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	156936
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON',0,6,180,15,3
	.word	165044
	.byte	13,6,183,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	157106
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON',0,6,188,15,3
	.word	165110
	.byte	13,6,191,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	157369
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSPLLCON0',0,6,196,15,3
	.word	165174
	.byte	13,6,199,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	157648
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSPLLCON1',0,6,204,15,3
	.word	165242
	.byte	13,6,207,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	157752
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSPLLCON2',0,6,212,15,3
	.word	165310
	.byte	13,6,215,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	157858
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSPLLSTAT',0,6,220,15,3
	.word	165378
	.byte	13,6,223,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	158081
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR',0,6,228,15,3
	.word	165446
	.byte	13,6,231,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	158229
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS0',0,6,236,15,3
	.word	165511
	.byte	13,6,239,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	158656
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS1',0,6,244,15,3
	.word	165577
	.byte	13,6,247,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	158829
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET',0,6,252,15,3
	.word	165643
	.byte	13,6,255,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	158977
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT',0,6,132,16,3
	.word	165708
	.byte	19
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,140,16,3
	.word	1048
	.byte	19
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,148,16,3
	.word	1336
	.byte	19
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,156,16,3
	.word	1567
	.byte	13,6,159,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	159227
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0',0,6,164,16,3
	.word	165859
	.byte	13,6,167,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	159353
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON1',0,6,172,16,3
	.word	165926
	.byte	13,6,175,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	159605
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_SR',0,6,180,16,3
	.word	165993
	.byte	11
	.byte	'_Ifx_SCU_ESRCFGX',0,6,192,16,25,4,14
	.byte	'ESRCFGX',0
	.word	161432
	.byte	4,2,35,0,0,10
	.word	166058
	.byte	19
	.byte	'Ifx_SCU_ESRCFGX',0,6,195,16,3
	.word	166099
	.byte	10
	.word	1607
	.byte	19
	.byte	'Ifx_SCU_WDTCPU',0,6,215,16,3
	.word	166129
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,6,230,16,25,12,14
	.byte	'CON0',0
	.word	165859
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	165926
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	165993
	.byte	4,2,35,8,0,10
	.word	166158
	.byte	19
	.byte	'Ifx_SCU_WDTS',0,6,235,16,3
	.word	166219
	.byte	15,8
	.word	166058
	.byte	16,1,0,10
	.word	166246
	.byte	15,16
	.word	161057
	.byte	16,3,0,15,16
	.word	161816
	.byte	16,3,0,15,36
	.word	1607
	.byte	16,2,0,10
	.word	166278
	.byte	10
	.word	166158
	.byte	15,176,2
	.word	537
	.byte	16,175,2,0,11
	.byte	'_Ifx_SCU',0,6,250,16,25,128,8,14
	.byte	'reserved_0',0
	.word	4912
	.byte	8,2,35,0,14
	.byte	'ID',0
	.word	161756
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	3092
	.byte	4,2,35,12,14
	.byte	'OSCCON',0
	.word	162591
	.byte	4,2,35,16,14
	.byte	'SYSPLLSTAT',0
	.word	165378
	.byte	4,2,35,20,14
	.byte	'SYSPLLCON0',0
	.word	165174
	.byte	4,2,35,24,14
	.byte	'SYSPLLCON1',0
	.word	165242
	.byte	4,2,35,28,14
	.byte	'SYSPLLCON2',0
	.word	165310
	.byte	4,2,35,32,14
	.byte	'PERPLLSTAT',0
	.word	163169
	.byte	4,2,35,36,14
	.byte	'PERPLLCON0',0
	.word	163033
	.byte	4,2,35,40,14
	.byte	'PERPLLCON1',0
	.word	163101
	.byte	4,2,35,44,14
	.byte	'CCUCON0',0
	.word	160149
	.byte	4,2,35,48,14
	.byte	'CCUCON1',0
	.word	160214
	.byte	4,2,35,52,14
	.byte	'FDR',0
	.word	161634
	.byte	4,2,35,56,14
	.byte	'EXTCON',0
	.word	161570
	.byte	4,2,35,60,14
	.byte	'CCUCON2',0
	.word	160279
	.byte	4,2,35,64,14
	.byte	'CCUCON3',0
	.word	160344
	.byte	4,2,35,68,14
	.byte	'CCUCON4',0
	.word	160409
	.byte	4,2,35,72,14
	.byte	'CCUCON5',0
	.word	160474
	.byte	4,2,35,76,14
	.byte	'RSTSTAT',0
	.word	164209
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	3092
	.byte	4,2,35,84,14
	.byte	'RSTCON',0
	.word	164015
	.byte	4,2,35,88,14
	.byte	'ARSTDIS',0
	.word	160084
	.byte	4,2,35,92,14
	.byte	'SWRSTCON',0
	.word	165044
	.byte	4,2,35,96,14
	.byte	'RSTCON2',0
	.word	164079
	.byte	4,2,35,100,14
	.byte	'RSTCON3',0
	.word	164144
	.byte	4,2,35,104,14
	.byte	'reserved_6C',0
	.word	3092
	.byte	4,2,35,108,14
	.byte	'ESRCFGX',0
	.word	166255
	.byte	8,2,35,112,14
	.byte	'ESROCFG',0
	.word	161505
	.byte	4,2,35,120,14
	.byte	'SYSCON',0
	.word	165110
	.byte	4,2,35,124,14
	.byte	'CCUCON6',0
	.word	160539
	.byte	4,3,35,128,1,14
	.byte	'CCUCON7',0
	.word	160604
	.byte	4,3,35,132,1,14
	.byte	'CCUCON8',0
	.word	160669
	.byte	4,3,35,136,1,14
	.byte	'reserved_8C',0
	.word	16436
	.byte	16,3,35,140,1,14
	.byte	'PDR',0
	.word	162910
	.byte	4,3,35,156,1,14
	.byte	'IOCR',0
	.word	161938
	.byte	4,3,35,160,1,14
	.byte	'OUT',0
	.word	162655
	.byte	4,3,35,164,1,14
	.byte	'OMR',0
	.word	162530
	.byte	4,3,35,168,1,14
	.byte	'IN',0
	.word	161878
	.byte	4,3,35,172,1,14
	.byte	'reserved_B0',0
	.word	16436
	.byte	16,3,35,176,1,14
	.byte	'STSTAT',0
	.word	164914
	.byte	4,3,35,192,1,14
	.byte	'STCON',0
	.word	164467
	.byte	4,3,35,196,1,14
	.byte	'PMCSR0',0
	.word	163237
	.byte	4,3,35,200,1,14
	.byte	'PMCSR1',0
	.word	163301
	.byte	4,3,35,204,1,14
	.byte	'PMCSR2',0
	.word	163365
	.byte	4,3,35,208,1,14
	.byte	'PMCSR3',0
	.word	163429
	.byte	4,3,35,212,1,14
	.byte	'PMCSR4',0
	.word	163493
	.byte	4,3,35,216,1,14
	.byte	'PMCSR5',0
	.word	163557
	.byte	4,3,35,220,1,14
	.byte	'reserved_E0',0
	.word	3092
	.byte	4,3,35,224,1,14
	.byte	'PMSTAT0',0
	.word	163621
	.byte	4,3,35,228,1,14
	.byte	'PMSWCR1',0
	.word	163686
	.byte	4,3,35,232,1,14
	.byte	'reserved_EC',0
	.word	16436
	.byte	16,3,35,236,1,14
	.byte	'EMSR',0
	.word	161307
	.byte	4,3,35,252,1,14
	.byte	'EMSSW',0
	.word	161369
	.byte	4,3,35,128,2,14
	.byte	'DTSCSTAT',0
	.word	160863
	.byte	4,3,35,132,2,14
	.byte	'DTSCLIM',0
	.word	160798
	.byte	4,3,35,136,2,14
	.byte	'reserved_10C',0
	.word	23624
	.byte	20,3,35,140,2,14
	.byte	'TRAPDIS1',0
	.word	165577
	.byte	4,3,35,160,2,14
	.byte	'TRAPSTAT',0
	.word	165708
	.byte	4,3,35,164,2,14
	.byte	'TRAPSET',0
	.word	165643
	.byte	4,3,35,168,2,14
	.byte	'TRAPCLR',0
	.word	165446
	.byte	4,3,35,172,2,14
	.byte	'TRAPDIS0',0
	.word	165511
	.byte	4,3,35,176,2,14
	.byte	'LCLCON0',0
	.word	162272
	.byte	4,3,35,180,2,14
	.byte	'LCLCON1',0
	.word	162337
	.byte	4,3,35,184,2,14
	.byte	'LCLTEST',0
	.word	162402
	.byte	4,3,35,188,2,14
	.byte	'CHIPID',0
	.word	160734
	.byte	4,3,35,192,2,14
	.byte	'MANID',0
	.word	162467
	.byte	4,3,35,196,2,14
	.byte	'reserved_148',0
	.word	3092
	.byte	4,3,35,200,2,14
	.byte	'SWAPCTRL',0
	.word	164978
	.byte	4,3,35,204,2,14
	.byte	'reserved_150',0
	.word	23624
	.byte	20,3,35,208,2,14
	.byte	'LBISTCTRL0',0
	.word	162000
	.byte	4,3,35,228,2,14
	.byte	'LBISTCTRL1',0
	.word	162068
	.byte	4,3,35,232,2,14
	.byte	'LBISTCTRL2',0
	.word	162136
	.byte	4,3,35,236,2,14
	.byte	'LBISTCTRL3',0
	.word	162204
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	16436
	.byte	16,3,35,244,2,14
	.byte	'STMEM1',0
	.word	164530
	.byte	4,3,35,132,3,14
	.byte	'STMEM2',0
	.word	164594
	.byte	4,3,35,136,3,14
	.byte	'PDISC',0
	.word	162847
	.byte	4,3,35,140,3,14
	.byte	'reserved_190',0
	.word	4912
	.byte	8,3,35,144,3,14
	.byte	'PMTRCSR0',0
	.word	163751
	.byte	4,3,35,152,3,14
	.byte	'PMTRCSR1',0
	.word	163817
	.byte	4,3,35,156,3,14
	.byte	'PMTRCSR2',0
	.word	163883
	.byte	4,3,35,160,3,14
	.byte	'PMTRCSR3',0
	.word	163949
	.byte	4,3,35,164,3,14
	.byte	'reserved_1A8',0
	.word	4283
	.byte	24,3,35,168,3,14
	.byte	'STMEM3',0
	.word	164658
	.byte	4,3,35,192,3,14
	.byte	'STMEM4',0
	.word	164722
	.byte	4,3,35,196,3,14
	.byte	'STMEM5',0
	.word	164786
	.byte	4,3,35,200,3,14
	.byte	'STMEM6',0
	.word	164850
	.byte	4,3,35,204,3,14
	.byte	'reserved_1D0',0
	.word	16436
	.byte	16,3,35,208,3,14
	.byte	'OVCENABLE',0
	.word	162780
	.byte	4,3,35,224,3,14
	.byte	'OVCCON',0
	.word	162716
	.byte	4,3,35,228,3,14
	.byte	'reserved_1E8',0
	.word	119322
	.byte	36,3,35,232,3,14
	.byte	'EIFILT',0
	.word	161119
	.byte	4,3,35,140,4,14
	.byte	'EICR',0
	.word	166260
	.byte	16,3,35,144,4,14
	.byte	'EIFR',0
	.word	161183
	.byte	4,3,35,160,4,14
	.byte	'FMR',0
	.word	161695
	.byte	4,3,35,164,4,14
	.byte	'PDRR',0
	.word	162971
	.byte	4,3,35,168,4,14
	.byte	'IGCR',0
	.word	166269
	.byte	16,3,35,172,4,14
	.byte	'reserved_23C',0
	.word	16436
	.byte	16,3,35,188,4,14
	.byte	'WDTCPU',0
	.word	166287
	.byte	36,3,35,204,4,14
	.byte	'reserved_270',0
	.word	69696
	.byte	44,3,35,240,4,14
	.byte	'EICON0',0
	.word	160929
	.byte	4,3,35,156,5,14
	.byte	'EICON1',0
	.word	160993
	.byte	4,3,35,160,5,14
	.byte	'EISR',0
	.word	161245
	.byte	4,3,35,164,5,14
	.byte	'WDTS',0
	.word	166292
	.byte	12,3,35,168,5,14
	.byte	'SEICON0',0
	.word	164274
	.byte	4,3,35,180,5,14
	.byte	'SEICON1',0
	.word	164339
	.byte	4,3,35,184,5,14
	.byte	'SEISR',0
	.word	164404
	.byte	4,3,35,188,5,14
	.byte	'reserved_2C0',0
	.word	166297
	.byte	176,2,3,35,192,5,14
	.byte	'ACCEN11',0
	.word	160019
	.byte	4,3,35,240,7,14
	.byte	'ACCEN10',0
	.word	159954
	.byte	4,3,35,244,7,14
	.byte	'ACCEN01',0
	.word	159889
	.byte	4,3,35,248,7,14
	.byte	'ACCEN00',0
	.word	159824
	.byte	4,3,35,252,7,0,10
	.word	166308
	.byte	19
	.byte	'Ifx_SCU',0,6,237,17,3
	.word	168373
	.byte	17,7,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,19
	.byte	'IfxPort_ControlledBy',0,7,77,3
	.word	168395
	.byte	17,7,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,19
	.byte	'IfxPort_InputMode',0,7,87,3
	.word	168486
	.byte	17,7,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,19
	.byte	'IfxPort_LvdsMode',0,7,95,3
	.word	168637
	.byte	19
	.byte	'IfxPort_OutputIdx',0,7,136,1,3
	.word	33931
	.byte	19
	.byte	'IfxPort_OutputMode',0,7,145,1,3
	.word	25392
	.byte	19
	.byte	'IfxPort_PadDriver',0,7,165,1,3
	.word	25488
	.byte	17,7,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,19
	.byte	'IfxPort_PadSupply',0,7,173,1,3
	.word	168800
	.byte	17,7,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,19
	.byte	'IfxPort_PinFunctionMode',0,7,181,1,3
	.word	168880
	.byte	19
	.byte	'IfxPort_State',0,7,193,1,3
	.word	9587
	.byte	19
	.byte	'IfxPort_Pin',0,7,250,1,3
	.word	33892
	.byte	19
	.byte	'IfxStdIf_Timer_CountDir',0,9,90,3
	.word	130936
	.byte	19
	.byte	'IfxStdIf_Timer',0,9,93,32
	.word	10549
	.byte	31,9,131,2,9,16,14
	.byte	'enabled',0
	.word	537
	.byte	1,2,35,0,14
	.byte	'triggerPoint',0
	.word	9855
	.byte	4,2,35,2,14
	.byte	'isrPriority',0
	.word	1088
	.byte	2,2,35,6,14
	.byte	'isrProvider',0
	.word	134288
	.byte	1,2,35,8,14
	.byte	'outputMode',0
	.word	25392
	.byte	1,2,35,9,14
	.byte	'outputDriver',0
	.word	25488
	.byte	1,2,35,10,14
	.byte	'risingEdgeAtPeriod',0
	.word	537
	.byte	1,2,35,11,14
	.byte	'outputEnabled',0
	.word	537
	.byte	1,2,35,12,0,19
	.byte	'IfxStdIf_Timer_TrigConfig',0,9,141,2,3
	.word	169086
	.byte	31,9,144,2,9,36,14
	.byte	'frequency',0
	.word	238
	.byte	4,2,35,0,14
	.byte	'isrPriority',0
	.word	1088
	.byte	2,2,35,4,14
	.byte	'isrProvider',0
	.word	134288
	.byte	1,2,35,6,14
	.byte	'minResolution',0
	.word	238
	.byte	4,2,35,8,14
	.byte	'trigger',0
	.word	169086
	.byte	16,2,35,12,14
	.byte	'countDir',0
	.word	130936
	.byte	1,2,35,28,14
	.byte	'startOffset',0
	.word	238
	.byte	4,2,35,30,0,19
	.byte	'IfxStdIf_Timer_Config',0,9,153,2,3
	.word	169302
	.byte	19
	.byte	'IfxStdIf_PwmHl',0,18,78,32
	.word	133344
	.byte	19
	.byte	'IfxStdIf_PwmHl_Config',0,18,213,1,3
	.word	25962
	.byte	19
	.byte	'Ifx_GTM_ACCEN0_Bits',0,12,107,3
	.word	111932
	.byte	19
	.byte	'Ifx_GTM_ACCEN1_Bits',0,12,113,3
	.word	112501
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG_OUT0_Bits',0,12,126,3
	.word	115224
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG_OUT1_Bits',0,12,136,1,3
	.word	115425
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,12,144,1,3
	.word	35129
	.byte	19
	.byte	'Ifx_GTM_AEI_STA_XPT_Bits',0,12,152,1,3
	.word	37688
	.byte	19
	.byte	'Ifx_GTM_ARU_ACCESS_Bits',0,12,162,1,3
	.word	47863
	.byte	19
	.byte	'Ifx_GTM_ARU_CADDR_Bits',0,12,171,1,3
	.word	51181
	.byte	19
	.byte	'Ifx_GTM_ARU_CADDR_END_Bits',0,12,178,1,3
	.word	49786
	.byte	19
	.byte	'Ifx_GTM_ARU_CTRL_Bits',0,12,187,1,3
	.word	49904
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H_Bits',0,12,194,1,3
	.word	48028
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L_Bits',0,12,201,1,3
	.word	48139
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,12,208,1,3
	.word	48250
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,12,215,1,3
	.word	48597
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,12,222,1,3
	.word	48365
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,12,229,1,3
	.word	48481
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,12,236,1,3
	.word	48712
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,12,243,1,3
	.word	48828
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_CTRL_Bits',0,12,251,1,3
	.word	50073
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_RDADDR_Bits',0,12,130,2,3
	.word	51048
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_HIGH_Bits',0,12,140,2,3
	.word	50416
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_LOW_Bits',0,12,149,2,3
	.word	50233
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_SR_HIGH_Bits',0,12,160,2,3
	.word	50810
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_SR_LOW_Bits',0,12,169,2,3
	.word	50624
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN_Bits',0,12,178,2,3
	.word	49234
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,12,187,2,3
	.word	49410
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE_Bits',0,12,194,2,3
	.word	49582
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,12,203,2,3
	.word	49075
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,12,212,2,3
	.word	17471
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,12,226,2,3
	.word	16895
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,12,240,2,3
	.word	17183
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,12,133,3,3
	.word	18203
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,12,156,3,3
	.word	16445
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,12,170,3,3
	.word	18635
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,12,184,3,3
	.word	17627
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,12,198,3,3
	.word	17915
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0_Bits',0,12,205,3,3
	.word	15094
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1_Bits',0,12,212,3,3
	.word	15205
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0_Bits',0,12,219,3,3
	.word	15316
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL_Bits',0,12,248,3,3
	.word	11383
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,12,128,4,3
	.word	15773
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,12,136,4,3
	.word	15921
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,12,143,4,3
	.word	16068
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,12,151,4,3
	.word	15635
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR_Bits',0,12,160,4,3
	.word	11224
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMB_Bits',0,12,189,4,3
	.word	11899
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC_Bits',0,12,218,4,3
	.word	12455
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI_Bits',0,12,246,4,3
	.word	13010
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP_Bits',0,12,150,5,3
	.word	13577
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS_Bits',0,12,180,5,3
	.word	14192
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0_Bits',0,12,187,5,3
	.word	14872
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1_Bits',0,12,194,5,3
	.word	14983
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT_Bits',0,12,207,5,3
	.word	15427
	.byte	19
	.byte	'Ifx_GTM_AUX_IN_SRC_TIM_Bits',0,12,230,5,3
	.word	38888
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN_Bits',0,12,249,5,3
	.word	55694
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN_Bits',0,12,140,6,3
	.word	54618
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,12,159,6,3
	.word	55018
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE_Bits',0,12,166,6,3
	.word	55384
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,12,185,6,3
	.word	54305
	.byte	19
	.byte	'Ifx_GTM_BRC_RST_Bits',0,12,192,6,3
	.word	55588
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC_ADDR_Bits',0,12,201,6,3
	.word	53512
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC_DEST_Bits',0,12,230,6,3
	.word	53667
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,12,247,6,3
	.word	37816
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,12,130,7,3
	.word	38153
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,12,137,7,3
	.word	38361
	.byte	19
	.byte	'Ifx_GTM_CANOUTSEL0_Bits',0,12,150,7,3
	.word	120089
	.byte	19
	.byte	'Ifx_GTM_CANOUTSEL1_Bits',0,12,160,7,3
	.word	120289
	.byte	19
	.byte	'Ifx_GTM_CCM_AEIM_STA_Bits',0,12,169,7,3
	.word	120960
	.byte	19
	.byte	'Ifx_GTM_CCM_ARP_CTRL_Bits',0,12,180,7,3
	.word	120461
	.byte	19
	.byte	'Ifx_GTM_CCM_ARP_PROT_Bits',0,12,194,7,3
	.word	120654
	.byte	19
	.byte	'Ifx_GTM_CCM_ATOM_OUT_Bits',0,12,203,7,3
	.word	122464
	.byte	19
	.byte	'Ifx_GTM_CCM_CFG_Bits',0,12,221,7,3
	.word	123176
	.byte	19
	.byte	'Ifx_GTM_CCM_CMU_CLK_CFG_Bits',0,12,242,7,3
	.word	122634
	.byte	19
	.byte	'Ifx_GTM_CCM_CMU_FXCLK_CFG_Bits',0,12,249,7,3
	.word	123053
	.byte	19
	.byte	'Ifx_GTM_CCM_EXT_CAP_EN_Bits',0,12,129,8,3
	.word	122194
	.byte	19
	.byte	'Ifx_GTM_CCM_HW_CONF_Bits',0,12,154,8,3
	.word	121129
	.byte	19
	.byte	'Ifx_GTM_CCM_PROT_Bits',0,12,161,8,3
	.word	123521
	.byte	19
	.byte	'Ifx_GTM_CCM_TIM_AUX_IN_SRC_Bits',0,12,184,8,3
	.word	121717
	.byte	19
	.byte	'Ifx_GTM_CCM_TOM_OUT_Bits',0,12,191,8,3
	.word	122351
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL1_Bits',0,12,222,8,3
	.word	20485
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL2_Bits',0,12,131,9,3
	.word	21070
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL2_SR_Bits',0,12,168,9,3
	.word	21701
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL3_Bits',0,12,193,9,3
	.word	23174
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_DTV_Bits',0,12,202,9,3
	.word	22676
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_SR_Bits',0,12,216,9,3
	.word	22892
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CTRL_Bits',0,12,229,9,3
	.word	20240
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_PS_CTRL_Bits',0,12,242,9,3
	.word	22431
	.byte	19
	.byte	'Ifx_GTM_CFG_Bits',0,12,249,9,3
	.word	37579
	.byte	19
	.byte	'Ifx_GTM_CLC_Bits',0,12,131,10,3
	.word	111438
	.byte	19
	.byte	'Ifx_GTM_CLS_CLK_CFG_Bits',0,12,149,10,3
	.word	39985
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN_Bits',0,12,179,10,3
	.word	47087
	.byte	19
	.byte	'Ifx_GTM_CMP_EN_Bits',0,12,209,10,3
	.word	44514
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN_Bits',0,12,239,10,3
	.word	45600
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,12,141,11,3
	.word	46275
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE_Bits',0,12,148,11,3
	.word	46883
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,12,178,11,3
	.word	45089
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_CTRL_Bits',0,12,193,11,3
	.word	52998
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,12,211,11,3
	.word	51663
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK__CTRL_Bits',0,12,219,11,3
	.word	52224
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,12,226,11,3
	.word	52529
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,12,233,11,3
	.word	52412
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,12,240,11,3
	.word	52711
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,12,247,11,3
	.word	52107
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,12,254,11,3
	.word	51990
	.byte	19
	.byte	'Ifx_GTM_CMU_GLB_CTRL_Bits',0,12,133,12,3
	.word	52875
	.byte	19
	.byte	'Ifx_GTM_CTRL_Bits',0,12,145,12,3
	.word	34916
	.byte	19
	.byte	'Ifx_GTM_DATAIN_Bits',0,12,151,12,3
	.word	117028
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB_Bits',0,12,164,12,3
	.word	104730
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA_Bits',0,12,170,12,3
	.word	89573
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,12,177,12,3
	.word	99030
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,12,184,12,3
	.word	99154
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,12,191,12,3
	.word	95010
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,12,198,12,3
	.word	95132
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S_Bits',0,12,207,12,3
	.word	104201
	.byte	11
	.byte	'_Ifx_GTM_DPLL_ADT_TI_Bits',0,12,210,12,16,4,12
	.byte	'PD',0,4
	.word	936
	.byte	13,19,2,35,0,12
	.byte	'TINT',0,4
	.word	936
	.byte	3,16,2,35,0,12
	.byte	'NT',0,4
	.word	936
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	5,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_GTM_DPLL_ADT_TI_Bits',0,12,217,12,3
	.word	173612
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2_Bits',0,12,226,12,3
	.word	89830
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_Bits',0,12,238,12,3
	.word	90185
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3_Bits',0,12,246,12,3
	.word	90528
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3_EXT_Bits',0,12,254,12,3
	.word	106525
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_EXT_Bits',0,12,138,13,3
	.word	106314
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC_Bits',0,12,148,13,3
	.word	94578
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC_EXT_Bits',0,12,158,13,3
	.word	105965
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_Bits',0,12,170,13,3
	.word	89979
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C_Bits',0,12,178,13,3
	.word	90392
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC_Bits',0,12,188,13,3
	.word	94389
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_Bits',0,12,195,13,3
	.word	101648
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,12,202,13,3
	.word	101884
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_Bits',0,12,209,13,3
	.word	101534
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,12,216,13,3
	.word	101762
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM_1_Bits',0,12,223,13,3
	.word	102663
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM_2_Bits',0,12,230,13,3
	.word	102783
	.byte	19
	.byte	'Ifx_GTM_DPLL_CSN_MAX_Bits',0,12,237,13,3
	.word	108776
	.byte	19
	.byte	'Ifx_GTM_DPLL_CSN_MIN_Bits',0,12,244,13,3
	.word	108660
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTN_MAX_Bits',0,12,251,13,3
	.word	108544
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTN_MIN_Bits',0,12,130,14,3
	.word	108428
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_Bits',0,12,146,14,3
	.word	87385
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,12,159,14,3
	.word	96203
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,12,172,14,3
	.word	95971
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_Bits',0,12,198,14,3
	.word	87623
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_11_Bits',0,12,235,14,3
	.word	104968
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_STATE_Bits',0,12,251,14,3
	.word	96665
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,12,136,15,3
	.word	96440
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2_Bits',0,12,159,15,3
	.word	88033
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3_Bits',0,12,182,15,3
	.word	88407
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4_Bits',0,12,205,15,3
	.word	88793
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_5_Bits',0,12,228,15,3
	.word	89183
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_EXT_Bits',0,12,237,15,3
	.word	106161
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA_Bits',0,12,244,15,3
	.word	97257
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA_Bits',0,12,251,15,3
	.word	97528
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_Bits',0,12,130,16,3
	.word	104359
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT_Bits',0,12,137,16,3
	.word	100964
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_START_Bits',0,12,144,16,3
	.word	107261
	.byte	11
	.byte	'_Ifx_GTM_DPLL_DT_TI_Bits',0,12,147,16,16,4,12
	.byte	'DT_T',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_GTM_DPLL_DT_TI_Bits',0,12,151,16,3
	.word	175113
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT_Bits',0,12,158,16,3
	.word	100846
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_START_Bits',0,12,165,16,3
	.word	107134
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S_Bits',0,12,172,16,3
	.word	101308
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T_Bits',0,12,179,16,3
	.word	101082
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN_Bits',0,12,213,16,3
	.word	93384
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S_Bits',0,12,220,16,3
	.word	98239
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T_Bits',0,12,227,16,3
	.word	97886
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR_Bits',0,12,234,16,3
	.word	95835
	.byte	19
	.byte	'Ifx_GTM_DPLL_INCF1_OFFSET_Bits',0,12,241,16,3
	.word	106872
	.byte	19
	.byte	'Ifx_GTM_DPLL_INCF2_OFFSET_Bits',0,12,248,16,3
	.word	107003
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1_Bits',0,12,255,16,3
	.word	94153
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1_MASK_Bits',0,12,134,17,3
	.word	107748
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2_Bits',0,12,141,17,3
	.word	94271
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2_MASK_Bits',0,12,148,17,3
	.word	107878
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN_Bits',0,12,182,17,3
	.word	91795
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,12,216,17,3
	.word	92526
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE_Bits',0,12,223,17,3
	.word	93178
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,12,129,18,3
	.word	91256
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S_Bits',0,12,136,18,3
	.word	101420
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T_Bits',0,12,143,18,3
	.word	101194
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1_Bits',0,12,151,18,3
	.word	102397
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2_Bits',0,12,159,18,3
	.word	102530
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1_Bits',0,12,167,18,3
	.word	99278
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2_Bits',0,12,175,18,3
	.word	99408
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA_Bits',0,12,184,18,3
	.word	97375
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_Bits',0,12,192,18,3
	.word	103822
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,12,200,18,3
	.word	99832
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,12,208,18,3
	.word	99975
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_Bits',0,12,216,18,3
	.word	103687
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,12,224,18,3
	.word	99538
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,12,232,18,3
	.word	99681
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT_Bits',0,12,239,18,3
	.word	91140
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_Bits',0,12,253,18,3
	.word	90914
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_EXT1_Bits',0,12,136,19,3
	.word	108008
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_EXT2_Bits',0,12,149,19,3
	.word	108206
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC_Bits',0,12,164,19,3
	.word	90665
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW_Bits',0,12,174,19,3
	.word	89664
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_Bits',0,12,182,19,3
	.word	102266
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA_Bits',0,12,189,19,3
	.word	97139
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC_Bits',0,12,196,19,3
	.word	104610
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC_Bits',0,12,203,19,3
	.word	103121
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_Bits',0,12,210,19,3
	.word	103459
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_OLD_Bits',0,12,217,19,3
	.word	103569
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC_Bits',0,12,224,19,3
	.word	103011
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_Bits',0,12,231,19,3
	.word	103231
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_OLD_Bits',0,12,238,19,3
	.word	103341
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT_Bits',0,12,245,19,3
	.word	102903
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI_Bits',0,12,128,20,3
	.word	96944
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_Bits',0,12,135,20,3
	.word	100242
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,12,142,20,3
	.word	100482
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_Bits',0,12,149,20,3
	.word	100126
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,12,156,20,3
	.word	100358
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_Bits',0,12,163,20,3
	.word	103957
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,12,170,20,3
	.word	100726
	.byte	11
	.byte	'_Ifx_GTM_DPLL_RDT_TI_Bits',0,12,173,20,16,4,12
	.byte	'RDT_T',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_GTM_DPLL_RDT_TI_Bits',0,12,177,20,3
	.word	177108
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,12,184,20,3
	.word	100606
	.byte	19
	.byte	'Ifx_GTM_DPLL_SIDEL_Bits',0,12,191,20,3
	.word	105853
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR_Bits',0,12,199,20,3
	.word	102136
	.byte	19
	.byte	'Ifx_GTM_DPLL_STA_Bits',0,12,211,20,3
	.word	106666
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS_Bits',0,12,247,20,3
	.word	95254
	.byte	19
	.byte	'Ifx_GTM_DPLL_STA_FLAG_Bits',0,12,130,21,3
	.word	107534
	.byte	19
	.byte	'Ifx_GTM_DPLL_STA_MASK_Bits',0,12,138,21,3
	.word	107388
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,12,145,21,3
	.word	94890
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,12,152,21,3
	.word	94770
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA_Bits',0,12,160,21,3
	.word	98487
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI_Bits',0,12,168,21,3
	.word	98354
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL_Bits',0,12,175,21,3
	.word	98620
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL2_Bits',0,12,182,21,3
	.word	105628
	.byte	19
	.byte	'Ifx_GTM_DPLL_TIDEL_Bits',0,12,189,21,3
	.word	105741
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR_Bits',0,12,197,21,3
	.word	102006
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_Bits',0,12,206,21,3
	.word	98732
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S_Bits',0,12,215,21,3
	.word	98884
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC_Bits',0,12,222,21,3
	.word	104490
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S_Bits',0,12,229,21,3
	.word	104079
	.byte	11
	.byte	'_Ifx_GTM_DPLL_TSF_TI_Bits',0,12,232,21,16,4,12
	.byte	'TSF_T',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_GTM_DPLL_TSF_TI_Bits',0,12,236,21,3
	.word	177851
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_Bits',0,12,243,21,3
	.word	98003
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_OLD_Bits',0,12,250,21,3
	.word	98117
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_Bits',0,12,129,22,3
	.word	97646
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_OLD_Bits',0,12,136,22,3
	.word	97762
	.byte	19
	.byte	'Ifx_GTM_DSADCINSEL_Bits',0,12,149,22,3
	.word	114732
	.byte	19
	.byte	'Ifx_GTM_DSADC_OUTSEL0_Bits',0,12,161,22,3
	.word	114957
	.byte	19
	.byte	'Ifx_GTM_DTMAUXINSEL_Bits',0,12,176,22,3
	.word	119834
	.byte	19
	.byte	'Ifx_GTM_DXINCON_Bits',0,12,193,22,3
	.word	116759
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON_Bits',0,12,204,22,3
	.word	115652
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,12,219,22,3
	.word	36624
	.byte	19
	.byte	'Ifx_GTM_EXT_CAP_EN_Bits',0,12,227,22,3
	.word	39415
	.byte	19
	.byte	'Ifx_GTM_HW_CONF_Bits',0,12,252,22,3
	.word	36995
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0_Bits',0,12,154,23,3
	.word	65164
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,12,191,23,3
	.word	65886
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI2_Bits',0,12,228,23,3
	.word	66761
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3_Bits',0,12,137,24,3
	.word	67636
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI4_Bits',0,12,174,24,3
	.word	68511
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI_MCS_Bits',0,12,188,24,3
	.word	69395
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI_PSM_Bits',0,12,218,24,3
	.word	69705
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI_SPE_Bits',0,12,230,24,3
	.word	70463
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_ATOM_Bits',0,12,139,25,3
	.word	72489
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_MCS_Bits',0,12,153,25,3
	.word	71245
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_PSM_Bits',0,12,183,25,3
	.word	71537
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_SPE_Bits',0,12,195,25,3
	.word	72270
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_TOM_Bits',0,12,232,25,3
	.word	73440
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,12,136,26,3
	.word	64522
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_CLS_Bits',0,12,161,26,3
	.word	70698
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R0_Bits',0,12,195,26,3
	.word	56200
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R1_Bits',0,12,228,26,3
	.word	56942
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R10_Bits',0,12,137,27,3
	.word	63648
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R2_Bits',0,12,174,27,3
	.word	57705
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R3_Bits',0,12,211,27,3
	.word	58546
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R4_Bits',0,12,248,27,3
	.word	59387
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R5_Bits',0,12,157,28,3
	.word	60228
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R6_Bits',0,12,194,28,3
	.word	61069
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R7_Bits',0,12,231,28,3
	.word	61922
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R9_Bits',0,12,140,29,3
	.word	62775
	.byte	19
	.byte	'Ifx_GTM_INTOUT_Bits',0,12,147,29,3
	.word	116061
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,12,162,29,3
	.word	35728
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,12,177,29,3
	.word	36089
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,12,184,29,3
	.word	36428
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,12,205,29,3
	.word	35264
	.byte	19
	.byte	'Ifx_GTM_LCDCDCOUTSEL_Bits',0,12,212,29,3
	.word	119723
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL_Bits',0,12,235,29,3
	.word	77905
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL_Bits',0,12,251,29,3
	.word	78353
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR_Bits',0,12,134,30,3
	.word	116586
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT_Bits',0,12,145,30,3
	.word	116407
	.byte	19
	.byte	'Ifx_GTM_MCSTRIGOUTSEL_Bits',0,12,158,30,3
	.word	116176
	.byte	19
	.byte	'Ifx_GTM_MCS_AEM_DIS_Bits',0,12,176,30,3
	.word	38550
	.byte	19
	.byte	'Ifx_GTM_MCS_CAT_Bits',0,12,190,30,3
	.word	127724
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB_Bits',0,12,201,30,3
	.word	124469
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRG_Bits',0,12,231,30,3
	.word	124643
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL_Bits',0,12,250,30,3
	.word	124168
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,12,131,31,3
	.word	126563
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,12,140,31,3
	.word	126011
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,12,149,31,3
	.word	126178
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,12,156,31,3
	.word	126353
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,12,165,31,3
	.word	125849
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_MHB_Bits',0,12,172,31,3
	.word	125631
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC_Bits',0,12,179,31,3
	.word	125741
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R_Bits',0,12,186,31,3
	.word	124050
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_STRG_Bits',0,12,216,31,3
	.word	125137
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL_STAT_Bits',0,12,234,31,3
	.word	127146
	.byte	19
	.byte	'Ifx_GTM_MCS_CWT_Bits',0,12,248,31,3
	.word	127943
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR_Bits',0,12,134,32,3
	.word	128162
	.byte	19
	.byte	'Ifx_GTM_MCS_REG_PROT_Bits',0,12,148,32,3
	.word	126905
	.byte	19
	.byte	'Ifx_GTM_MCS_RESET_Bits',0,12,162,32,3
	.word	127503
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_MCS_Bits',0,12,176,32,3
	.word	44118
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_R0_Bits',0,12,213,32,3
	.word	42748
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_R1_Bits',0,12,250,32,3
	.word	43433
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS_Bits',0,12,156,33,3
	.word	42060
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ_INHCON_Bits',0,12,177,33,3
	.word	118476
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ_INLCON_Bits',0,12,198,33,3
	.word	118137
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ_INLEXTCON_Bits',0,12,219,33,3
	.word	118815
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON0_Bits',0,12,232,33,3
	.word	117121
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON1_Bits',0,12,245,33,3
	.word	117350
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON2_Bits',0,12,130,34,3
	.word	117579
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON3_Bits',0,12,143,34,3
	.word	117810
	.byte	19
	.byte	'Ifx_GTM_OCDS_OCS_Bits',0,12,153,34,3
	.word	113978
	.byte	19
	.byte	'Ifx_GTM_OCDS_ODA_Bits',0,12,160,34,3
	.word	113870
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU0T_Bits',0,12,169,34,3
	.word	112590
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU1T_Bits',0,12,178,34,3
	.word	112737
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU2T_Bits',0,12,187,34,3
	.word	112884
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU3T_Bits',0,12,196,34,3
	.word	113031
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTSC0_Bits',0,12,213,34,3
	.word	113410
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTSC1_Bits',0,12,223,34,3
	.word	113709
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTSS_Bits',0,12,236,34,3
	.word	113178
	.byte	19
	.byte	'Ifx_GTM_OUT_ATOM_Bits',0,12,245,34,3
	.word	39695
	.byte	19
	.byte	'Ifx_GTM_OUT_TOM_Bits',0,12,252,34,3
	.word	39577
	.byte	19
	.byte	'Ifx_GTM_PSI5OUTSEL_Bits',0,12,136,35,3
	.word	119331
	.byte	19
	.byte	'Ifx_GTM_PSI5SOUTSEL_Bits',0,12,149,35,3
	.word	119522
	.byte	19
	.byte	'Ifx_GTM_PSM_AFD_CH_BUF_ACC_Bits',0,12,156,35,3
	.word	84385
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_ENABLE_Bits',0,12,170,35,3
	.word	83856
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_F2A_CTRL_Bits',0,12,180,35,3
	.word	84107
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,12,187,35,3
	.word	83443
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_STR_CH_STR_CFG_Bits',0,12,196,35,3
	.word	83633
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_CTRL_Bits',0,12,206,35,3
	.word	84637
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_EIRQ_EN_Bits',0,12,216,35,3
	.word	86698
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_END_ADDR_Bits',0,12,223,35,3
	.word	84802
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_FILL_LEVEL_Bits',0,12,230,35,3
	.word	85458
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_EN_Bits',0,12,240,35,3
	.word	86009
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_FORCINT_Bits',0,12,250,35,3
	.word	86222
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_MODE_Bits',0,12,131,36,3
	.word	86428
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_NOTIFY_Bits',0,12,141,36,3
	.word	85820
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_LOWER_WM_Bits',0,12,148,36,3
	.word	85167
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_RD_PTR_Bits',0,12,155,36,3
	.word	85701
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_START_ADDR_Bits',0,12,162,36,3
	.word	84923
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_STATUS_Bits',0,12,172,36,3
	.word	85288
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_UPPER_WM_Bits',0,12,179,36,3
	.word	85046
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_WR_PTR_Bits',0,12,186,36,3
	.word	85582
	.byte	19
	.byte	'Ifx_GTM_RESET1_Bits',0,12,194,36,3
	.word	111703
	.byte	19
	.byte	'Ifx_GTM_RESET2_Bits',0,12,201,36,3
	.word	111827
	.byte	19
	.byte	'Ifx_GTM_RESET_CLR_Bits',0,12,208,36,3
	.word	111595
	.byte	19
	.byte	'Ifx_GTM_REV_Bits',0,12,220,36,3
	.word	34563
	.byte	19
	.byte	'Ifx_GTM_RST_Bits',0,12,229,36,3
	.word	34755
	.byte	19
	.byte	'Ifx_GTM_SPE_CMD_Bits',0,12,238,36,3
	.word	77502
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT_Bits',0,12,131,37,3
	.word	75069
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT2_Bits',0,12,139,37,3
	.word	77354
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN_Bits',0,12,150,37,3
	.word	76890
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN_Bits',0,12,161,37,3
	.word	76240
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,12,172,37,3
	.word	76468
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE_Bits',0,12,179,37,3
	.word	76686
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,12,190,37,3
	.word	76043
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL_Bits',0,12,197,37,3
	.word	75922
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT_Bits',0,12,204,37,3
	.word	75794
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT_Bits',0,12,225,37,3
	.word	75421
	.byte	19
	.byte	'Ifx_GTM_SPE_REV_CMP_Bits',0,12,232,37,3
	.word	77239
	.byte	19
	.byte	'Ifx_GTM_SPE_REV_CNT_Bits',0,12,239,37,3
	.word	77124
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,12,246,37,3
	.word	40685
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,12,254,37,3
	.word	40548
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,12,133,38,3
	.word	40935
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,12,141,38,3
	.word	40798
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,12,148,38,3
	.word	41185
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,12,156,38,3
	.word	41048
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_BASE_Bits',0,12,163,38,3
	.word	41454
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_BASE_CAPTURE_Bits',0,12,170,38,3
	.word	41690
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_BASE_MARK_Bits',0,12,177,38,3
	.word	41567
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_CTRL_Bits',0,12,186,38,3
	.word	41298
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,12,196,38,3
	.word	40372
	.byte	19
	.byte	'Ifx_GTM_TIMINSEL_Bits',0,12,209,38,3
	.word	114303
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,12,216,38,3
	.word	78863
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,12,223,38,3
	.word	79085
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,12,252,38,3
	.word	79809
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,12,131,39,3
	.word	78973
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,12,154,39,3
	.word	80358
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,12,166,39,3
	.word	81749
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,12,173,39,3
	.word	79693
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,12,180,39,3
	.word	79577
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,12,187,39,3
	.word	78653
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,12,194,39,3
	.word	78758
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,12,206,39,3
	.word	81052
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,12,218,39,3
	.word	81302
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,12,225,39,3
	.word	81539
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,12,237,39,3
	.word	80840
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,12,246,39,3
	.word	79190
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,12,131,40,3
	.word	79342
	.byte	19
	.byte	'Ifx_GTM_TIM_INP_VAL_Bits',0,12,140,40,3
	.word	82231
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,12,161,40,3
	.word	82378
	.byte	19
	.byte	'Ifx_GTM_TIM_RST_Bits',0,12,175,40,3
	.word	82730
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,12,182,40,3
	.word	27177
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,12,189,40,3
	.word	27287
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,12,196,40,3
	.word	27397
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,12,222,40,3
	.word	26475
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,12,230,40,3
	.word	27753
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,12,238,40,3
	.word	27900
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,12,245,40,3
	.word	28048
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,12,253,40,3
	.word	27616
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,12,132,41,3
	.word	26957
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,12,139,41,3
	.word	27067
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,12,146,41,3
	.word	27507
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_ACT_TB_Bits',0,12,155,41,3
	.word	28841
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_ENDIS_CTRL_Bits',0,12,169,41,3
	.word	29701
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_ENDIS_STAT_Bits',0,12,183,41,3
	.word	29988
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_FUPD_CTRL_Bits',0,12,204,41,3
	.word	28996
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_GLB_CTRL_Bits',0,12,227,41,3
	.word	28392
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_INT_TRIG_Bits',0,12,241,41,3
	.word	29427
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_OUTEN_CTRL_Bits',0,12,255,41,3
	.word	30275
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_OUTEN_STAT_Bits',0,12,141,42,3
	.word	30562
	.byte	19
	.byte	'Ifx_GTM_TOUTSEL_Bits',0,12,154,42,3
	.word	114526
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT_Bits',0,12,168,42,3
	.word	115824
	.byte	19
	.byte	'Ifx_GTM_ACCEN0',0,12,181,42,3
	.word	112461
	.byte	19
	.byte	'Ifx_GTM_ACCEN1',0,12,189,42,3
	.word	112550
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG_OUT0',0,12,197,42,3
	.word	115385
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG_OUT1',0,12,205,42,3
	.word	115546
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,12,213,42,3
	.word	35224
	.byte	19
	.byte	'Ifx_GTM_AEI_STA_XPT',0,12,221,42,3
	.word	37776
	.byte	19
	.byte	'Ifx_GTM_ARU_ACCESS',0,12,229,42,3
	.word	47988
	.byte	19
	.byte	'Ifx_GTM_ARU_CADDR',0,12,237,42,3
	.word	51295
	.byte	19
	.byte	'Ifx_GTM_ARU_CADDR_END',0,12,245,42,3
	.word	49864
	.byte	19
	.byte	'Ifx_GTM_ARU_CTRL',0,12,253,42,3
	.word	50033
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H',0,12,133,43,3
	.word	48099
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L',0,12,141,43,3
	.word	48210
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0',0,12,149,43,3
	.word	48325
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1',0,12,157,43,3
	.word	48672
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H',0,12,165,43,3
	.word	48441
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L',0,12,173,43,3
	.word	48557
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H',0,12,181,43,3
	.word	48788
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L',0,12,189,43,3
	.word	48904
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_CTRL',0,12,197,43,3
	.word	50184
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_RDADDR',0,12,205,43,3
	.word	51132
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_HIGH',0,12,213,43,3
	.word	50575
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_LOW',0,12,221,43,3
	.word	50367
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_SR_HIGH',0,12,229,43,3
	.word	50999
	.byte	19
	.byte	'Ifx_GTM_ARU_DYN_ROUTE_SR_LOW',0,12,237,43,3
	.word	50761
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN',0,12,245,43,3
	.word	49370
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT',0,12,253,43,3
	.word	49542
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE',0,12,133,44,3
	.word	49658
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY',0,12,141,44,3
	.word	49194
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB',0,12,149,44,3
	.word	17587
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL',0,12,157,44,3
	.word	17143
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT',0,12,165,44,3
	.word	17431
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL',0,12,173,44,3
	.word	18595
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL',0,12,181,44,3
	.word	16855
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG',0,12,189,44,3
	.word	18865
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL',0,12,197,44,3
	.word	17875
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT',0,12,205,44,3
	.word	18163
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0',0,12,213,44,3
	.word	15165
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1',0,12,221,44,3
	.word	15276
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0',0,12,229,44,3
	.word	15387
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL',0,12,237,44,3
	.word	11859
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN',0,12,245,44,3
	.word	15881
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT',0,12,253,44,3
	.word	16028
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE',0,12,133,45,3
	.word	16148
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY',0,12,141,45,3
	.word	15733
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR',0,12,149,45,3
	.word	11343
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMB',0,12,157,45,3
	.word	12415
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC',0,12,165,45,3
	.word	12970
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI',0,12,173,45,3
	.word	13537
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP',0,12,181,45,3
	.word	14152
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS',0,12,189,45,3
	.word	14741
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0',0,12,197,45,3
	.word	14943
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1',0,12,205,45,3
	.word	15054
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT',0,12,213,45,3
	.word	15595
	.byte	19
	.byte	'Ifx_GTM_AUX_IN_SRC_TIM',0,12,221,45,3
	.word	39321
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN',0,12,229,45,3
	.word	56068
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN',0,12,237,45,3
	.word	54978
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT',0,12,245,45,3
	.word	55344
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE',0,12,253,45,3
	.word	55460
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY',0,12,133,46,3
	.word	54578
	.byte	19
	.byte	'Ifx_GTM_BRC_RST',0,12,141,46,3
	.word	55654
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC_ADDR',0,12,149,46,3
	.word	53627
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC_DEST',0,12,157,46,3
	.word	54199
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE',0,12,165,46,3
	.word	38113
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,12,173,46,3
	.word	38321
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,12,181,46,3
	.word	38440
	.byte	19
	.byte	'Ifx_GTM_CANOUTSEL0',0,12,189,46,3
	.word	120249
	.byte	19
	.byte	'Ifx_GTM_CANOUTSEL1',0,12,197,46,3
	.word	120408
	.byte	19
	.byte	'Ifx_GTM_CCM_AEIM_STA',0,12,205,46,3
	.word	121089
	.byte	19
	.byte	'Ifx_GTM_CCM_ARP_CTRL',0,12,213,46,3
	.word	120614
	.byte	19
	.byte	'Ifx_GTM_CCM_ARP_PROT',0,12,221,46,3
	.word	120854
	.byte	19
	.byte	'Ifx_GTM_CCM_ATOM_OUT',0,12,229,46,3
	.word	122594
	.byte	19
	.byte	'Ifx_GTM_CCM_CFG',0,12,237,46,3
	.word	123481
	.byte	19
	.byte	'Ifx_GTM_CCM_CMU_CLK_CFG',0,12,245,46,3
	.word	123013
	.byte	19
	.byte	'Ifx_GTM_CCM_CMU_FXCLK_CFG',0,12,253,46,3
	.word	123136
	.byte	19
	.byte	'Ifx_GTM_CCM_EXT_CAP_EN',0,12,133,47,3
	.word	122311
	.byte	19
	.byte	'Ifx_GTM_CCM_HW_CONF',0,12,141,47,3
	.word	121677
	.byte	19
	.byte	'Ifx_GTM_CCM_PROT',0,12,149,47,3
	.word	123593
	.byte	19
	.byte	'Ifx_GTM_CCM_TIM_AUX_IN_SRC',0,12,157,47,3
	.word	122154
	.byte	19
	.byte	'Ifx_GTM_CCM_TOM_OUT',0,12,165,47,3
	.word	122424
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL1',0,12,173,47,3
	.word	21030
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL2',0,12,181,47,3
	.word	21661
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL2_SR',0,12,189,47,3
	.word	22391
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_CTRL3',0,12,197,47,3
	.word	23584
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_DTV',0,12,205,47,3
	.word	22797
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH_SR',0,12,213,47,3
	.word	23134
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CTRL',0,12,221,47,3
	.word	20445
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_PS_CTRL',0,12,229,47,3
	.word	22636
	.byte	19
	.byte	'Ifx_GTM_CFG',0,12,237,47,3
	.word	37648
	.byte	19
	.byte	'Ifx_GTM_CLC',0,12,245,47,3
	.word	111555
	.byte	19
	.byte	'Ifx_GTM_CLS_CLK_CFG',0,12,253,47,3
	.word	40323
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN',0,12,133,48,3
	.word	47747
	.byte	19
	.byte	'Ifx_GTM_CMP_EN',0,12,141,48,3
	.word	45049
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN',0,12,149,48,3
	.word	46235
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT',0,12,157,48,3
	.word	46843
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE',0,12,165,48,3
	.word	46959
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY',0,12,173,48,3
	.word	45560
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_CTRL',0,12,181,48,3
	.word	53306
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN',0,12,189,48,3
	.word	51950
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK__CTRL',0,12,197,48,3
	.word	52320
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,12,205,48,3
	.word	52606
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,12,213,48,3
	.word	52489
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,12,221,48,3
	.word	52790
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,12,229,48,3
	.word	52184
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,12,237,48,3
	.word	52067
	.byte	19
	.byte	'Ifx_GTM_CMU_GLB_CTRL',0,12,245,48,3
	.word	52958
	.byte	19
	.byte	'Ifx_GTM_CTRL',0,12,253,48,3
	.word	35089
	.byte	19
	.byte	'Ifx_GTM_DATAIN',0,12,133,49,3
	.word	117072
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB',0,12,141,49,3
	.word	104919
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA',0,12,149,49,3
	.word	89624
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1',0,12,157,49,3
	.word	99114
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2',0,12,165,49,3
	.word	99238
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1',0,12,173,49,3
	.word	95092
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2',0,12,181,49,3
	.word	95214
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S',0,12,189,49,3
	.word	104309
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2',0,12,205,49,3
	.word	89939
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS',0,12,213,49,3
	.word	90352
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3',0,12,221,49,3
	.word	90625
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3_EXT',0,12,229,49,3
	.word	106626
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_EXT',0,12,237,49,3
	.word	106485
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC',0,12,245,49,3
	.word	94730
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC_EXT',0,12,253,49,3
	.word	106121
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT',0,12,133,50,3
	.word	90145
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C',0,12,141,50,3
	.word	90488
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC',0,12,149,50,3
	.word	94538
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX',0,12,157,50,3
	.word	101722
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM',0,12,165,50,3
	.word	101966
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX',0,12,173,50,3
	.word	101608
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM',0,12,181,50,3
	.word	101844
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM_1',0,12,189,50,3
	.word	102743
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM_2',0,12,197,50,3
	.word	102863
	.byte	19
	.byte	'Ifx_GTM_DPLL_CSN_MAX',0,12,205,50,3
	.word	108852
	.byte	19
	.byte	'Ifx_GTM_DPLL_CSN_MIN',0,12,213,50,3
	.word	108736
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTN_MAX',0,12,221,50,3
	.word	108620
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTN_MIN',0,12,229,50,3
	.word	108504
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0',0,12,237,50,3
	.word	87583
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE',0,12,245,50,3
	.word	96400
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER',0,12,253,50,3
	.word	96163
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1',0,12,133,51,3
	.word	87993
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_11',0,12,141,51,3
	.word	105588
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_STATE',0,12,149,51,3
	.word	96904
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER',0,12,157,51,3
	.word	96625
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2',0,12,165,51,3
	.word	88367
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3',0,12,173,51,3
	.word	88753
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4',0,12,181,51,3
	.word	89143
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_5',0,12,189,51,3
	.word	89533
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_EXT',0,12,197,51,3
	.word	106274
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA',0,12,205,51,3
	.word	97325
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA',0,12,213,51,3
	.word	97596
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S',0,12,221,51,3
	.word	104429
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT',0,12,229,51,3
	.word	101042
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_START',0,12,237,51,3
	.word	107348
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT',0,12,253,51,3
	.word	100924
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_START',0,12,133,52,3
	.word	107221
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S',0,12,141,52,3
	.word	101380
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T',0,12,149,52,3
	.word	101154
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN',0,12,157,52,3
	.word	94104
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S',0,12,165,52,3
	.word	98314
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T',0,12,173,52,3
	.word	97963
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR',0,12,181,52,3
	.word	95912
	.byte	19
	.byte	'Ifx_GTM_DPLL_INCF1_OFFSET',0,12,189,52,3
	.word	106963
	.byte	19
	.byte	'Ifx_GTM_DPLL_INCF2_OFFSET',0,12,197,52,3
	.word	107094
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1',0,12,205,52,3
	.word	94231
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1_MASK',0,12,213,52,3
	.word	107838
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2',0,12,221,52,3
	.word	94349
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2_MASK',0,12,229,52,3
	.word	107968
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN',0,12,237,52,3
	.word	92486
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT',0,12,245,52,3
	.word	93138
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE',0,12,253,52,3
	.word	93255
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY',0,12,133,53,3
	.word	91755
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S',0,12,141,53,3
	.word	101494
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T',0,12,149,53,3
	.word	101268
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1',0,12,157,53,3
	.word	102490
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2',0,12,165,53,3
	.word	102623
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1',0,12,173,53,3
	.word	99368
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2',0,12,181,53,3
	.word	99498
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA',0,12,189,53,3
	.word	97478
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S',0,12,197,53,3
	.word	103917
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR',0,12,205,53,3
	.word	99935
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD',0,12,213,53,3
	.word	100086
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T',0,12,221,53,3
	.word	103782
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR',0,12,229,53,3
	.word	99641
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD',0,12,237,53,3
	.word	99792
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT',0,12,245,53,3
	.word	91216
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC',0,12,253,53,3
	.word	91100
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_EXT1',0,12,133,54,3
	.word	108166
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_EXT2',0,12,141,54,3
	.word	108388
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC',0,12,149,54,3
	.word	90874
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW',0,12,157,54,3
	.word	89790
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT',0,12,165,54,3
	.word	102347
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA',0,12,173,54,3
	.word	97207
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC',0,12,181,54,3
	.word	104680
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC',0,12,189,54,3
	.word	103191
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM',0,12,197,54,3
	.word	103529
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_OLD',0,12,205,54,3
	.word	103647
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC',0,12,213,54,3
	.word	103081
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM',0,12,221,54,3
	.word	103301
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_OLD',0,12,229,54,3
	.word	103419
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT',0,12,237,54,3
	.word	102971
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI',0,12,245,54,3
	.word	97099
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX',0,12,253,54,3
	.word	100318
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM',0,12,133,55,3
	.word	100566
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX',0,12,141,55,3
	.word	100202
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM',0,12,149,55,3
	.word	100442
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S',0,12,157,55,3
	.word	104029
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT',0,12,165,55,3
	.word	100806
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT',0,12,181,55,3
	.word	100686
	.byte	19
	.byte	'Ifx_GTM_DPLL_SIDEL',0,12,189,55,3
	.word	105925
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR',0,12,197,55,3
	.word	102226
	.byte	19
	.byte	'Ifx_GTM_DPLL_STA',0,12,205,55,3
	.word	106832
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS',0,12,213,55,3
	.word	95795
	.byte	19
	.byte	'Ifx_GTM_DPLL_STA_FLAG',0,12,221,55,3
	.word	107708
	.byte	19
	.byte	'Ifx_GTM_DPLL_STA_MASK',0,12,229,55,3
	.word	107494
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S',0,12,237,55,3
	.word	94970
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T',0,12,245,55,3
	.word	94850
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA',0,12,253,55,3
	.word	98580
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI',0,12,133,56,3
	.word	98447
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL',0,12,141,56,3
	.word	98692
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL2',0,12,149,56,3
	.word	105701
	.byte	19
	.byte	'Ifx_GTM_DPLL_TIDEL',0,12,157,56,3
	.word	105813
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR',0,12,165,56,3
	.word	102096
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV',0,12,173,56,3
	.word	98844
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S',0,12,181,56,3
	.word	98990
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC',0,12,189,56,3
	.word	104560
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S',0,12,197,56,3
	.word	104151
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S',0,12,213,56,3
	.word	98077
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_OLD',0,12,221,56,3
	.word	98199
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T',0,12,229,56,3
	.word	97722
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_OLD',0,12,237,56,3
	.word	97846
	.byte	19
	.byte	'Ifx_GTM_DSADCINSEL',0,12,245,56,3
	.word	114908
	.byte	19
	.byte	'Ifx_GTM_DSADC_OUTSEL0',0,12,253,56,3
	.word	115111
	.byte	19
	.byte	'Ifx_GTM_DTMAUXINSEL',0,12,133,57,3
	.word	120049
	.byte	19
	.byte	'Ifx_GTM_DXINCON',0,12,141,57,3
	.word	116988
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON',0,12,149,57,3
	.word	115784
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN',0,12,157,57,3
	.word	36955
	.byte	19
	.byte	'Ifx_GTM_EXT_CAP_EN',0,12,165,57,3
	.word	39528
	.byte	19
	.byte	'Ifx_GTM_HW_CONF',0,12,173,57,3
	.word	37539
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0',0,12,181,57,3
	.word	65846
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,12,189,57,3
	.word	66721
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI2',0,12,197,57,3
	.word	67596
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3',0,12,205,57,3
	.word	68471
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI4',0,12,213,57,3
	.word	69346
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI_MCS',0,12,221,57,3
	.word	69647
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI_PSM',0,12,229,57,3
	.word	70414
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI_SPE',0,12,237,57,3
	.word	70649
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_ATOM',0,12,245,57,3
	.word	73391
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_MCS',0,12,253,57,3
	.word	71488
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_PSM',0,12,133,58,3
	.word	72221
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_SPE',0,12,141,58,3
	.word	72449
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CI_TOM',0,12,149,58,3
	.word	74321
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,12,157,58,3
	.word	65124
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_CLS',0,12,165,58,3
	.word	71196
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R0',0,12,173,58,3
	.word	56902
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R1',0,12,181,58,3
	.word	57665
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R10',0,12,189,58,3
	.word	64482
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R2',0,12,197,58,3
	.word	58506
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R3',0,12,205,58,3
	.word	59347
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R4',0,12,213,58,3
	.word	60188
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R5',0,12,221,58,3
	.word	61029
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R6',0,12,229,58,3
	.word	61882
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R7',0,12,237,58,3
	.word	62735
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_R9',0,12,245,58,3
	.word	63608
	.byte	19
	.byte	'Ifx_GTM_INTOUT',0,12,253,58,3
	.word	116127
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN',0,12,133,59,3
	.word	36049
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT',0,12,141,59,3
	.word	36388
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE',0,12,149,59,3
	.word	36500
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,12,157,59,3
	.word	35688
	.byte	19
	.byte	'Ifx_GTM_LCDCDCOUTSEL',0,12,165,59,3
	.word	119794
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL',0,12,173,59,3
	.word	78304
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL',0,12,181,59,3
	.word	78602
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR',0,12,189,59,3
	.word	116719
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT',0,12,197,59,3
	.word	116546
	.byte	19
	.byte	'Ifx_GTM_MCSTRIGOUTSEL',0,12,205,59,3
	.word	116367
	.byte	19
	.byte	'Ifx_GTM_MCS_AEM_DIS',0,12,213,59,3
	.word	38848
	.byte	19
	.byte	'Ifx_GTM_MCS_CAT',0,12,221,59,3
	.word	127903
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB',0,12,229,59,3
	.word	124603
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRG',0,12,237,59,3
	.word	125097
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL',0,12,245,59,3
	.word	124429
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN',0,12,253,59,3
	.word	126695
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN',0,12,133,60,3
	.word	126138
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT',0,12,141,60,3
	.word	126313
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE',0,12,149,60,3
	.word	126432
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY',0,12,157,60,3
	.word	125971
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_MHB',0,12,165,60,3
	.word	125701
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC',0,12,173,60,3
	.word	125809
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R',0,12,181,60,3
	.word	124119
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_STRG',0,12,189,60,3
	.word	125591
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL_STAT',0,12,197,60,3
	.word	127463
	.byte	19
	.byte	'Ifx_GTM_MCS_CWT',0,12,205,60,3
	.word	128122
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR',0,12,213,60,3
	.word	128341
	.byte	19
	.byte	'Ifx_GTM_MCS_REG_PROT',0,12,221,60,3
	.word	127106
	.byte	19
	.byte	'Ifx_GTM_MCS_RESET',0,12,229,60,3
	.word	127684
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_MCS',0,12,237,60,3
	.word	44314
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_R0',0,12,245,60,3
	.word	43393
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_R1',0,12,253,60,3
	.word	44078
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS',0,12,133,61,3
	.word	42708
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ_INHCON',0,12,141,61,3
	.word	118775
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ_INLCON',0,12,149,61,3
	.word	118436
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ_INLEXTCON',0,12,157,61,3
	.word	119117
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON0',0,12,165,61,3
	.word	117310
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON1',0,12,173,61,3
	.word	117539
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON2',0,12,181,61,3
	.word	117770
	.byte	19
	.byte	'Ifx_GTM_MSC_SET_CON3',0,12,189,61,3
	.word	118003
	.byte	19
	.byte	'Ifx_GTM_OCDS_OCS',0,12,197,61,3
	.word	114103
	.byte	19
	.byte	'Ifx_GTM_OCDS_ODA',0,12,205,61,3
	.word	113938
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU0T',0,12,213,61,3
	.word	112697
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU1T',0,12,221,61,3
	.word	112844
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU2T',0,12,229,61,3
	.word	112991
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTBU3T',0,12,237,61,3
	.word	113138
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTSC0',0,12,245,61,3
	.word	113669
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTSC1',0,12,253,61,3
	.word	113830
	.byte	19
	.byte	'Ifx_GTM_OCDS_OTSS',0,12,133,62,3
	.word	113370
	.byte	19
	.byte	'Ifx_GTM_OUT_ATOM',0,12,141,62,3
	.word	39821
	.byte	19
	.byte	'Ifx_GTM_OUT_TOM',0,12,149,62,3
	.word	39646
	.byte	19
	.byte	'Ifx_GTM_PSI5OUTSEL',0,12,157,62,3
	.word	119482
	.byte	19
	.byte	'Ifx_GTM_PSI5SOUTSEL',0,12,165,62,3
	.word	119683
	.byte	19
	.byte	'Ifx_GTM_PSM_AFD_CH_BUF_ACC',0,12,173,62,3
	.word	84464
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_ENABLE',0,12,181,62,3
	.word	84067
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_F2A_CTRL',0,12,189,62,3
	.word	84251
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_RD_CH_ARU_RD_FIFO',0,12,197,62,3
	.word	83528
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_STR_CH_STR_CFG',0,12,205,62,3
	.word	83754
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_CTRL',0,12,213,62,3
	.word	84762
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_EIRQ_EN',0,12,221,62,3
	.word	86876
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_END_ADDR',0,12,229,62,3
	.word	84883
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_FILL_LEVEL',0,12,237,62,3
	.word	85542
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_EN',0,12,245,62,3
	.word	86182
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_FORCINT',0,12,253,62,3
	.word	86388
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_MODE',0,12,133,63,3
	.word	86562
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ_NOTIFY',0,12,141,63,3
	.word	85969
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_LOWER_WM',0,12,149,63,3
	.word	85248
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_RD_PTR',0,12,157,63,3
	.word	85780
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_START_ADDR',0,12,165,63,3
	.word	85006
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_STATUS',0,12,173,63,3
	.word	85418
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_UPPER_WM',0,12,181,63,3
	.word	85127
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_WR_PTR',0,12,189,63,3
	.word	85661
	.byte	19
	.byte	'Ifx_GTM_RESET1',0,12,197,63,3
	.word	111787
	.byte	19
	.byte	'Ifx_GTM_RESET2',0,12,205,63,3
	.word	111892
	.byte	19
	.byte	'Ifx_GTM_RESET_CLR',0,12,213,63,3
	.word	111663
	.byte	19
	.byte	'Ifx_GTM_REV',0,12,221,63,3
	.word	34715
	.byte	19
	.byte	'Ifx_GTM_RST',0,12,229,63,3
	.word	34876
	.byte	19
	.byte	'Ifx_GTM_SPE_CMD',0,12,237,63,3
	.word	77624
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT',0,12,245,63,3
	.word	75381
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT2',0,12,253,63,3
	.word	77462
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN',0,12,133,64,3
	.word	77084
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN',0,12,141,64,3
	.word	76428
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT',0,12,149,64,3
	.word	76646
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE',0,12,157,64,3
	.word	76762
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY',0,12,165,64,3
	.word	76200
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL',0,12,173,64,3
	.word	76003
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT',0,12,181,64,3
	.word	75873
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT',0,12,189,64,3
	.word	75754
	.byte	19
	.byte	'Ifx_GTM_SPE_REV_CMP',0,12,197,64,3
	.word	77314
	.byte	19
	.byte	'Ifx_GTM_SPE_REV_CNT',0,12,205,64,3
	.word	77199
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,12,213,64,3
	.word	40758
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,12,221,64,3
	.word	40645
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,12,229,64,3
	.word	41008
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,12,237,64,3
	.word	40895
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,12,245,64,3
	.word	41258
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,12,253,64,3
	.word	41145
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_BASE',0,12,133,65,3
	.word	41527
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_BASE_CAPTURE',0,12,141,65,3
	.word	41779
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_BASE_MARK',0,12,149,65,3
	.word	41650
	.byte	19
	.byte	'Ifx_GTM_TBU_CH3_CTRL',0,12,157,65,3
	.word	41414
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN',0,12,165,65,3
	.word	40508
	.byte	19
	.byte	'Ifx_GTM_TIMINSEL',0,12,173,65,3
	.word	114477
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT',0,12,181,65,3
	.word	78933
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,12,189,65,3
	.word	79150
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,12,197,65,3
	.word	80318
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,12,205,65,3
	.word	79045
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,12,213,65,3
	.word	80800
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,12,221,65,3
	.word	81966
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,12,229,65,3
	.word	79769
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,12,237,65,3
	.word	79653
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,12,245,65,3
	.word	78718
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,12,253,65,3
	.word	78823
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,12,133,66,3
	.word	81262
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,12,141,66,3
	.word	81499
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,12,149,66,3
	.word	81618
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,12,157,66,3
	.word	81012
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,12,165,66,3
	.word	79302
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,12,173,66,3
	.word	79537
	.byte	19
	.byte	'Ifx_GTM_TIM_INP_VAL',0,12,181,66,3
	.word	82338
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC',0,12,189,66,3
	.word	82690
	.byte	19
	.byte	'Ifx_GTM_TIM_RST',0,12,197,66,3
	.word	82933
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0',0,12,205,66,3
	.word	27247
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1',0,12,213,66,3
	.word	27357
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0',0,12,221,66,3
	.word	27467
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,12,229,66,3
	.word	26917
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,12,237,66,3
	.word	27860
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,12,245,66,3
	.word	28008
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,12,253,66,3
	.word	28127
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,12,133,67,3
	.word	27713
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0',0,12,141,67,3
	.word	27027
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1',0,12,149,67,3
	.word	27137
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT',0,12,157,67,3
	.word	27576
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_ACT_TB',0,12,165,67,3
	.word	28956
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_ENDIS_CTRL',0,12,173,67,3
	.word	29948
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_ENDIS_STAT',0,12,181,67,3
	.word	30235
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_FUPD_CTRL',0,12,189,67,3
	.word	29387
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_GLB_CTRL',0,12,197,67,3
	.word	28801
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_INT_TRIG',0,12,205,67,3
	.word	29656
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_OUTEN_CTRL',0,12,213,67,3
	.word	30522
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC_OUTEN_STAT',0,12,221,67,3
	.word	30809
	.byte	19
	.byte	'Ifx_GTM_TOUTSEL',0,12,229,67,3
	.word	114683
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT',0,12,237,67,3
	.word	116012
	.byte	10
	.word	36540
	.byte	19
	.byte	'Ifx_GTM_IRQ',0,12,255,67,3
	.word	196662
	.byte	10
	.word	38480
	.byte	19
	.byte	'Ifx_GTM_BRIDGE',0,12,147,68,3
	.word	196688
	.byte	10
	.word	39370
	.byte	19
	.byte	'Ifx_GTM_AUX_IN_SRC',0,12,165,68,3
	.word	196717
	.byte	10
	.word	39861
	.byte	19
	.byte	'Ifx_GTM_OUT',0,12,188,68,3
	.word	196750
	.byte	10
	.word	41819
	.byte	19
	.byte	'Ifx_GTM_TBU',0,12,216,68,3
	.word	196776
	.byte	10
	.word	44363
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY',0,12,236,68,3
	.word	196802
	.byte	10
	.word	44434
	.byte	19
	.byte	'Ifx_GTM_MON',0,12,128,69,3
	.word	196837
	.byte	10
	.word	46999
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ',0,12,149,69,3
	.word	196863
	.byte	10
	.word	47787
	.byte	19
	.byte	'Ifx_GTM_CMP',0,12,169,69,3
	.word	196893
	.byte	10
	.word	48944
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG',0,12,192,69,3
	.word	196919
	.byte	10
	.word	49698
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ',0,12,213,69,3
	.word	196949
	.byte	10
	.word	51335
	.byte	19
	.byte	'Ifx_GTM_ARU',0,12,246,69,3
	.word	196979
	.byte	10
	.word	52360
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK',0,12,136,70,3
	.word	197005
	.byte	10
	.word	52646
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK',0,12,155,70,3
	.word	197035
	.byte	10
	.word	52830
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK',0,12,173,70,3
	.word	197066
	.byte	10
	.word	53346
	.byte	19
	.byte	'Ifx_GTM_CMU',0,12,198,70,3
	.word	197098
	.byte	10
	.word	54239
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC',0,12,217,70,3
	.word	197124
	.byte	10
	.word	55500
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ',0,12,238,70,3
	.word	197154
	.byte	10
	.word	56108
	.byte	19
	.byte	'Ifx_GTM_BRC',0,12,131,71,3
	.word	197184
	.byte	10
	.word	74370
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG',0,12,185,71,3
	.word	197210
	.byte	10
	.word	75028
	.byte	19
	.byte	'Ifx_GTM_ICM',0,12,203,71,3
	.word	197241
	.byte	10
	.word	76802
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ',0,12,224,71,3
	.word	197267
	.byte	10
	.word	77673
	.byte	19
	.byte	'Ifx_GTM_SPE',0,12,252,71,3
	.word	197297
	.byte	10
	.word	81658
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ',0,12,145,72,3
	.word	197323
	.byte	10
	.word	82006
	.byte	19
	.byte	'Ifx_GTM_TIM_CH',0,12,175,72,3
	.word	197356
	.byte	10
	.word	83028
	.byte	19
	.byte	'Ifx_GTM_TIM',0,12,211,72,3
	.word	197385
	.byte	10
	.word	28167
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ',0,12,232,72,3
	.word	197411
	.byte	10
	.word	28258
	.byte	19
	.byte	'Ifx_GTM_TOM_CH',0,12,129,73,3
	.word	197444
	.byte	10
	.word	30930
	.byte	19
	.byte	'Ifx_GTM_TOM',0,12,194,73,3
	.word	197473
	.byte	10
	.word	83568
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_RD_CH',0,12,212,73,3
	.word	197499
	.byte	10
	.word	83794
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A_STR_CH',0,12,230,73,3
	.word	197535
	.byte	10
	.word	84291
	.byte	19
	.byte	'Ifx_GTM_PSM_F2A',0,12,251,73,3
	.word	197572
	.byte	10
	.word	84504
	.byte	19
	.byte	'Ifx_GTM_PSM_AFD_CH',0,12,142,74,3
	.word	197602
	.byte	10
	.word	84583
	.byte	19
	.byte	'Ifx_GTM_PSM_AFD',0,12,160,74,3
	.word	197635
	.byte	10
	.word	86602
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH_IRQ',0,12,181,74,3
	.word	197665
	.byte	10
	.word	86916
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO_CH',0,12,210,74,3
	.word	197703
	.byte	10
	.word	87166
	.byte	19
	.byte	'Ifx_GTM_PSM_FIFO',0,12,228,74,3
	.word	197737
	.byte	10
	.word	87221
	.byte	19
	.byte	'Ifx_GTM_PSM',0,12,251,74,3
	.word	197768
	.byte	10
	.word	93295
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ',0,12,145,75,3
	.word	197794
	.byte	10
	.word	108925
	.byte	19
	.byte	'Ifx_GTM_DPLL',0,12,167,76,3
	.word	197825
	.byte	10
	.word	114143
	.byte	19
	.byte	'Ifx_GTM_OCDS',0,12,212,76,3
	.word	197852
	.byte	10
	.word	115151
	.byte	19
	.byte	'Ifx_GTM_DSADC',0,12,231,76,3
	.word	197879
	.byte	10
	.word	115586
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG',0,12,250,76,3
	.word	197907
	.byte	10
	.word	118043
	.byte	19
	.byte	'Ifx_GTM_MSC_SET',0,12,143,77,3
	.word	197937
	.byte	10
	.word	119157
	.byte	19
	.byte	'Ifx_GTM_MSC_MSCQ',0,12,163,77,3
	.word	197967
	.byte	10
	.word	119247
	.byte	19
	.byte	'Ifx_GTM_MSC',0,12,183,77,3
	.word	197998
	.byte	10
	.word	120894
	.byte	19
	.byte	'Ifx_GTM_CCM_ARP',0,12,202,77,3
	.word	198024
	.byte	10
	.word	123633
	.byte	19
	.byte	'Ifx_GTM_CCM',0,12,231,77,3
	.word	198054
	.byte	10
	.word	22837
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM_CH',0,12,249,77,3
	.word	198080
	.byte	10
	.word	23633
	.byte	19
	.byte	'Ifx_GTM_CDTM_DTM',0,12,147,78,3
	.word	198114
	.byte	10
	.word	123936
	.byte	19
	.byte	'Ifx_GTM_CDTM',0,12,166,78,3
	.word	198145
	.byte	10
	.word	16188
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ',0,12,187,78,3
	.word	198172
	.byte	10
	.word	16280
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH',0,12,221,78,3
	.word	198206
	.byte	10
	.word	18914
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC',0,12,247,78,3
	.word	198236
	.byte	10
	.word	19171
	.byte	19
	.byte	'Ifx_GTM_ATOM',0,12,153,79,3
	.word	198267
	.byte	10
	.word	126472
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ',0,12,174,79,3
	.word	198294
	.byte	10
	.word	126735
	.byte	19
	.byte	'Ifx_GTM_MCS_CH',0,12,201,79,3
	.word	198327
	.byte	10
	.word	128436
	.byte	19
	.byte	'Ifx_GTM_MCS',0,12,241,79,3
	.word	198356
	.byte	10
	.word	128891
	.byte	19
	.byte	'Ifx_GTM',0,12,220,80,3
	.word	198382
	.byte	10
	.word	32957
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC',0,13,233,1,40
	.word	198404
	.byte	19
	.byte	'IfxGtm_Atom',0,13,251,1,3
	.word	24547
	.byte	19
	.byte	'IfxGtm_Atom_Ch',0,13,138,2,3
	.word	19509
	.byte	19
	.byte	'IfxGtm_Cdtm',0,13,152,2,3
	.word	24409
	.byte	19
	.byte	'IfxGtm_Dtm',0,13,185,2,3
	.word	24702
	.byte	19
	.byte	'IfxGtm_Dtm_Ch',0,13,196,2,3
	.word	24040
	.byte	17,13,254,2,9,1,18
	.byte	'IfxGtm_Tim_0',0,0,18
	.byte	'IfxGtm_Tim_1',0,1,18
	.byte	'IfxGtm_Tim_2',0,2,18
	.byte	'IfxGtm_Tim_3',0,3,18
	.byte	'IfxGtm_Tim_4',0,4,18
	.byte	'IfxGtm_Tim_5',0,5,0,19
	.byte	'IfxGtm_Tim',0,13,134,3,3
	.word	198543
	.byte	17,13,138,3,9,1,18
	.byte	'IfxGtm_Tim_Ch_0',0,0,18
	.byte	'IfxGtm_Tim_Ch_1',0,1,18
	.byte	'IfxGtm_Tim_Ch_2',0,2,18
	.byte	'IfxGtm_Tim_Ch_3',0,3,18
	.byte	'IfxGtm_Tim_Ch_4',0,4,18
	.byte	'IfxGtm_Tim_Ch_5',0,5,18
	.byte	'IfxGtm_Tim_Ch_6',0,6,18
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,19
	.byte	'IfxGtm_Tim_Ch',0,13,148,3,3
	.word	198660
	.byte	19
	.byte	'IfxGtm_Tom',0,13,157,3,3
	.word	33606
	.byte	19
	.byte	'IfxGtm_Tom_Ch',0,13,180,3,3
	.word	31942
	.byte	15,6
	.word	24409
	.byte	16,5,0,25
	.word	198877
	.byte	39
	.byte	'IfxGtm_dtmAtom_map',0,13,236,3,34
	.word	198886
	.byte	1,1,17,32,64,9,1,18
	.byte	'IfxGtm_IrqMode_level',0,0,18
	.byte	'IfxGtm_IrqMode_pulse',0,1,18
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,18
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,19
	.byte	'IfxGtm_IrqMode',0,32,70,3
	.word	198921
	.byte	17,32,74,9,1,18
	.byte	'IfxGtm_SuspendMode_none',0,0,18
	.byte	'IfxGtm_SuspendMode_hard',0,1,18
	.byte	'IfxGtm_SuspendMode_soft',0,2,0,19
	.byte	'IfxGtm_SuspendMode',0,32,79,3
	.word	199054
	.byte	17,33,66,9,1,18
	.byte	'IfxGtm_Tbu_Ts_0',0,0,18
	.byte	'IfxGtm_Tbu_Ts_1',0,1,18
	.byte	'IfxGtm_Tbu_Ts_2',0,2,18
	.byte	'IfxGtm_Tbu_Ts_3',0,3,0,19
	.byte	'IfxGtm_Tbu_Ts',0,33,72,3
	.word	199165
	.byte	19
	.byte	'IfxGtm_Cmu_Clk',0,24,74,3
	.word	132609
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ClkSrc',0,20,91,3
	.word	26273
	.byte	19
	.byte	'IfxGtm_Tom_Ch_OutputTrigger',0,20,99,3
	.word	32781
	.byte	19
	.byte	'IfxGtm_Tom_Ch_ResetEvent',0,20,107,3
	.word	32531
	.byte	17,34,71,9,1,18
	.byte	'IfxGtm_Tim_CntsSel_cntReg',0,0,18
	.byte	'IfxGtm_Tim_CntsSel_tbuTs0',0,1,0,19
	.byte	'IfxGtm_Tim_CntsSel',0,34,75,3
	.word	199386
	.byte	17,34,79,9,1,18
	.byte	'IfxGtm_Tim_FilterCounter_upDown',0,0,18
	.byte	'IfxGtm_Tim_FilterCounter_hold',0,1,0,19
	.byte	'IfxGtm_Tim_FilterCounter',0,34,83,3
	.word	199475
	.byte	17,34,87,9,1,18
	.byte	'IfxGtm_Tim_FilterCounterFreqSel_cmuClk0',0,0,18
	.byte	'IfxGtm_Tim_FilterCounterFreqSel_cmuClk1',0,1,18
	.byte	'IfxGtm_Tim_FilterCounterFreqSel_cmuClk6',0,2,18
	.byte	'IfxGtm_Tim_FilterCounterFreqSel_cmuClk7',0,3,0,19
	.byte	'IfxGtm_Tim_FilterCounterFreqSel',0,34,93,3
	.word	199580
	.byte	17,34,97,9,1,18
	.byte	'IfxGtm_Tim_FilterMode_immediateEdgePropagation',0,0,18
	.byte	'IfxGtm_Tim_FilterMode_individualDeglitchTime',0,1,0,19
	.byte	'IfxGtm_Tim_FilterMode',0,34,101,3
	.word	199794
	.byte	17,34,103,9,1,18
	.byte	'IfxGtm_Tim_GprSel_tbuTs0',0,0,18
	.byte	'IfxGtm_Tim_GprSel_tbuTs1',0,1,18
	.byte	'IfxGtm_Tim_GprSel_tbuTs2',0,2,18
	.byte	'IfxGtm_Tim_GprSel_cnts',0,3,0,19
	.byte	'IfxGtm_Tim_GprSel',0,34,109,3
	.word	199926
	.byte	17,34,126,9,1,18
	.byte	'IfxGtm_Tim_IrqType_newVal',0,0,18
	.byte	'IfxGtm_Tim_IrqType_ecntOverflow',0,1,18
	.byte	'IfxGtm_Tim_IrqType_cntOverflow',0,2,18
	.byte	'IfxGtm_Tim_IrqType_gprOverflow',0,3,18
	.byte	'IfxGtm_Tim_IrqType_timeoutDetect',0,4,18
	.byte	'IfxGtm_Tim_IrqType_glitchDetect',0,5,0,19
	.byte	'IfxGtm_Tim_IrqType',0,34,134,1,3
	.word	200064
	.byte	17,34,136,1,9,1,18
	.byte	'IfxGtm_Tim_Mode_pwmMeasurement',0,0,18
	.byte	'IfxGtm_Tim_Mode_pulseIntegration',0,1,18
	.byte	'IfxGtm_Tim_Mode_inputEvent',0,2,18
	.byte	'IfxGtm_Tim_Mode_inputPrescaler',0,3,18
	.byte	'IfxGtm_Tim_Mode_bitCompression',0,4,0,19
	.byte	'IfxGtm_Tim_Mode',0,34,143,1,3
	.word	200295
	.byte	17,34,147,1,9,1,18
	.byte	'IfxGtm_Tim_Timeout_disabled',0,0,18
	.byte	'IfxGtm_Tim_Timeout_risingEdge',0,1,18
	.byte	'IfxGtm_Tim_Timeout_fallingEdge',0,2,18
	.byte	'IfxGtm_Tim_Timeout_bothEdge',0,3,0,19
	.byte	'IfxGtm_Tim_Timeout',0,34,153,1,3
	.word	200490
	.byte	31,34,205,1,9,2,14
	.byte	'mode',0
	.word	537
	.byte	1,2,35,0,14
	.byte	'value',0
	.word	537
	.byte	1,2,35,1,0,19
	.byte	'IfxGtm_Tim_InputSourceSelect',0,34,213,1,3
	.word	200650
	.byte	17,21,59,9,1,18
	.byte	'IfxGtm_ChXSel_a',0,0,18
	.byte	'IfxGtm_ChXSel_b',0,1,18
	.byte	'IfxGtm_ChXSel_c',0,2,18
	.byte	'IfxGtm_ChXSel_d',0,3,18
	.byte	'IfxGtm_ChXSel_e',0,4,18
	.byte	'IfxGtm_ChXSel_f',0,5,18
	.byte	'IfxGtm_ChXSel_g',0,6,18
	.byte	'IfxGtm_ChXSel_h',0,7,18
	.byte	'IfxGtm_ChXSel_i',0,8,18
	.byte	'IfxGtm_ChXSel_j',0,9,18
	.byte	'IfxGtm_ChXSel_k',0,10,18
	.byte	'IfxGtm_ChXSel_l',0,11,18
	.byte	'IfxGtm_ChXSel_m',0,12,18
	.byte	'IfxGtm_ChXSel_n',0,13,18
	.byte	'IfxGtm_ChXSel_o',0,14,18
	.byte	'IfxGtm_ChXSel_p',0,15,0,19
	.byte	'IfxGtm_ChXSel',0,21,80,3
	.word	200724
	.byte	19
	.byte	'IfxGtm_ToutSel',0,21,98,3
	.word	33658
	.byte	31,21,110,15,20,14
	.byte	'atom',0
	.word	24547
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	19509
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	33658
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	9855
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	33892
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	33931
	.byte	1,2,35,16,0,25
	.word	201063
	.byte	19
	.byte	'IfxGtm_Atom_ToutMap',0,21,118,3
	.word	201161
	.byte	25
	.word	34148
	.byte	19
	.byte	'IfxGtm_Tom_ToutMap',0,21,132,1,3
	.word	201194
	.byte	11
	.byte	'_Ifx_CPU_A_Bits',0,35,68,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_A_Bits',0,35,71,3
	.word	201227
	.byte	11
	.byte	'_Ifx_CPU_BIV_Bits',0,35,74,16,4,12
	.byte	'VSS',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'BIV',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_BIV_Bits',0,35,78,3
	.word	201288
	.byte	11
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,35,81,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'OMASK',0,4
	.word	936
	.byte	12,15,2,35,0,12
	.byte	'ONE',0,4
	.word	936
	.byte	11,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,19
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,35,87,3
	.word	201367
	.byte	11
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,35,90,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'TBASE',0,4
	.word	936
	.byte	23,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,19
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,35,95,3
	.word	201505
	.byte	11
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,35,98,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'OBASE',0,4
	.word	936
	.byte	17,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'OMEM',0,4
	.word	936
	.byte	4,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	3,1,2,35,0,12
	.byte	'OVEN',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,35,106,3
	.word	201626
	.byte	11
	.byte	'_Ifx_CPU_BTV_Bits',0,35,109,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'BTV',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_BTV_Bits',0,35,113,3
	.word	201802
	.byte	11
	.byte	'_Ifx_CPU_CCNT_Bits',0,35,116,16,4,12
	.byte	'COUNTVALUE',0,4
	.word	936
	.byte	31,1,2,35,0,12
	.byte	'SOVF',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_CCNT_Bits',0,35,120,3
	.word	201888
	.byte	11
	.byte	'_Ifx_CPU_CCTRL_Bits',0,35,123,16,4,12
	.byte	'CM',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CE',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'M1',0,4
	.word	936
	.byte	3,27,2,35,0,12
	.byte	'M2',0,4
	.word	936
	.byte	3,24,2,35,0,12
	.byte	'M3',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_CPU_CCTRL_Bits',0,35,131,1,3
	.word	201977
	.byte	11
	.byte	'_Ifx_CPU_COMPAT_Bits',0,35,134,1,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'RM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SP',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_COMPAT_Bits',0,35,140,1,3
	.word	202124
	.byte	11
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,35,143,1,16,4,12
	.byte	'CORE_ID',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_CPU_CORE_ID_Bits',0,35,147,1,3
	.word	202253
	.byte	11
	.byte	'_Ifx_CPU_CPR_L_Bits',0,35,150,1,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'LOWBND',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_CPR_L_Bits',0,35,154,1,3
	.word	202353
	.byte	11
	.byte	'_Ifx_CPU_CPR_U_Bits',0,35,157,1,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'UPPBND',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_CPR_U_Bits',0,35,161,1,3
	.word	202448
	.byte	11
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,35,164,1,16,4,12
	.byte	'MOD_REV',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'MOD_32B',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'MOD',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_CPU_ID_Bits',0,35,169,1,3
	.word	202543
	.byte	11
	.byte	'_Ifx_CPU_CPXE_Bits',0,35,172,1,16,4,12
	.byte	'XE_N',0,4
	.word	936
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,19
	.byte	'Ifx_CPU_CPXE_Bits',0,35,176,1,3
	.word	202653
	.byte	11
	.byte	'_Ifx_CPU_CREVT_Bits',0,35,179,1,16,4,12
	.byte	'EVTA',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_CPU_CREVT_Bits',0,35,187,1,3
	.word	202745
	.byte	11
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,35,190,1,16,4,12
	.byte	'CID',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_CPU_CUS_ID_Bits',0,35,194,1,3
	.word	202899
	.byte	11
	.byte	'_Ifx_CPU_D_Bits',0,35,197,1,16,4,12
	.byte	'DATA',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_D_Bits',0,35,200,1,3
	.word	202993
	.byte	11
	.byte	'_Ifx_CPU_DATR_Bits',0,35,203,1,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'SBE',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'CWE',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'CFE',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	3,18,2,35,0,12
	.byte	'SOE',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_DATR_Bits',0,35,214,1,3
	.word	203056
	.byte	11
	.byte	'_Ifx_CPU_DBGSR_Bits',0,35,217,1,16,4,12
	.byte	'DE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'HALT',0,4
	.word	936
	.byte	2,29,2,35,0,12
	.byte	'SIH',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SUSP',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'PREVSUSP',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PEVT',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EVTSRC',0,4
	.word	936
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	19,0,2,35,0,0,19
	.byte	'Ifx_CPU_DBGSR_Bits',0,35,228,1,3
	.word	203282
	.byte	11
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,35,231,1,16,4,12
	.byte	'DTA',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_DBGTCR_Bits',0,35,235,1,3
	.word	203497
	.byte	11
	.byte	'_Ifx_CPU_DCON0_Bits',0,35,238,1,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DCBYP',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_CPU_DCON0_Bits',0,35,243,1,3
	.word	203591
	.byte	11
	.byte	'_Ifx_CPU_DCON2_Bits',0,35,246,1,16,4,12
	.byte	'DCACHE_SZE',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'DSCRATCH_SZE',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_DCON2_Bits',0,35,250,1,3
	.word	203707
	.byte	11
	.byte	'_Ifx_CPU_DCX_Bits',0,35,253,1,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	6,26,2,35,0,12
	.byte	'DCXVALUE',0,4
	.word	936
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_CPU_DCX_Bits',0,35,129,2,3
	.word	203808
	.byte	11
	.byte	'_Ifx_CPU_DEADD_Bits',0,35,132,2,16,4,12
	.byte	'ERROR_ADDRESS',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_DEADD_Bits',0,35,135,2,3
	.word	203901
	.byte	11
	.byte	'_Ifx_CPU_DIEAR_Bits',0,35,138,2,16,4,12
	.byte	'TA',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_DIEAR_Bits',0,35,141,2,3
	.word	203981
	.byte	11
	.byte	'_Ifx_CPU_DIETR_Bits',0,35,144,2,16,4,12
	.byte	'IED',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'IE_T',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'IE_C',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'IE_S',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'IE_BI',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'E_INFO',0,4
	.word	936
	.byte	6,21,2,35,0,12
	.byte	'IE_UNC',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'IE_SP',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'IE_BS',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'IE_DLMU',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'IE_LPB',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'IE_MTMV',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	15,0,2,35,0,0,19
	.byte	'Ifx_CPU_DIETR_Bits',0,35,159,2,3
	.word	204050
	.byte	11
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,35,162,2,16,4,12
	.byte	'EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,35,196,2,3
	.word	204334
	.byte	11
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,35,199,2,16,4,12
	.byte	'EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,35,233,2,3
	.word	204925
	.byte	11
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,35,236,2,16,4,12
	.byte	'EN32',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN33',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN34',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN35',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN36',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN37',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN38',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN39',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN40',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN41',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN42',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN43',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN44',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN45',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN46',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN47',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN48',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN49',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN50',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN51',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN52',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN53',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN54',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN55',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN56',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN57',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN58',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN59',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN60',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN61',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN62',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN63',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,35,142,3,3
	.word	205516
	.byte	11
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,35,145,3,16,4,12
	.byte	'EN32',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN33',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN34',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN35',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN36',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN37',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN38',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN39',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN40',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN41',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN42',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN43',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN44',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN45',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN46',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN47',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN48',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN49',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN50',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN51',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN52',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN53',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN54',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN55',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN56',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN57',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN58',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN59',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN60',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN61',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN62',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN63',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,35,179,3,3
	.word	206117
	.byte	11
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,35,182,3,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'ADDR',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,35,186,3,3
	.word	206718
	.byte	11
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,35,189,3,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'ADDR',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,35,193,3,3
	.word	206833
	.byte	11
	.byte	'_Ifx_CPU_DMS_Bits',0,35,196,3,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'DMSVALUE',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_DMS_Bits',0,35,200,3,3
	.word	206948
	.byte	11
	.byte	'_Ifx_CPU_DPRE_Bits',0,35,203,3,16,4,12
	.byte	'RE_N',0,4
	.word	936
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	14,0,2,35,0,0,19
	.byte	'Ifx_CPU_DPRE_Bits',0,35,207,3,3
	.word	207041
	.byte	11
	.byte	'_Ifx_CPU_DPR_L_Bits',0,35,210,3,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'LOWBND',0,4
	.word	936
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_CPU_DPR_L_Bits',0,35,214,3,3
	.word	207133
	.byte	11
	.byte	'_Ifx_CPU_DPR_U_Bits',0,35,217,3,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'UPPBND',0,4
	.word	936
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_CPU_DPR_U_Bits',0,35,221,3,3
	.word	207228
	.byte	11
	.byte	'_Ifx_CPU_DPWE_Bits',0,35,224,3,16,4,12
	.byte	'WE_N',0,4
	.word	936
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	14,0,2,35,0,0,19
	.byte	'Ifx_CPU_DPWE_Bits',0,35,228,3,3
	.word	207323
	.byte	11
	.byte	'_Ifx_CPU_DSTR_Bits',0,35,231,3,16,4,12
	.byte	'SRE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'GAE',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'LBE',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DRE',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	2,26,2,35,0,12
	.byte	'CRE',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	7,18,2,35,0,12
	.byte	'DTME',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'LOE',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'SDE',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'SCE',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'CAC',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'MPE',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'CLE',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	3,8,2,35,0,12
	.byte	'ALN',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_CPU_DSTR_Bits',0,35,250,3,3
	.word	207415
	.byte	11
	.byte	'_Ifx_CPU_EXEVT_Bits',0,35,253,3,16,4,12
	.byte	'EVTA',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_CPU_EXEVT_Bits',0,35,133,4,3
	.word	207754
	.byte	11
	.byte	'_Ifx_CPU_FCX_Bits',0,35,136,4,16,4,12
	.byte	'FCXO',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'FCXS',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,19
	.byte	'Ifx_CPU_FCX_Bits',0,35,141,4,3
	.word	207908
	.byte	11
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,35,144,4,16,4,12
	.byte	'TAG1',0,4
	.word	936
	.byte	6,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'TAG2',0,4
	.word	936
	.byte	6,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	2,16,2,35,0,12
	.byte	'TAG3',0,4
	.word	936
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'TAG4',0,4
	.word	936
	.byte	6,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,35,154,4,3
	.word	208014
	.byte	11
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,35,157,4,16,4,12
	.byte	'STALL',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	15,16,2,35,0,12
	.byte	'MASKUECC',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	6,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	6,0,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,35,165,4,3
	.word	208232
	.byte	11
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,35,168,4,16,4,12
	.byte	'RECDIS',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'ECCCORDIS',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	936
	.byte	4,24,2,35,0,12
	.byte	'HMARGIN',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'MSEL',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'ECCSCLR',0,4
	.word	936
	.byte	2,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	6,8,2,35,0,12
	.byte	'SBABCLR',0,4
	.word	936
	.byte	2,6,2,35,0,12
	.byte	'DBABCLR',0,4
	.word	936
	.byte	2,4,2,35,0,12
	.byte	'MBABCLR',0,4
	.word	936
	.byte	2,2,2,35,0,12
	.byte	'ZBABCLR',0,4
	.word	936
	.byte	2,0,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,35,182,4,3
	.word	208423
	.byte	11
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,35,185,4,16,4,12
	.byte	'ECCERRINJ',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EDCERRINJ',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SBABERRINJ',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'DBABERRINJ',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'MBABERRINJ',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'ZBABERRINJ',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SBERERRINJ',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'DBERERRINJ',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'NVMCERRINJ',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'FLCONERRINJ',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	22,0,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,35,198,4,3
	.word	208723
	.byte	11
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,35,201,4,16,4,12
	.byte	'DDIS',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,35,205,4,3
	.word	209028
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,35,208,4,16,4,12
	.byte	'TST',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TCL',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	6,24,2,35,0,12
	.byte	'RM',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	8,14,2,35,0,12
	.byte	'FXE',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'FUE',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'FZE',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'FVE',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'FIE',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	3,6,2,35,0,12
	.byte	'FX',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'FU',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'FZ',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'FV',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'FI',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,35,227,4,3
	.word	209129
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,35,230,4,16,4,12
	.byte	'OPC',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'FMT',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'DREG',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,35,237,4,3
	.word	209478
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,35,240,4,16,4,12
	.byte	'PC',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,35,243,4,3
	.word	209638
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,35,246,4,16,4,12
	.byte	'SRC1',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,35,249,4,3
	.word	209719
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,35,252,4,16,4,12
	.byte	'SRC2',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,35,255,4,3
	.word	209806
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,35,130,5,16,4,12
	.byte	'SRC3',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,35,133,5,3
	.word	209893
	.byte	11
	.byte	'_Ifx_CPU_ICNT_Bits',0,35,136,5,16,4,12
	.byte	'COUNTVALUE',0,4
	.word	936
	.byte	31,1,2,35,0,12
	.byte	'SOVF',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_ICNT_Bits',0,35,140,5,3
	.word	209980
	.byte	11
	.byte	'_Ifx_CPU_ICR_Bits',0,35,143,5,16,4,12
	.byte	'CCPN',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	7,17,2,35,0,12
	.byte	'IE',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'PIPN',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_CPU_ICR_Bits',0,35,150,5,3
	.word	210071
	.byte	11
	.byte	'_Ifx_CPU_ISP_Bits',0,35,153,5,16,4,12
	.byte	'ISP',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_ISP_Bits',0,35,156,5,3
	.word	210213
	.byte	11
	.byte	'_Ifx_CPU_KRST0_Bits',0,35,159,5,16,4,12
	.byte	'RST',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'RSTSTAT',0,4
	.word	936
	.byte	2,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_CPU_KRST0_Bits',0,35,164,5,3
	.word	210279
	.byte	11
	.byte	'_Ifx_CPU_KRST1_Bits',0,35,167,5,16,4,12
	.byte	'RST',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_KRST1_Bits',0,35,171,5,3
	.word	210390
	.byte	11
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,35,174,5,16,4,12
	.byte	'CLR',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,35,178,5,3
	.word	210482
	.byte	11
	.byte	'_Ifx_CPU_LCX_Bits',0,35,181,5,16,4,12
	.byte	'LCXO',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'LCXS',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,19
	.byte	'Ifx_CPU_LCX_Bits',0,35,186,5,3
	.word	210578
	.byte	11
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,35,189,5,16,4,12
	.byte	'EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,35,223,5,3
	.word	210684
	.byte	11
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,35,226,5,16,4,12
	.byte	'EN32',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN33',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN34',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN35',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN36',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN37',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN38',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN39',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN40',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN41',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN42',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN43',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN44',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN45',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN46',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN47',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN48',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN49',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN50',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN51',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN52',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN53',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN54',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN55',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN56',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN57',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN58',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN59',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN60',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN61',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN62',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN63',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,35,132,6,3
	.word	211267
	.byte	11
	.byte	'_Ifx_CPU_M1CNT_Bits',0,35,135,6,16,4,12
	.byte	'COUNTVALUE',0,4
	.word	936
	.byte	31,1,2,35,0,12
	.byte	'SOVF',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_M1CNT_Bits',0,35,139,6,3
	.word	211860
	.byte	11
	.byte	'_Ifx_CPU_M2CNT_Bits',0,35,142,6,16,4,12
	.byte	'COUNTVALUE',0,4
	.word	936
	.byte	31,1,2,35,0,12
	.byte	'SOVF',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_M2CNT_Bits',0,35,146,6,3
	.word	211953
	.byte	11
	.byte	'_Ifx_CPU_M3CNT_Bits',0,35,149,6,16,4,12
	.byte	'COUNTVALUE',0,4
	.word	936
	.byte	31,1,2,35,0,12
	.byte	'SOVF',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_M3CNT_Bits',0,35,153,6,3
	.word	212046
	.byte	11
	.byte	'_Ifx_CPU_OSEL_Bits',0,35,156,6,16,4,12
	.byte	'SHOVEN_X',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_OSEL_Bits',0,35,159,6,3
	.word	212139
	.byte	11
	.byte	'_Ifx_CPU_PC_Bits',0,35,162,6,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PC',0,4
	.word	936
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_CPU_PC_Bits',0,35,166,6,3
	.word	212212
	.byte	11
	.byte	'_Ifx_CPU_PCON0_Bits',0,35,169,6,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PCBYP',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_CPU_PCON0_Bits',0,35,174,6,3
	.word	212297
	.byte	11
	.byte	'_Ifx_CPU_PCON1_Bits',0,35,177,6,16,4,12
	.byte	'PCINV',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PBINV',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_CPU_PCON1_Bits',0,35,182,6,3
	.word	212413
	.byte	11
	.byte	'_Ifx_CPU_PCON2_Bits',0,35,185,6,16,4,12
	.byte	'PCACHE_SZE',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'PSCRATCH_SZE',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_PCON2_Bits',0,35,189,6,3
	.word	212524
	.byte	11
	.byte	'_Ifx_CPU_PCXI_Bits',0,35,192,6,16,4,12
	.byte	'PCXO',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'PCXS',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'UL',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'PIE',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'PCPN',0,4
	.word	936
	.byte	8,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,19
	.byte	'Ifx_CPU_PCXI_Bits',0,35,200,6,3
	.word	212625
	.byte	11
	.byte	'_Ifx_CPU_PIEAR_Bits',0,35,203,6,16,4,12
	.byte	'TA',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_PIEAR_Bits',0,35,206,6,3
	.word	212778
	.byte	11
	.byte	'_Ifx_CPU_PIETR_Bits',0,35,209,6,16,4,12
	.byte	'IED',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'IE_T',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'IE_C',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'IE_S',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'IE_BI',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'E_INFO',0,4
	.word	936
	.byte	6,21,2,35,0,12
	.byte	'IE_UNC',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'IE_SP',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'IE_BS',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'IE_ADDR',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'IE_LPB',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'IE_MTMV',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	15,0,2,35,0,0,19
	.byte	'Ifx_CPU_PIETR_Bits',0,35,224,6,3
	.word	212847
	.byte	11
	.byte	'_Ifx_CPU_PMA0_Bits',0,35,227,6,16,4,12
	.byte	'DAC',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_PMA0_Bits',0,35,231,6,3
	.word	213131
	.byte	11
	.byte	'_Ifx_CPU_PMA1_Bits',0,35,234,6,16,4,12
	.byte	'CAC',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_PMA1_Bits',0,35,238,6,3
	.word	213222
	.byte	11
	.byte	'_Ifx_CPU_PMA2_Bits',0,35,241,6,16,4,12
	.byte	'PSI',0,4
	.word	936
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_CPU_PMA2_Bits',0,35,245,6,3
	.word	213313
	.byte	11
	.byte	'_Ifx_CPU_PSTR_Bits',0,35,248,6,16,4,12
	.byte	'FRE',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FBE',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	9,20,2,35,0,12
	.byte	'FPE',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'FME',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	17,0,2,35,0,0,19
	.byte	'Ifx_CPU_PSTR_Bits',0,35,130,7,3
	.word	213404
	.byte	11
	.byte	'_Ifx_CPU_PSW_Bits',0,35,133,7,16,4,12
	.byte	'CDC',0,4
	.word	936
	.byte	7,25,2,35,0,12
	.byte	'CDE',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'GW',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'IS',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'IO',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'PRS',0,4
	.word	936
	.byte	2,18,2,35,0,12
	.byte	'S',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'PRS2',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'USB',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_CPU_PSW_Bits',0,35,145,7,3
	.word	213607
	.byte	11
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,35,148,7,16,4,12
	.byte	'EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,35,182,7,3
	.word	213812
	.byte	11
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,35,185,7,16,4,12
	.byte	'EN32',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN33',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN34',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN35',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN36',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN37',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN38',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN39',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN40',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN41',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN42',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN43',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN44',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN45',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN46',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN47',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN48',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN49',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN50',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN51',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN52',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN53',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN54',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN55',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN56',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN57',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN58',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN59',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN60',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN61',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN62',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN63',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,35,219,7,3
	.word	214379
	.byte	11
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,35,222,7,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'ADDR',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_LA_Bits',0,35,226,7,3
	.word	214956
	.byte	11
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,35,229,7,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'ADDR',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_UA_Bits',0,35,233,7,3
	.word	215051
	.byte	11
	.byte	'_Ifx_CPU_SEGEN_Bits',0,35,236,7,16,4,12
	.byte	'ADFLIP',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'ADTYPE',0,4
	.word	936
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	21,1,2,35,0,12
	.byte	'AE',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_SEGEN_Bits',0,35,242,7,3
	.word	215146
	.byte	11
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,35,245,7,16,4,12
	.byte	'EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,35,151,8,3
	.word	215274
	.byte	11
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,35,154,8,16,4,12
	.byte	'EN32',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN33',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN34',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN35',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN36',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN37',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN38',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN39',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN40',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN41',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN42',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN43',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN44',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN45',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN46',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN47',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN48',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN49',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN50',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN51',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN52',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN53',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN54',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN55',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN56',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN57',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN58',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN59',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN60',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN61',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN62',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN63',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,35,188,8,3
	.word	215857
	.byte	11
	.byte	'_Ifx_CPU_SMACON_Bits',0,35,191,8,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'IODT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_CPU_SMACON_Bits',0,35,196,8,3
	.word	216450
	.byte	11
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,35,199,8,16,4,12
	.byte	'EN0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,35,233,8,3
	.word	216568
	.byte	11
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,35,236,8,16,4,12
	.byte	'EN32',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EN33',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EN34',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EN35',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EN36',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EN37',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EN38',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EN39',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EN40',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EN41',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EN42',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EN43',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'EN44',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'EN45',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'EN46',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'EN47',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'EN48',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'EN49',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'EN50',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'EN51',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'EN52',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'EN53',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'EN54',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'EN55',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'EN56',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'EN57',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'EN58',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EN59',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'EN60',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'EN61',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'EN62',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'EN63',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,35,142,9,3
	.word	217157
	.byte	11
	.byte	'_Ifx_CPU_SWEVT_Bits',0,35,145,9,16,4,12
	.byte	'EVTA',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_CPU_SWEVT_Bits',0,35,153,9,3
	.word	217756
	.byte	11
	.byte	'_Ifx_CPU_SYSCON_Bits',0,35,156,9,16,4,12
	.byte	'FCDSF',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'PROTEN',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TPROTEN',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'IS',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TS',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	3,24,2,35,0,12
	.byte	'ESDIS',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'U1_IED',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'U1_IOS',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	6,8,2,35,0,12
	.byte	'BHALT',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_CPU_SYSCON_Bits',0,35,171,9,3
	.word	217910
	.byte	11
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,35,174,9,16,4,12
	.byte	'ASI',0,4
	.word	936
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	936
	.byte	27,0,2,35,0,0,19
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,35,178,9,3
	.word	218209
	.byte	11
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,35,181,9,16,4,12
	.byte	'TEXP0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TEXP1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TEXP2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	13,16,2,35,0,12
	.byte	'TTRAP',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	15,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_CON_Bits',0,35,189,9,3
	.word	218307
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,35,192,9,16,4,12
	.byte	'EXTIM_CLASS_EN',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,35,196,9,3
	.word	218479
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,35,199,9,16,4,12
	.byte	'ENTRY_CVAL',0,4
	.word	936
	.byte	12,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	20,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,35,203,9,3
	.word	218608
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,35,206,9,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ENTRY_LVAL',0,4
	.word	936
	.byte	8,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	20,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,35,211,9,3
	.word	218738
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,35,214,9,16,4,12
	.byte	'EXIT_CVAL',0,4
	.word	936
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,35,218,9,3
	.word	218890
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,35,221,9,16,4,12
	.byte	'reserved_0',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'EXIT_LVAL',0,4
	.word	936
	.byte	20,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	8,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,35,226,9,3
	.word	219017
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,35,229,9,16,4,12
	.byte	'EXIT_FCX',0,4
	.word	936
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,35,233,9,3
	.word	219166
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,35,236,9,16,4,12
	.byte	'EXIT_TIN',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'EXIT_CLASS',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	4,17,2,35,0,12
	.byte	'EXIT_AT',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'ENTRY_TIN',0,4
	.word	936
	.byte	8,8,2,35,0,12
	.byte	'ENTRY_CLASS',0,4
	.word	936
	.byte	3,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	4,1,2,35,0,12
	.byte	'ENTRY_AT',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,35,246,9,3
	.word	219280
	.byte	11
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,35,249,9,16,4,12
	.byte	'TIMER',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,35,252,9,3
	.word	219524
	.byte	11
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,35,255,9,16,4,12
	.byte	'T0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'T1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'T2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'T3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'T4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'T5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'T6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'T7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,35,138,10,3
	.word	219604
	.byte	11
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,35,141,10,16,4,12
	.byte	'ADDR',0,4
	.word	936
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_CPU_TR_ADR_Bits',0,35,144,10,3
	.word	219799
	.byte	11
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,35,147,10,16,4,12
	.byte	'EVTA',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'BBM',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'BOD',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SUSP',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CNT',0,4
	.word	936
	.byte	2,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	4,20,2,35,0,12
	.byte	'TYP',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'RNG',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'ASI_EN',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'ASI',0,4
	.word	936
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	6,5,2,35,0,12
	.byte	'AST',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'ALD',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	3,0,2,35,0,0,19
	.byte	'Ifx_CPU_TR_EVT_Bits',0,35,164,10,3
	.word	219872
	.byte	13,35,172,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201227
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_A',0,35,177,10,3
	.word	220190
	.byte	13,35,180,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201288
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_BIV',0,35,185,10,3
	.word	220249
	.byte	13,35,188,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201367
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_BLK_OMASK',0,35,193,10,3
	.word	220310
	.byte	13,35,196,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201505
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_BLK_OTAR',0,35,201,10,3
	.word	220377
	.byte	13,35,204,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201626
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_BLK_RABR',0,35,209,10,3
	.word	220443
	.byte	13,35,212,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201802
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_BTV',0,35,217,10,3
	.word	220509
	.byte	13,35,220,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201888
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CCNT',0,35,225,10,3
	.word	220570
	.byte	13,35,228,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	201977
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CCTRL',0,35,233,10,3
	.word	220632
	.byte	13,35,236,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202124
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_COMPAT',0,35,241,10,3
	.word	220695
	.byte	13,35,244,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202253
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CORE_ID',0,35,249,10,3
	.word	220759
	.byte	13,35,252,10,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202353
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CPR_L',0,35,129,11,3
	.word	220824
	.byte	13,35,132,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202448
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CPR_U',0,35,137,11,3
	.word	220887
	.byte	13,35,140,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202543
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CPU_ID',0,35,145,11,3
	.word	220950
	.byte	13,35,148,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202653
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CPXE',0,35,153,11,3
	.word	221014
	.byte	13,35,156,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202745
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CREVT',0,35,161,11,3
	.word	221076
	.byte	13,35,164,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202899
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_CUS_ID',0,35,169,11,3
	.word	221139
	.byte	13,35,172,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	202993
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_D',0,35,177,11,3
	.word	221203
	.byte	13,35,180,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203056
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DATR',0,35,185,11,3
	.word	221262
	.byte	13,35,188,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203282
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DBGSR',0,35,193,11,3
	.word	221324
	.byte	13,35,196,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203497
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DBGTCR',0,35,201,11,3
	.word	221387
	.byte	13,35,204,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203591
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DCON0',0,35,209,11,3
	.word	221451
	.byte	13,35,212,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203707
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DCON2',0,35,217,11,3
	.word	221514
	.byte	13,35,220,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203808
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DCX',0,35,225,11,3
	.word	221577
	.byte	13,35,228,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203901
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DEADD',0,35,233,11,3
	.word	221638
	.byte	13,35,236,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	203981
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DIEAR',0,35,241,11,3
	.word	221701
	.byte	13,35,244,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	204050
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DIETR',0,35,249,11,3
	.word	221764
	.byte	13,35,252,11,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	204334
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,35,129,12,3
	.word	221827
	.byte	13,35,132,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	204925
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,35,137,12,3
	.word	221907
	.byte	13,35,140,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	205516
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,35,145,12,3
	.word	221987
	.byte	13,35,148,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	206117
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,35,153,12,3
	.word	222067
	.byte	13,35,156,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	206718
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,35,161,12,3
	.word	222147
	.byte	13,35,164,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	206833
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,35,169,12,3
	.word	222221
	.byte	13,35,172,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	206948
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DMS',0,35,177,12,3
	.word	222295
	.byte	13,35,180,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207041
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DPRE',0,35,185,12,3
	.word	222356
	.byte	13,35,188,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207133
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DPR_L',0,35,193,12,3
	.word	222418
	.byte	13,35,196,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207228
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DPR_U',0,35,201,12,3
	.word	222481
	.byte	13,35,204,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207323
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DPWE',0,35,209,12,3
	.word	222544
	.byte	13,35,212,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207415
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_DSTR',0,35,217,12,3
	.word	222606
	.byte	13,35,220,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207754
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_EXEVT',0,35,225,12,3
	.word	222668
	.byte	13,35,228,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	207908
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FCX',0,35,233,12,3
	.word	222731
	.byte	13,35,236,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	208014
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON0',0,35,241,12,3
	.word	222792
	.byte	13,35,244,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	208232
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON1',0,35,249,12,3
	.word	222859
	.byte	13,35,252,12,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	208423
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON2',0,35,129,13,3
	.word	222926
	.byte	13,35,132,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	208723
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON3',0,35,137,13,3
	.word	222993
	.byte	13,35,140,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209028
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FLASHCON4',0,35,145,13,3
	.word	223060
	.byte	13,35,148,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209129
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,35,153,13,3
	.word	223127
	.byte	13,35,156,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209478
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,35,161,13,3
	.word	223197
	.byte	13,35,164,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209638
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,35,169,13,3
	.word	223267
	.byte	13,35,172,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209719
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,35,177,13,3
	.word	223336
	.byte	13,35,180,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209806
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,35,185,13,3
	.word	223407
	.byte	13,35,188,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209893
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,35,193,13,3
	.word	223478
	.byte	13,35,196,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	209980
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_ICNT',0,35,201,13,3
	.word	223549
	.byte	13,35,204,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210071
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_ICR',0,35,209,13,3
	.word	223611
	.byte	13,35,212,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210213
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_ISP',0,35,217,13,3
	.word	223672
	.byte	13,35,220,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210279
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_KRST0',0,35,225,13,3
	.word	223733
	.byte	13,35,228,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210390
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_KRST1',0,35,233,13,3
	.word	223796
	.byte	13,35,236,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210482
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_KRSTCLR',0,35,241,13,3
	.word	223859
	.byte	13,35,244,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210578
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_LCX',0,35,249,13,3
	.word	223924
	.byte	13,35,252,13,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	210684
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,35,129,14,3
	.word	223985
	.byte	13,35,132,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	211267
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,35,137,14,3
	.word	224061
	.byte	13,35,140,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	211860
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_M1CNT',0,35,145,14,3
	.word	224137
	.byte	13,35,148,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	211953
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_M2CNT',0,35,153,14,3
	.word	224200
	.byte	13,35,156,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212046
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_M3CNT',0,35,161,14,3
	.word	224263
	.byte	13,35,164,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212139
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_OSEL',0,35,169,14,3
	.word	224326
	.byte	13,35,172,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212212
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PC',0,35,177,14,3
	.word	224388
	.byte	13,35,180,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212297
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PCON0',0,35,185,14,3
	.word	224448
	.byte	13,35,188,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212413
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PCON1',0,35,193,14,3
	.word	224511
	.byte	13,35,196,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212524
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PCON2',0,35,201,14,3
	.word	224574
	.byte	13,35,204,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212625
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PCXI',0,35,209,14,3
	.word	224637
	.byte	13,35,212,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212778
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PIEAR',0,35,217,14,3
	.word	224699
	.byte	13,35,220,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	212847
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PIETR',0,35,225,14,3
	.word	224762
	.byte	13,35,228,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	213131
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PMA0',0,35,233,14,3
	.word	224825
	.byte	13,35,236,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	213222
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PMA1',0,35,241,14,3
	.word	224887
	.byte	13,35,244,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	213313
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PMA2',0,35,249,14,3
	.word	224949
	.byte	13,35,252,14,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	213404
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PSTR',0,35,129,15,3
	.word	225011
	.byte	13,35,132,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	213607
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_PSW',0,35,137,15,3
	.word	225073
	.byte	13,35,140,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	213812
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_ACCENA',0,35,145,15,3
	.word	225134
	.byte	13,35,148,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	214379
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_ACCENB',0,35,153,15,3
	.word	225202
	.byte	13,35,156,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	214956
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_LA',0,35,161,15,3
	.word	225270
	.byte	13,35,164,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	215051
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_RGN_UA',0,35,169,15,3
	.word	225334
	.byte	13,35,172,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	215146
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SEGEN',0,35,177,15,3
	.word	225398
	.byte	13,35,180,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	215274
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,35,185,15,3
	.word	225461
	.byte	13,35,188,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	215857
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,35,193,15,3
	.word	225537
	.byte	13,35,196,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	216450
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SMACON',0,35,201,15,3
	.word	225613
	.byte	13,35,204,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	216568
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,35,209,15,3
	.word	225677
	.byte	13,35,212,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	217157
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,35,217,15,3
	.word	225756
	.byte	13,35,220,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	217756
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SWEVT',0,35,225,15,3
	.word	225835
	.byte	13,35,228,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	217910
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_SYSCON',0,35,233,15,3
	.word	225898
	.byte	13,35,236,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	218209
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TASK_ASI',0,35,241,15,3
	.word	225962
	.byte	13,35,244,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	218307
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_CON',0,35,249,15,3
	.word	226028
	.byte	13,35,252,15,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	218479
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,35,129,16,3
	.word	226093
	.byte	13,35,132,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	218608
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,35,137,16,3
	.word	226169
	.byte	13,35,140,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	218738
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,35,145,16,3
	.word	226247
	.byte	13,35,148,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	218890
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,35,153,16,3
	.word	226325
	.byte	13,35,156,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219017
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,35,161,16,3
	.word	226402
	.byte	13,35,164,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219166
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,35,169,16,3
	.word	226479
	.byte	13,35,172,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219280
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,35,177,16,3
	.word	226550
	.byte	13,35,180,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219524
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TPS_TIMER',0,35,185,16,3
	.word	226622
	.byte	13,35,188,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219604
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TRIG_ACC',0,35,193,16,3
	.word	226689
	.byte	13,35,196,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219799
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TR_ADR',0,35,201,16,3
	.word	226755
	.byte	13,35,204,16,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	219872
	.byte	4,2,35,0,0,19
	.byte	'Ifx_CPU_TR_EVT',0,35,209,16,3
	.word	226819
	.byte	11
	.byte	'_Ifx_CPU_RGN',0,35,221,16,25,16,14
	.byte	'LA',0
	.word	225270
	.byte	4,2,35,0,14
	.byte	'UA',0
	.word	225334
	.byte	4,2,35,4,14
	.byte	'ACCENA',0
	.word	225134
	.byte	4,2,35,8,14
	.byte	'ACCENB',0
	.word	225202
	.byte	4,2,35,12,0,10
	.word	226883
	.byte	19
	.byte	'Ifx_CPU_RGN',0,35,227,16,3
	.word	226959
	.byte	11
	.byte	'_Ifx_CPU_BLK',0,35,242,16,25,12,14
	.byte	'RABR',0
	.word	220443
	.byte	4,2,35,0,14
	.byte	'OTAR',0
	.word	220377
	.byte	4,2,35,4,14
	.byte	'OMASK',0
	.word	220310
	.byte	4,2,35,8,0,10
	.word	226985
	.byte	19
	.byte	'Ifx_CPU_BLK',0,35,247,16,3
	.word	227048
	.byte	11
	.byte	'_Ifx_CPU_FPU_TRAP',0,35,134,17,25,28,14
	.byte	'CON',0
	.word	223127
	.byte	4,2,35,0,14
	.byte	'PC',0
	.word	223267
	.byte	4,2,35,4,14
	.byte	'OPC',0
	.word	223197
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	3092
	.byte	4,2,35,12,14
	.byte	'SRC1',0
	.word	223336
	.byte	4,2,35,16,14
	.byte	'SRC2',0
	.word	223407
	.byte	4,2,35,20,14
	.byte	'SRC3',0
	.word	223478
	.byte	4,2,35,24,0,10
	.word	227074
	.byte	19
	.byte	'Ifx_CPU_FPU_TRAP',0,35,143,17,3
	.word	227199
	.byte	11
	.byte	'_Ifx_CPU_DPR',0,35,158,17,25,8,14
	.byte	'L',0
	.word	222418
	.byte	4,2,35,0,14
	.byte	'U',0
	.word	222481
	.byte	4,2,35,4,0,10
	.word	227230
	.byte	19
	.byte	'Ifx_CPU_DPR',0,35,162,17,3
	.word	227272
	.byte	11
	.byte	'_Ifx_CPU_CPR',0,35,177,17,25,8,14
	.byte	'L',0
	.word	220824
	.byte	4,2,35,0,14
	.byte	'U',0
	.word	220887
	.byte	4,2,35,4,0,10
	.word	227298
	.byte	19
	.byte	'Ifx_CPU_CPR',0,35,181,17,3
	.word	227340
	.byte	15,12
	.word	226622
	.byte	16,2,0,11
	.byte	'_Ifx_CPU_TPS',0,35,196,17,25,16,14
	.byte	'CON',0
	.word	226028
	.byte	4,2,35,0,14
	.byte	'TIMER',0
	.word	227366
	.byte	12,2,35,4,0,10
	.word	227375
	.byte	19
	.byte	'Ifx_CPU_TPS',0,35,200,17,3
	.word	227423
	.byte	11
	.byte	'_Ifx_CPU_TPS_EXTIM',0,35,215,17,25,28,14
	.byte	'ENTRY_LVAL',0
	.word	226247
	.byte	4,2,35,0,14
	.byte	'ENTRY_CVAL',0
	.word	226169
	.byte	4,2,35,4,14
	.byte	'EXIT_LVAL',0
	.word	226402
	.byte	4,2,35,8,14
	.byte	'EXIT_CVAL',0
	.word	226325
	.byte	4,2,35,12,14
	.byte	'CLASS_EN',0
	.word	226093
	.byte	4,2,35,16,14
	.byte	'STAT',0
	.word	226550
	.byte	4,2,35,20,14
	.byte	'FCX',0
	.word	226479
	.byte	4,2,35,24,0,10
	.word	227449
	.byte	19
	.byte	'Ifx_CPU_TPS_EXTIM',0,35,224,17,3
	.word	227598
	.byte	11
	.byte	'_Ifx_CPU_TR',0,35,239,17,25,8,14
	.byte	'EVT',0
	.word	226819
	.byte	4,2,35,0,14
	.byte	'ADR',0
	.word	226755
	.byte	4,2,35,4,0,10
	.word	227630
	.byte	19
	.byte	'Ifx_CPU_TR',0,35,243,17,3
	.word	227675
	.byte	15,128,34
	.word	537
	.byte	16,255,33,0,15,236,253,2
	.word	537
	.byte	16,235,253,2,0,15,244,31
	.word	537
	.byte	16,243,31,0,15,128,1
	.word	226883
	.byte	16,7,0,10
	.word	227735
	.byte	15,232,1
	.word	537
	.byte	16,231,1,0,15,128,48
	.word	537
	.byte	16,255,47,0,15,128,3
	.word	226985
	.byte	16,31,0,10
	.word	227772
	.byte	15,160,39
	.word	537
	.byte	16,159,39,0,15,208,223,1
	.word	537
	.byte	16,207,223,1,0,15,248,1
	.word	537
	.byte	16,247,1,0,15,244,29
	.word	537
	.byte	16,243,29,0,15,188,3
	.word	537
	.byte	16,187,3,0,15,232,3
	.word	537
	.byte	16,231,3,0,15,252,23
	.word	537
	.byte	16,251,23,0,10
	.word	227074
	.byte	15,228,63
	.word	537
	.byte	16,227,63,0,15,144,1
	.word	227230
	.byte	16,17,0,10
	.word	227882
	.byte	15,240,30
	.word	537
	.byte	16,239,30,0,15,80
	.word	227298
	.byte	16,9,0,10
	.word	227908
	.byte	15,176,31
	.word	537
	.byte	16,175,31,0,15,152,7
	.word	537
	.byte	16,151,7,0,10
	.word	227375
	.byte	10
	.word	227449
	.byte	15,164,23
	.word	537
	.byte	16,163,23,0,15,64
	.word	227630
	.byte	16,7,0,10
	.word	227965
	.byte	15,192,23
	.word	537
	.byte	16,191,23,0,15,180,1
	.word	537
	.byte	16,179,1,0,15,172,1
	.word	537
	.byte	16,171,1,0,15,64
	.word	221203
	.byte	16,15,0,15,64
	.word	220190
	.byte	16,15,0,11
	.byte	'_Ifx_CPU',0,35,130,18,25,128,128,8,14
	.byte	'reserved_0',0
	.word	227700
	.byte	128,34,2,35,0,14
	.byte	'FLASHCON0',0
	.word	222792
	.byte	4,3,35,128,34,14
	.byte	'FLASHCON1',0
	.word	222859
	.byte	4,3,35,132,34,14
	.byte	'FLASHCON2',0
	.word	222926
	.byte	4,3,35,136,34,14
	.byte	'FLASHCON3',0
	.word	222993
	.byte	4,3,35,140,34,14
	.byte	'FLASHCON4',0
	.word	223060
	.byte	4,3,35,144,34,14
	.byte	'reserved_1114',0
	.word	227711
	.byte	236,253,2,3,35,148,34,14
	.byte	'KRST0',0
	.word	223733
	.byte	4,4,35,128,160,3,14
	.byte	'KRST1',0
	.word	223796
	.byte	4,4,35,132,160,3,14
	.byte	'KRSTCLR',0
	.word	223859
	.byte	4,4,35,136,160,3,14
	.byte	'reserved_D00C',0
	.word	227724
	.byte	244,31,4,35,140,160,3,14
	.byte	'RGN',0
	.word	227745
	.byte	128,1,4,35,128,192,3,14
	.byte	'reserved_E080',0
	.word	4912
	.byte	8,4,35,128,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	225677
	.byte	4,4,35,136,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	225756
	.byte	4,4,35,140,193,3,14
	.byte	'reserved_E090',0
	.word	4912
	.byte	8,4,35,144,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	225677
	.byte	4,4,35,152,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	225756
	.byte	4,4,35,156,193,3,14
	.byte	'reserved_E0A0',0
	.word	4912
	.byte	8,4,35,160,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	225677
	.byte	4,4,35,168,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	225756
	.byte	4,4,35,172,193,3,14
	.byte	'reserved_E0B0',0
	.word	4912
	.byte	8,4,35,176,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	225677
	.byte	4,4,35,184,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	225756
	.byte	4,4,35,188,193,3,14
	.byte	'reserved_E0C0',0
	.word	4912
	.byte	8,4,35,192,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	225677
	.byte	4,4,35,200,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	225756
	.byte	4,4,35,204,193,3,14
	.byte	'reserved_E0D0',0
	.word	4912
	.byte	8,4,35,208,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	225677
	.byte	4,4,35,216,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	225756
	.byte	4,4,35,220,193,3,14
	.byte	'reserved_E0E0',0
	.word	4912
	.byte	8,4,35,224,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	225677
	.byte	4,4,35,232,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	225756
	.byte	4,4,35,236,193,3,14
	.byte	'reserved_E0F0',0
	.word	4912
	.byte	8,4,35,240,193,3,14
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	225677
	.byte	4,4,35,248,193,3,14
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	225756
	.byte	4,4,35,252,193,3,14
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	225461
	.byte	4,4,35,128,194,3,14
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	225537
	.byte	4,4,35,132,194,3,14
	.byte	'reserved_E108',0
	.word	4912
	.byte	8,4,35,136,194,3,14
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	223985
	.byte	4,4,35,144,194,3,14
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	224061
	.byte	4,4,35,148,194,3,14
	.byte	'reserved_E118',0
	.word	227750
	.byte	232,1,4,35,152,194,3,14
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	222147
	.byte	4,4,35,128,196,3,14
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	222221
	.byte	4,4,35,132,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	221907
	.byte	4,4,35,136,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	222067
	.byte	4,4,35,140,196,3,14
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	222147
	.byte	4,4,35,144,196,3,14
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	222221
	.byte	4,4,35,148,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	221907
	.byte	4,4,35,152,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	222067
	.byte	4,4,35,156,196,3,14
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	222147
	.byte	4,4,35,160,196,3,14
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	222221
	.byte	4,4,35,164,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	221907
	.byte	4,4,35,168,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	222067
	.byte	4,4,35,172,196,3,14
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	222147
	.byte	4,4,35,176,196,3,14
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	222221
	.byte	4,4,35,180,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	221907
	.byte	4,4,35,184,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	222067
	.byte	4,4,35,188,196,3,14
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	222147
	.byte	4,4,35,192,196,3,14
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	222221
	.byte	4,4,35,196,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	221907
	.byte	4,4,35,200,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	222067
	.byte	4,4,35,204,196,3,14
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	222147
	.byte	4,4,35,208,196,3,14
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	222221
	.byte	4,4,35,212,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	221907
	.byte	4,4,35,216,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	222067
	.byte	4,4,35,220,196,3,14
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	222147
	.byte	4,4,35,224,196,3,14
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	222221
	.byte	4,4,35,228,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	221907
	.byte	4,4,35,232,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	222067
	.byte	4,4,35,236,196,3,14
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	222147
	.byte	4,4,35,240,196,3,14
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	222221
	.byte	4,4,35,244,196,3,14
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	221907
	.byte	4,4,35,248,196,3,14
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	222067
	.byte	4,4,35,252,196,3,14
	.byte	'reserved_E280',0
	.word	4912
	.byte	8,4,35,128,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	221827
	.byte	4,4,35,136,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	221987
	.byte	4,4,35,140,197,3,14
	.byte	'reserved_E290',0
	.word	4912
	.byte	8,4,35,144,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	221827
	.byte	4,4,35,152,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	221987
	.byte	4,4,35,156,197,3,14
	.byte	'reserved_E2A0',0
	.word	4912
	.byte	8,4,35,160,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	221827
	.byte	4,4,35,168,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	221987
	.byte	4,4,35,172,197,3,14
	.byte	'reserved_E2B0',0
	.word	4912
	.byte	8,4,35,176,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	221827
	.byte	4,4,35,184,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	221987
	.byte	4,4,35,188,197,3,14
	.byte	'reserved_E2C0',0
	.word	4912
	.byte	8,4,35,192,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	221827
	.byte	4,4,35,200,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	221987
	.byte	4,4,35,204,197,3,14
	.byte	'reserved_E2D0',0
	.word	4912
	.byte	8,4,35,208,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	221827
	.byte	4,4,35,216,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	221987
	.byte	4,4,35,220,197,3,14
	.byte	'reserved_E2E0',0
	.word	4912
	.byte	8,4,35,224,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	221827
	.byte	4,4,35,232,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	221987
	.byte	4,4,35,236,197,3,14
	.byte	'reserved_E2F0',0
	.word	4912
	.byte	8,4,35,240,197,3,14
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	221827
	.byte	4,4,35,248,197,3,14
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	221987
	.byte	4,4,35,252,197,3,14
	.byte	'reserved_E300',0
	.word	227761
	.byte	128,48,4,35,128,198,3,14
	.byte	'OSEL',0
	.word	224326
	.byte	4,4,35,128,246,3,14
	.byte	'reserved_FB04',0
	.word	5252
	.byte	12,4,35,132,246,3,14
	.byte	'BLK',0
	.word	227782
	.byte	128,3,4,35,144,246,3,14
	.byte	'reserved_FC90',0
	.word	227787
	.byte	160,39,4,35,144,249,3,14
	.byte	'SEGEN',0
	.word	225398
	.byte	4,4,35,176,160,4,14
	.byte	'reserved_11034',0
	.word	227798
	.byte	208,223,1,4,35,180,160,4,14
	.byte	'TASK_ASI',0
	.word	225962
	.byte	4,4,35,132,128,6,14
	.byte	'reserved_18008',0
	.word	227811
	.byte	248,1,4,35,136,128,6,14
	.byte	'PMA0',0
	.word	224825
	.byte	4,4,35,128,130,6,14
	.byte	'PMA1',0
	.word	224887
	.byte	4,4,35,132,130,6,14
	.byte	'PMA2',0
	.word	224949
	.byte	4,4,35,136,130,6,14
	.byte	'reserved_1810C',0
	.word	227822
	.byte	244,29,4,35,140,130,6,14
	.byte	'DCON2',0
	.word	221514
	.byte	4,4,35,128,160,6,14
	.byte	'reserved_19004',0
	.word	4912
	.byte	8,4,35,132,160,6,14
	.byte	'SMACON',0
	.word	225613
	.byte	4,4,35,140,160,6,14
	.byte	'DSTR',0
	.word	222606
	.byte	4,4,35,144,160,6,14
	.byte	'reserved_19014',0
	.word	3092
	.byte	4,4,35,148,160,6,14
	.byte	'DATR',0
	.word	221262
	.byte	4,4,35,152,160,6,14
	.byte	'DEADD',0
	.word	221638
	.byte	4,4,35,156,160,6,14
	.byte	'DIEAR',0
	.word	221701
	.byte	4,4,35,160,160,6,14
	.byte	'DIETR',0
	.word	221764
	.byte	4,4,35,164,160,6,14
	.byte	'reserved_19028',0
	.word	4283
	.byte	24,4,35,168,160,6,14
	.byte	'DCON0',0
	.word	221451
	.byte	4,4,35,192,160,6,14
	.byte	'reserved_19044',0
	.word	227833
	.byte	188,3,4,35,196,160,6,14
	.byte	'PSTR',0
	.word	225011
	.byte	4,4,35,128,164,6,14
	.byte	'PCON1',0
	.word	224511
	.byte	4,4,35,132,164,6,14
	.byte	'PCON2',0
	.word	224574
	.byte	4,4,35,136,164,6,14
	.byte	'PCON0',0
	.word	224448
	.byte	4,4,35,140,164,6,14
	.byte	'PIEAR',0
	.word	224699
	.byte	4,4,35,144,164,6,14
	.byte	'PIETR',0
	.word	224762
	.byte	4,4,35,148,164,6,14
	.byte	'reserved_19218',0
	.word	227844
	.byte	232,3,4,35,152,164,6,14
	.byte	'COMPAT',0
	.word	220695
	.byte	4,4,35,128,168,6,14
	.byte	'reserved_19404',0
	.word	227855
	.byte	252,23,4,35,132,168,6,14
	.byte	'FPU_TRAP',0
	.word	227866
	.byte	28,4,35,128,192,6,14
	.byte	'reserved_1A01C',0
	.word	227871
	.byte	228,63,4,35,156,192,6,14
	.byte	'DPR',0
	.word	227892
	.byte	144,1,4,35,128,128,7,14
	.byte	'reserved_1C090',0
	.word	227897
	.byte	240,30,4,35,144,129,7,14
	.byte	'CPR',0
	.word	227917
	.byte	80,4,35,128,160,7,14
	.byte	'reserved_1D050',0
	.word	227922
	.byte	176,31,4,35,208,160,7,14
	.byte	'CPXE_0',0
	.word	221014
	.byte	4,4,35,128,192,7,14
	.byte	'CPXE_1',0
	.word	221014
	.byte	4,4,35,132,192,7,14
	.byte	'CPXE_2',0
	.word	221014
	.byte	4,4,35,136,192,7,14
	.byte	'CPXE_3',0
	.word	221014
	.byte	4,4,35,140,192,7,14
	.byte	'DPRE_0',0
	.word	222356
	.byte	4,4,35,144,192,7,14
	.byte	'DPRE_1',0
	.word	222356
	.byte	4,4,35,148,192,7,14
	.byte	'DPRE_2',0
	.word	222356
	.byte	4,4,35,152,192,7,14
	.byte	'DPRE_3',0
	.word	222356
	.byte	4,4,35,156,192,7,14
	.byte	'DPWE_0',0
	.word	222544
	.byte	4,4,35,160,192,7,14
	.byte	'DPWE_1',0
	.word	222544
	.byte	4,4,35,164,192,7,14
	.byte	'DPWE_2',0
	.word	222544
	.byte	4,4,35,168,192,7,14
	.byte	'DPWE_3',0
	.word	222544
	.byte	4,4,35,172,192,7,14
	.byte	'reserved_1E030',0
	.word	16436
	.byte	16,4,35,176,192,7,14
	.byte	'CPXE_4',0
	.word	221014
	.byte	4,4,35,192,192,7,14
	.byte	'CPXE_5',0
	.word	221014
	.byte	4,4,35,196,192,7,14
	.byte	'reserved_1E048',0
	.word	4912
	.byte	8,4,35,200,192,7,14
	.byte	'DPRE_4',0
	.word	222356
	.byte	4,4,35,208,192,7,14
	.byte	'DPRE_5',0
	.word	222356
	.byte	4,4,35,212,192,7,14
	.byte	'reserved_1E058',0
	.word	4912
	.byte	8,4,35,216,192,7,14
	.byte	'DPWE_4',0
	.word	222544
	.byte	4,4,35,224,192,7,14
	.byte	'DPWE_5',0
	.word	222544
	.byte	4,4,35,228,192,7,14
	.byte	'reserved_1E068',0
	.word	227933
	.byte	152,7,4,35,232,192,7,14
	.byte	'TPS',0
	.word	227944
	.byte	16,4,35,128,200,7,14
	.byte	'reserved_1E410',0
	.word	77664
	.byte	48,4,35,144,200,7,14
	.byte	'TPS_EXTIM',0
	.word	227949
	.byte	28,4,35,192,200,7,14
	.byte	'reserved_1E45C',0
	.word	227954
	.byte	164,23,4,35,220,200,7,14
	.byte	'TR',0
	.word	227974
	.byte	64,4,35,128,224,7,14
	.byte	'reserved_1F040',0
	.word	227979
	.byte	192,23,4,35,192,224,7,14
	.byte	'CCTRL',0
	.word	220632
	.byte	4,4,35,128,248,7,14
	.byte	'CCNT',0
	.word	220570
	.byte	4,4,35,132,248,7,14
	.byte	'ICNT',0
	.word	223549
	.byte	4,4,35,136,248,7,14
	.byte	'M1CNT',0
	.word	224137
	.byte	4,4,35,140,248,7,14
	.byte	'M2CNT',0
	.word	224200
	.byte	4,4,35,144,248,7,14
	.byte	'M3CNT',0
	.word	224263
	.byte	4,4,35,148,248,7,14
	.byte	'reserved_1FC18',0
	.word	227750
	.byte	232,1,4,35,152,248,7,14
	.byte	'DBGSR',0
	.word	221324
	.byte	4,4,35,128,250,7,14
	.byte	'reserved_1FD04',0
	.word	3092
	.byte	4,4,35,132,250,7,14
	.byte	'EXEVT',0
	.word	222668
	.byte	4,4,35,136,250,7,14
	.byte	'CREVT',0
	.word	221076
	.byte	4,4,35,140,250,7,14
	.byte	'SWEVT',0
	.word	225835
	.byte	4,4,35,144,250,7,14
	.byte	'reserved_1FD14',0
	.word	69386
	.byte	28,4,35,148,250,7,14
	.byte	'TRIG_ACC',0
	.word	226689
	.byte	4,4,35,176,250,7,14
	.byte	'reserved_1FD34',0
	.word	5252
	.byte	12,4,35,180,250,7,14
	.byte	'DMS',0
	.word	222295
	.byte	4,4,35,192,250,7,14
	.byte	'DCX',0
	.word	221577
	.byte	4,4,35,196,250,7,14
	.byte	'DBGTCR',0
	.word	221387
	.byte	4,4,35,200,250,7,14
	.byte	'reserved_1FD4C',0
	.word	227990
	.byte	180,1,4,35,204,250,7,14
	.byte	'PCXI',0
	.word	224637
	.byte	4,4,35,128,252,7,14
	.byte	'PSW',0
	.word	225073
	.byte	4,4,35,132,252,7,14
	.byte	'PC',0
	.word	224388
	.byte	4,4,35,136,252,7,14
	.byte	'reserved_1FE0C',0
	.word	4912
	.byte	8,4,35,140,252,7,14
	.byte	'SYSCON',0
	.word	225898
	.byte	4,4,35,148,252,7,14
	.byte	'CPU_ID',0
	.word	220950
	.byte	4,4,35,152,252,7,14
	.byte	'CORE_ID',0
	.word	220759
	.byte	4,4,35,156,252,7,14
	.byte	'BIV',0
	.word	220249
	.byte	4,4,35,160,252,7,14
	.byte	'BTV',0
	.word	220509
	.byte	4,4,35,164,252,7,14
	.byte	'ISP',0
	.word	223672
	.byte	4,4,35,168,252,7,14
	.byte	'ICR',0
	.word	223611
	.byte	4,4,35,172,252,7,14
	.byte	'reserved_1FE30',0
	.word	4912
	.byte	8,4,35,176,252,7,14
	.byte	'FCX',0
	.word	222731
	.byte	4,4,35,184,252,7,14
	.byte	'LCX',0
	.word	223924
	.byte	4,4,35,188,252,7,14
	.byte	'reserved_1FE40',0
	.word	16436
	.byte	16,4,35,192,252,7,14
	.byte	'CUS_ID',0
	.word	221139
	.byte	4,4,35,208,252,7,14
	.byte	'reserved_1FE54',0
	.word	228001
	.byte	172,1,4,35,212,252,7,14
	.byte	'D',0
	.word	228012
	.byte	64,4,35,128,254,7,14
	.byte	'reserved_1FF40',0
	.word	82978
	.byte	64,4,35,192,254,7,14
	.byte	'A',0
	.word	228021
	.byte	64,4,35,128,255,7,14
	.byte	'reserved_1FFC0',0
	.word	82978
	.byte	64,4,35,192,255,7,0,10
	.word	228030
	.byte	19
	.byte	'Ifx_CPU',0,35,210,19,3
	.word	233128
	.byte	17,15,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_none',0,3,0,19
	.byte	'IfxCpu_Id',0,15,130,1,3
	.word	233150
	.byte	19
	.byte	'IfxCpu_ResourceCpu',0,15,161,1,3
	.word	19768
	.byte	11
	.byte	'_Ifx_STM_ACCEN0_Bits',0,36,68,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_STM_ACCEN0_Bits',0,36,102,3
	.word	233262
	.byte	11
	.byte	'_Ifx_STM_ACCEN1_Bits',0,36,105,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_ACCEN1_Bits',0,36,108,3
	.word	233819
	.byte	11
	.byte	'_Ifx_STM_CAP_Bits',0,36,111,16,4,12
	.byte	'STMCAP_63_32',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_CAP_Bits',0,36,114,3
	.word	233896
	.byte	11
	.byte	'_Ifx_STM_CAPSV_Bits',0,36,117,16,4,12
	.byte	'STMCAP_63_32',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_CAPSV_Bits',0,36,120,3
	.word	233969
	.byte	11
	.byte	'_Ifx_STM_CLC_Bits',0,36,123,16,4,12
	.byte	'DISR',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'DISS',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EDIS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_STM_CLC_Bits',0,36,130,1,3
	.word	234046
	.byte	11
	.byte	'_Ifx_STM_CMCON_Bits',0,36,133,1,16,4,12
	.byte	'MSIZE0',0,1
	.word	537
	.byte	5,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	537
	.byte	3,0,2,35,0,12
	.byte	'MSTART0',0,1
	.word	537
	.byte	5,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	537
	.byte	3,0,2,35,1,12
	.byte	'MSIZE1',0,1
	.word	537
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	537
	.byte	3,0,2,35,2,12
	.byte	'MSTART1',0,1
	.word	537
	.byte	5,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	537
	.byte	3,0,2,35,3,0,19
	.byte	'Ifx_STM_CMCON_Bits',0,36,143,1,3
	.word	234188
	.byte	11
	.byte	'_Ifx_STM_CMP_Bits',0,36,146,1,16,4,12
	.byte	'CMPVAL',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_CMP_Bits',0,36,149,1,3
	.word	234408
	.byte	11
	.byte	'_Ifx_STM_ICR_Bits',0,36,152,1,16,4,12
	.byte	'CMP0EN',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'CMP0IR',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'CMP0OS',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'CMP1EN',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'CMP1IR',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'CMP1OS',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,4
	.word	340
	.byte	25,0,2,35,0,0,19
	.byte	'Ifx_STM_ICR_Bits',0,36,162,1,3
	.word	234477
	.byte	11
	.byte	'_Ifx_STM_ID_Bits',0,36,165,1,16,4,12
	.byte	'MODREV',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	537
	.byte	8,0,2,35,1,12
	.byte	'MODNUM',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_STM_ID_Bits',0,36,170,1,3
	.word	234680
	.byte	11
	.byte	'_Ifx_STM_ISCR_Bits',0,36,173,1,16,4,12
	.byte	'CMP0IRR',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'CMP0IRS',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'CMP1IRR',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'CMP1IRS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_STM_ISCR_Bits',0,36,180,1,3
	.word	234784
	.byte	11
	.byte	'_Ifx_STM_KRST0_Bits',0,36,183,1,16,4,12
	.byte	'RST',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'RSTSTAT',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_STM_KRST0_Bits',0,36,188,1,3
	.word	234935
	.byte	11
	.byte	'_Ifx_STM_KRST1_Bits',0,36,191,1,16,4,12
	.byte	'RST',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	340
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_STM_KRST1_Bits',0,36,195,1,3
	.word	235046
	.byte	11
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,36,198,1,16,4,12
	.byte	'CLR',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	340
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_STM_KRSTCLR_Bits',0,36,202,1,3
	.word	235138
	.byte	11
	.byte	'_Ifx_STM_OCS_Bits',0,36,205,1,16,4,12
	.byte	'reserved_0',0,1
	.word	537
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	340
	.byte	21,8,2,35,0,12
	.byte	'SUS',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SUS_P',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'SUSSTA',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	537
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_STM_OCS_Bits',0,36,213,1,3
	.word	235234
	.byte	11
	.byte	'_Ifx_STM_TIM0_Bits',0,36,216,1,16,4,12
	.byte	'STM_31_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM0_Bits',0,36,219,1,3
	.word	235402
	.byte	11
	.byte	'_Ifx_STM_TIM0SV_Bits',0,36,222,1,16,4,12
	.byte	'STM_31_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM0SV_Bits',0,36,225,1,3
	.word	235475
	.byte	11
	.byte	'_Ifx_STM_TIM1_Bits',0,36,228,1,16,4,12
	.byte	'STM_35_4',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM1_Bits',0,36,231,1,3
	.word	235552
	.byte	11
	.byte	'_Ifx_STM_TIM2_Bits',0,36,234,1,16,4,12
	.byte	'STM_39_8',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM2_Bits',0,36,237,1,3
	.word	235625
	.byte	11
	.byte	'_Ifx_STM_TIM3_Bits',0,36,240,1,16,4,12
	.byte	'STM_43_12',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM3_Bits',0,36,243,1,3
	.word	235698
	.byte	11
	.byte	'_Ifx_STM_TIM4_Bits',0,36,246,1,16,4,12
	.byte	'STM_47_16',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM4_Bits',0,36,249,1,3
	.word	235772
	.byte	11
	.byte	'_Ifx_STM_TIM5_Bits',0,36,252,1,16,4,12
	.byte	'STM_51_20',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM5_Bits',0,36,255,1,3
	.word	235846
	.byte	11
	.byte	'_Ifx_STM_TIM6_Bits',0,36,130,2,16,4,12
	.byte	'STM_63_32',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_STM_TIM6_Bits',0,36,133,2,3
	.word	235920
	.byte	13,36,141,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	233262
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_ACCEN0',0,36,146,2,3
	.word	235994
	.byte	13,36,149,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	233819
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_ACCEN1',0,36,154,2,3
	.word	236058
	.byte	13,36,157,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	233896
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_CAP',0,36,162,2,3
	.word	236122
	.byte	13,36,165,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	233969
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_CAPSV',0,36,170,2,3
	.word	236183
	.byte	13,36,173,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234046
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_CLC',0,36,178,2,3
	.word	236246
	.byte	13,36,181,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234188
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_CMCON',0,36,186,2,3
	.word	236307
	.byte	13,36,189,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234408
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_CMP',0,36,194,2,3
	.word	236370
	.byte	13,36,197,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234477
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_ICR',0,36,202,2,3
	.word	236431
	.byte	13,36,205,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234680
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_ID',0,36,210,2,3
	.word	236492
	.byte	13,36,213,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234784
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_ISCR',0,36,218,2,3
	.word	236552
	.byte	13,36,221,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	234935
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_KRST0',0,36,226,2,3
	.word	236614
	.byte	13,36,229,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235046
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_KRST1',0,36,234,2,3
	.word	236677
	.byte	13,36,237,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235138
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_KRSTCLR',0,36,242,2,3
	.word	236740
	.byte	13,36,245,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235234
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_OCS',0,36,250,2,3
	.word	236805
	.byte	13,36,253,2,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235402
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM0',0,36,130,3,3
	.word	236866
	.byte	13,36,133,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235475
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM0SV',0,36,138,3,3
	.word	236928
	.byte	13,36,141,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235552
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM1',0,36,146,3,3
	.word	236992
	.byte	13,36,149,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235625
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM2',0,36,154,3,3
	.word	237054
	.byte	13,36,157,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235698
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM3',0,36,162,3,3
	.word	237116
	.byte	13,36,165,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235772
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM4',0,36,170,3,3
	.word	237178
	.byte	13,36,173,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235846
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM5',0,36,178,3,3
	.word	237240
	.byte	13,36,181,3,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	235920
	.byte	4,2,35,0,0,19
	.byte	'Ifx_STM_TIM6',0,36,186,3,3
	.word	237302
	.byte	17,14,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,19
	.byte	'IfxCpu_CounterMode',0,14,145,1,3
	.word	237364
	.byte	31,14,192,1,9,6,14
	.byte	'counter',0
	.word	9855
	.byte	4,2,35,0,14
	.byte	'overlfow',0
	.word	537
	.byte	1,2,35,4,0,19
	.byte	'IfxCpu_Counter',0,14,196,1,3
	.word	237453
	.byte	31,14,204,1,9,32,14
	.byte	'instruction',0
	.word	237453
	.byte	6,2,35,0,14
	.byte	'clock',0
	.word	237453
	.byte	6,2,35,6,14
	.byte	'counter1',0
	.word	237453
	.byte	6,2,35,12,14
	.byte	'counter2',0
	.word	237453
	.byte	6,2,35,18,14
	.byte	'counter3',0
	.word	237453
	.byte	6,2,35,24,0,19
	.byte	'IfxCpu_Perf',0,14,211,1,3
	.word	237519
	.byte	11
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,37,68,16,4,12
	.byte	'EN0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SMU_ACCEN0_Bits',0,37,102,3
	.word	237637
	.byte	11
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,37,105,16,4,12
	.byte	'reserved_0',0,4
	.word	340
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SMU_ACCEN1_Bits',0,37,108,3
	.word	238194
	.byte	11
	.byte	'_Ifx_SMU_AD_Bits',0,37,111,16,4,12
	.byte	'DF0',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'DF1',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'DF2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'DF3',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'DF4',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'DF5',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'DF6',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'DF7',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'DF8',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'DF9',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'DF10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'DF11',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'DF12',0,1
	.word	537
	.byte	1,3,2,35,1,12
	.byte	'DF13',0,1
	.word	537
	.byte	1,2,2,35,1,12
	.byte	'DF14',0,1
	.word	537
	.byte	1,1,2,35,1,12
	.byte	'DF15',0,1
	.word	537
	.byte	1,0,2,35,1,12
	.byte	'DF16',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'DF17',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'DF18',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'DF19',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'DF20',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'DF21',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'DF22',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'DF23',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'DF24',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'DF25',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'DF26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'DF27',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'DF28',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'DF29',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'DF30',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'DF31',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SMU_AD_Bits',0,37,145,1,3
	.word	238271
	.byte	11
	.byte	'_Ifx_SMU_AEX_Bits',0,37,148,1,16,4,12
	.byte	'IRQ0STS',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'IRQ1STS',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'IRQ2STS',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'RST0STS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'RST1STS',0,1
	.word	537
	.byte	1,3,2,35,0,12
	.byte	'RST2STS',0,1
	.word	537
	.byte	1,2,2,35,0,12
	.byte	'RST3STS',0,1
	.word	537
	.byte	1,1,2,35,0,12
	.byte	'RST4STS',0,1
	.word	537
	.byte	1,0,2,35,0,12
	.byte	'RST5STS',0,1
	.word	537
	.byte	1,7,2,35,1,12
	.byte	'NMISTS',0,1
	.word	537
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	537
	.byte	1,5,2,35,1,12
	.byte	'EMSSTS',0,1
	.word	537
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	537
	.byte	4,0,2,35,1,12
	.byte	'IRQ0AEM',0,1
	.word	537
	.byte	1,7,2,35,2,12
	.byte	'IRQ1AEM',0,1
	.word	537
	.byte	1,6,2,35,2,12
	.byte	'IRQ2AEM',0,1
	.word	537
	.byte	1,5,2,35,2,12
	.byte	'RST0AEM',0,1
	.word	537
	.byte	1,4,2,35,2,12
	.byte	'RST1AEM',0,1
	.word	537
	.byte	1,3,2,35,2,12
	.byte	'RST2AEM',0,1
	.word	537
	.byte	1,2,2,35,2,12
	.byte	'RST3AEM',0,1
	.word	537
	.byte	1,1,2,35,2,12
	.byte	'RST4AEM',0,1
	.word	537
	.byte	1,0,2,35,2,12
	.byte	'RST5AEM',0,1
	.word	537
	.byte	1,7,2,35,3,12
	.byte	'NMIAEM',0,1
	.word	537
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	537
	.byte	1,5,2,35,3,12
	.byte	'EMSAEM',0,1
	.word	537
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	537
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SMU_AEX_Bits',0,37,176,1,3
	.word	238821
	.byte	11
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,37,179,1,16,4,12
	.byte	'IRQ0CLR',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'IRQ1CLR',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'IRQ2CLR',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'RST0CLR',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'RST1CLR',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'RST2CLR',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'RST3CLR',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'RST4CLR',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'RST5CLR',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'NMICLR',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'EMSCLR',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	4,16,2,35,0,12
	.byte	'IRQ0AEMCLR',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'IRQ1AEMCLR',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'IRQ2AEMCLR',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'RST0AEMCLR',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'RST1AEMCLR',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'RST2AEMCLR',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'RST3AEMCLR',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'RST4AEMCLR',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'RST5AEMCLR',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'NMIAEMCLR',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'EMSAEMCLR',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	4,0,2,35,0,0,19
	.byte	'Ifx_SMU_AEXCLR_Bits',0,37,207,1,3
	.word	239378
	.byte	11
	.byte	'_Ifx_SMU_AFCNT_Bits',0,37,210,1,16,4,12
	.byte	'FCNT',0,1
	.word	537
	.byte	4,4,2,35,0,12
	.byte	'ACNT',0,2
	.word	1088
	.byte	12,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	1088
	.byte	14,2,2,35,2,12
	.byte	'FCO',0,1
	.word	537
	.byte	1,1,2,35,3,12
	.byte	'ACO',0,1
	.word	537
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SMU_AFCNT_Bits',0,37,217,1,3
	.word	239974
	.byte	11
	.byte	'_Ifx_SMU_AG_Bits',0,37,220,1,16,4,12
	.byte	'SF0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'SF1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'SF2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'SF3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'SF4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'SF5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'SF6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'SF7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'SF8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'SF9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'SF10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'SF11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'SF12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'SF13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'SF14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'SF15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'SF16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'SF17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'SF18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'SF19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'SF20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'SF21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'SF22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'SF23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'SF24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'SF25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'SF26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'SF27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'SF28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'SF29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'SF30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'SF31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_SMU_AG_Bits',0,37,254,1,3
	.word	240114
	.byte	11
	.byte	'_Ifx_SMU_AGC_Bits',0,37,129,2,16,4,12
	.byte	'IGCS0',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'IGCS1',0,4
	.word	936
	.byte	3,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'IGCS2',0,4
	.word	936
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	5,16,2,35,0,12
	.byte	'RCS',0,4
	.word	936
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	2,8,2,35,0,12
	.byte	'PES',0,4
	.word	936
	.byte	5,3,2,35,0,12
	.byte	'EFRST',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	2,0,2,35,0,0,19
	.byte	'Ifx_SMU_AGC_Bits',0,37,142,2,3
	.word	240665
	.byte	11
	.byte	'_Ifx_SMU_AGCF_Bits',0,37,145,2,16,4,12
	.byte	'CF0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'CF1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'CF2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'CF3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'CF4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'CF5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'CF6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'CF7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'CF8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'CF9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'CF10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'CF11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'CF12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'CF13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'CF14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'CF15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'CF16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'CF17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'CF18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'CF19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'CF20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'CF21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'CF22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'CF23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'CF24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'CF25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'CF26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'CF27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'CF28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'CF29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'CF30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'CF31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_SMU_AGCF_Bits',0,37,179,2,3
	.word	240927
	.byte	11
	.byte	'_Ifx_SMU_AGFSP_Bits',0,37,182,2,16,4,12
	.byte	'FE0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'FE1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'FE2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'FE3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'FE4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'FE5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'FE6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'FE7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'FE8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'FE9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'FE10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'FE11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'FE12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'FE13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'FE14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'FE15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'FE16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'FE17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'FE18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'FE19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'FE20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'FE21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'FE22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'FE23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'FE24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'FE25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'FE26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'FE27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'FE28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'FE29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'FE30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'FE31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_SMU_AGFSP_Bits',0,37,216,2,3
	.word	241482
	.byte	11
	.byte	'_Ifx_SMU_CLC_Bits',0,37,219,2,16,4,12
	.byte	'DISR',0,1
	.word	537
	.byte	1,7,2,35,0,12
	.byte	'DISS',0,1
	.word	537
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'EDIS',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SMU_CLC_Bits',0,37,226,2,3
	.word	242039
	.byte	11
	.byte	'_Ifx_SMU_CMD_Bits',0,37,229,2,16,4,12
	.byte	'CMD',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ARG',0,4
	.word	936
	.byte	4,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SMU_CMD_Bits',0,37,234,2,3
	.word	242182
	.byte	11
	.byte	'_Ifx_SMU_DBG_Bits',0,37,237,2,16,4,12
	.byte	'SSM',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	340
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SMU_DBG_Bits',0,37,241,2,3
	.word	242285
	.byte	11
	.byte	'_Ifx_SMU_FSP_Bits',0,37,244,2,16,4,12
	.byte	'PRE1',0,4
	.word	936
	.byte	3,29,2,35,0,12
	.byte	'PRE2',0,4
	.word	936
	.byte	2,27,2,35,0,12
	.byte	'MODE',0,4
	.word	936
	.byte	2,25,2,35,0,12
	.byte	'PES',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TFSP_LOW',0,4
	.word	936
	.byte	14,10,2,35,0,12
	.byte	'TFSP_HIGH',0,4
	.word	936
	.byte	10,0,2,35,0,0,19
	.byte	'Ifx_SMU_FSP_Bits',0,37,252,2,3
	.word	242373
	.byte	11
	.byte	'_Ifx_SMU_ID_Bits',0,37,255,2,16,4,12
	.byte	'MOD_REV',0,1
	.word	537
	.byte	8,0,2,35,0,12
	.byte	'MOD_TYPE',0,1
	.word	537
	.byte	8,0,2,35,1,12
	.byte	'MOD_NUMBER',0,2
	.word	1088
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SMU_ID_Bits',0,37,132,3,3
	.word	242528
	.byte	11
	.byte	'_Ifx_SMU_KEYS_Bits',0,37,135,3,16,4,12
	.byte	'CFGLCK',0,4
	.word	936
	.byte	8,24,2,35,0,12
	.byte	'PERLCK',0,4
	.word	936
	.byte	8,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SMU_KEYS_Bits',0,37,140,3,3
	.word	242638
	.byte	11
	.byte	'_Ifx_SMU_OCS_Bits',0,37,143,3,16,4,12
	.byte	'TGS',0,1
	.word	537
	.byte	2,6,2,35,0,12
	.byte	'TGB',0,1
	.word	537
	.byte	1,5,2,35,0,12
	.byte	'TG_P',0,1
	.word	537
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	340
	.byte	20,8,2,35,0,12
	.byte	'SUS',0,1
	.word	537
	.byte	4,4,2,35,3,12
	.byte	'SUS_P',0,1
	.word	537
	.byte	1,3,2,35,3,12
	.byte	'SUSSTA',0,1
	.word	537
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	537
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SMU_OCS_Bits',0,37,153,3,3
	.word	242750
	.byte	11
	.byte	'_Ifx_SMU_PCTL_Bits',0,37,156,3,16,4,12
	.byte	'HWDIR',0,4
	.word	936
	.byte	2,30,2,35,0,12
	.byte	'HWEN',0,4
	.word	936
	.byte	2,28,2,35,0,12
	.byte	'GFSCU_EN',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'GFSTS_EN',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'PCS',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	936
	.byte	6,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	9,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	9,0,2,35,0,0,19
	.byte	'Ifx_SMU_PCTL_Bits',0,37,167,3,3
	.word	242942
	.byte	11
	.byte	'_Ifx_SMU_RMCTL_Bits',0,37,170,3,16,4,12
	.byte	'TE0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'TE1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'TE2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'TE3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'TE4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'TE5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'TE6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'TE7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'TE8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'TE9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'TE10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_SMU_RMCTL_Bits',0,37,204,3,3
	.word	243173
	.byte	11
	.byte	'_Ifx_SMU_RMEF_Bits',0,37,207,3,16,4,12
	.byte	'EF0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'EF1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'EF2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'EF3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'EF4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'EF5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'EF6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'EF7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'EF8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'EF9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'EF10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_SMU_RMEF_Bits',0,37,241,3,3
	.word	243877
	.byte	11
	.byte	'_Ifx_SMU_RMSTS_Bits',0,37,244,3,16,4,12
	.byte	'STS0',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'STS1',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'STS2',0,4
	.word	936
	.byte	1,29,2,35,0,12
	.byte	'STS3',0,4
	.word	936
	.byte	1,28,2,35,0,12
	.byte	'STS4',0,4
	.word	936
	.byte	1,27,2,35,0,12
	.byte	'STS5',0,4
	.word	936
	.byte	1,26,2,35,0,12
	.byte	'STS6',0,4
	.word	936
	.byte	1,25,2,35,0,12
	.byte	'STS7',0,4
	.word	936
	.byte	1,24,2,35,0,12
	.byte	'STS8',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'STS9',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'STS10',0,4
	.word	936
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	936
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	936
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	936
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	936
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	936
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	936
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	936
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	936
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	936
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	936
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	936
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	936
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	936
	.byte	1,0,2,35,0,0,19
	.byte	'Ifx_SMU_RMSTS_Bits',0,37,150,4,3
	.word	244579
	.byte	11
	.byte	'_Ifx_SMU_RTAC00_Bits',0,37,153,4,16,4,12
	.byte	'GID0',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ALID0',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'GID1',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'ALID1',0,4
	.word	936
	.byte	5,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC00_Bits',0,37,161,4,3
	.word	245294
	.byte	11
	.byte	'_Ifx_SMU_RTAC01_Bits',0,37,164,4,16,4,12
	.byte	'GID2',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ALID2',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'GID3',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'ALID3',0,4
	.word	936
	.byte	5,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC01_Bits',0,37,172,4,3
	.word	245462
	.byte	11
	.byte	'_Ifx_SMU_RTAC10_Bits',0,37,175,4,16,4,12
	.byte	'GID0',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ALID0',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'GID1',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'ALID1',0,4
	.word	936
	.byte	5,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC10_Bits',0,37,183,4,3
	.word	245630
	.byte	11
	.byte	'_Ifx_SMU_RTAC11_Bits',0,37,186,4,16,4,12
	.byte	'GID2',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ALID2',0,4
	.word	936
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	936
	.byte	7,16,2,35,0,12
	.byte	'GID3',0,4
	.word	936
	.byte	4,12,2,35,0,12
	.byte	'ALID3',0,4
	.word	936
	.byte	5,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	936
	.byte	7,0,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC11_Bits',0,37,194,4,3
	.word	245798
	.byte	11
	.byte	'_Ifx_SMU_RTC_Bits',0,37,197,4,16,4,12
	.byte	'RT0E',0,4
	.word	936
	.byte	1,31,2,35,0,12
	.byte	'RT1E',0,4
	.word	936
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	936
	.byte	6,24,2,35,0,12
	.byte	'RTD',0,4
	.word	936
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SMU_RTC_Bits',0,37,203,4,3
	.word	245966
	.byte	11
	.byte	'_Ifx_SMU_STS_Bits',0,37,206,4,16,4,12
	.byte	'CMD',0,4
	.word	936
	.byte	4,28,2,35,0,12
	.byte	'ARG',0,4
	.word	936
	.byte	4,24,2,35,0,12
	.byte	'RES',0,4
	.word	936
	.byte	1,23,2,35,0,12
	.byte	'ASCE',0,4
	.word	936
	.byte	1,22,2,35,0,12
	.byte	'FSP',0,4
	.word	936
	.byte	2,20,2,35,0,12
	.byte	'FSTS',0,4
	.word	936
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	936
	.byte	3,16,2,35,0,12
	.byte	'RTS0',0,4
	.word	936
	.byte	1,15,2,35,0,12
	.byte	'RTME0',0,4
	.word	936
	.byte	1,14,2,35,0,12
	.byte	'RTS1',0,4
	.word	936
	.byte	1,13,2,35,0,12
	.byte	'RTME1',0,4
	.word	936
	.byte	1,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	936
	.byte	12,0,2,35,0,0,19
	.byte	'Ifx_SMU_STS_Bits',0,37,220,4,3
	.word	246086
	.byte	13,37,228,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	237637
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_ACCEN0',0,37,233,4,3
	.word	246341
	.byte	13,37,236,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	238194
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_ACCEN1',0,37,241,4,3
	.word	246405
	.byte	13,37,244,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	238271
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AD',0,37,249,4,3
	.word	246469
	.byte	13,37,252,4,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	238821
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AEX',0,37,129,5,3
	.word	246529
	.byte	13,37,132,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	239378
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AEXCLR',0,37,137,5,3
	.word	246590
	.byte	13,37,140,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	239974
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AFCNT',0,37,145,5,3
	.word	246654
	.byte	13,37,148,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	240114
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AG',0,37,153,5,3
	.word	246717
	.byte	13,37,156,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	240665
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AGC',0,37,161,5,3
	.word	246777
	.byte	13,37,164,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	240927
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AGCF',0,37,169,5,3
	.word	246838
	.byte	13,37,172,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	241482
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_AGFSP',0,37,177,5,3
	.word	246900
	.byte	13,37,180,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242039
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_CLC',0,37,185,5,3
	.word	246963
	.byte	13,37,188,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242182
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_CMD',0,37,193,5,3
	.word	247024
	.byte	13,37,196,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242285
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_DBG',0,37,201,5,3
	.word	247085
	.byte	13,37,204,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242373
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_FSP',0,37,209,5,3
	.word	247146
	.byte	13,37,212,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242528
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_ID',0,37,217,5,3
	.word	247207
	.byte	13,37,220,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242638
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_KEYS',0,37,225,5,3
	.word	247267
	.byte	13,37,228,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242750
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_OCS',0,37,233,5,3
	.word	247329
	.byte	13,37,236,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	242942
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_PCTL',0,37,241,5,3
	.word	247390
	.byte	13,37,244,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	243173
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RMCTL',0,37,249,5,3
	.word	247452
	.byte	13,37,252,5,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	243877
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RMEF',0,37,129,6,3
	.word	247515
	.byte	13,37,132,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	244579
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RMSTS',0,37,137,6,3
	.word	247577
	.byte	13,37,140,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	245294
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC00',0,37,145,6,3
	.word	247640
	.byte	13,37,148,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	245462
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC01',0,37,153,6,3
	.word	247704
	.byte	13,37,156,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	245630
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC10',0,37,161,6,3
	.word	247768
	.byte	13,37,164,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	245798
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RTAC11',0,37,169,6,3
	.word	247832
	.byte	13,37,172,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	245966
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_RTC',0,37,177,6,3
	.word	247896
	.byte	13,37,180,6,9,4,14
	.byte	'U',0
	.word	340
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	530
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	246086
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SMU_STS',0,37,185,6,3
	.word	247957
	.byte	17,16,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,19
	.byte	'IfxScuCcu_LowPowerDivRatio',0,16,216,2,3
	.word	248018
	.byte	17,16,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,19
	.byte	'IfxScuCcu_ModulationAmplitude',0,16,229,2,3
	.word	248211
	.byte	17,16,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,19
	.byte	'IfxScuCcu_PllInputClockSelection',0,16,131,4,3
	.word	248512
	.byte	17,16,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,19
	.byte	'IfxScuCcu_Traprequest',0,16,141,4,3
	.word	248686
	.byte	17,16,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,19
	.byte	'IfxScuCcu_ModEn',0,16,151,4,3
	.word	248840
	.byte	31,16,162,4,9,6,14
	.byte	'pDivider',0
	.word	537
	.byte	1,2,35,0,14
	.byte	'nDivider',0
	.word	537
	.byte	1,2,35,1,14
	.byte	'k2Divider',0
	.word	537
	.byte	1,2,35,2,14
	.byte	'k3Divider',0
	.word	537
	.byte	1,2,35,3,14
	.byte	'k3DividerBypass',0
	.word	537
	.byte	1,2,35,4,0,19
	.byte	'IfxScuCcu_PerPllConfig',0,16,171,4,3
	.word	248925
	.byte	31,16,176,4,9,4,14
	.byte	'pDivider',0
	.word	537
	.byte	1,2,35,0,14
	.byte	'nDivider',0
	.word	537
	.byte	1,2,35,1,14
	.byte	'k2Divider',0
	.word	537
	.byte	1,2,35,2,0,19
	.byte	'IfxScuCcu_SysPllConfig',0,16,181,4,3
	.word	249063
	.byte	31,16,189,4,9,8,14
	.byte	'value',0
	.word	9855
	.byte	4,2,35,0,14
	.byte	'mask',0
	.word	9855
	.byte	4,2,35,4,0,19
	.byte	'IfxScuCcu_CcuconRegConfig',0,16,193,4,3
	.word	249157
	.byte	31,16,197,4,9,6,14
	.byte	'k2Step',0
	.word	537
	.byte	1,2,35,0,14
	.byte	'waitTime',0
	.word	238
	.byte	4,2,35,2,0,19
	.byte	'IfxScuCcu_PllStepConfig',0,16,201,4,3
	.word	249228
	.byte	31,16,205,4,9,16,14
	.byte	'xtalFrequency',0
	.word	9855
	.byte	4,2,35,0,14
	.byte	'pllInputClockSelection',0
	.word	248512
	.byte	1,2,35,4,14
	.byte	'sysPllConfig',0
	.word	249063
	.byte	4,2,35,6,14
	.byte	'perPllConfig',0
	.word	248925
	.byte	6,2,35,10,0,19
	.byte	'IfxScuCcu_pllsParameterConfig',0,16,211,4,3
	.word	249302
	.byte	31,16,219,4,9,8,14
	.byte	'value',0
	.word	9855
	.byte	4,2,35,0,14
	.byte	'mask',0
	.word	9855
	.byte	4,2,35,4,0,19
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,16,223,4,3
	.word	249447
	.byte	31,16,231,4,9,56,14
	.byte	'ccucon0',0
	.word	249157
	.byte	8,2,35,0,14
	.byte	'ccucon1',0
	.word	249157
	.byte	8,2,35,8,14
	.byte	'ccucon2',0
	.word	249157
	.byte	8,2,35,16,14
	.byte	'ccucon5',0
	.word	249157
	.byte	8,2,35,24,14
	.byte	'ccucon6',0
	.word	249157
	.byte	8,2,35,32,14
	.byte	'ccucon7',0
	.word	249157
	.byte	8,2,35,40,14
	.byte	'ccucon8',0
	.word	249157
	.byte	8,2,35,48,0,19
	.byte	'IfxScuCcu_ClockDistributionConfig',0,16,240,4,3
	.word	249523
	.byte	31,16,244,4,9,20,14
	.byte	'pllsParameters',0
	.word	249302
	.byte	16,2,35,0,14
	.byte	'waitTime',0
	.word	238
	.byte	4,2,35,16,0,19
	.byte	'IfxScuCcu_InitialStepConfig',0,16,248,4,3
	.word	249692
	.byte	25
	.word	249228
	.byte	3
	.word	249778
	.byte	31,16,252,4,9,8,14
	.byte	'numOfSteps',0
	.word	537
	.byte	1,2,35,0,14
	.byte	'pllSteps',0
	.word	249783
	.byte	4,2,35,4,0,19
	.byte	'IfxScuCcu_PllThrottleConfig',0,16,128,5,3
	.word	249788
	.byte	31,16,134,5,9,2,14
	.byte	'Mod_Enable',0
	.word	248840
	.byte	1,2,35,0,14
	.byte	'Mod_Amp',0
	.word	248211
	.byte	1,2,35,1,0,19
	.byte	'IfxScuCcu_Mod_Config',0,16,138,5,3
	.word	249870
	.byte	19
	.byte	'IfxGtm_Dtm_ClockSource',0,17,76,3
	.word	23822
	.byte	17,17,81,9,1,18
	.byte	'IfxGtm_Dtm_Output1Function_signalEdgeTrigger',0,0,18
	.byte	'IfxGtm_Dtm_Output1Function_xorOfDtmInputandShiftSignal',0,1,18
	.byte	'IfxGtm_Dtm_Output1Function_andOfDtmInputandShiftSignal',0,2,18
	.byte	'IfxGtm_Dtm_Output1Function_dtmInputSignal',0,3,0,19
	.byte	'IfxGtm_Dtm_Output1Function',0,17,87,3
	.word	249975
	.byte	17,17,92,9,1,18
	.byte	'IfxGtm_Dtm_Output1Select_inverseDeadTime',0,0,18
	.byte	'IfxGtm_Dtm_Output1Select_specialFunction',0,1,0,19
	.byte	'IfxGtm_Dtm_Output1Select',0,17,96,3
	.word	250221
	.byte	19
	.byte	'IfxGtm_Dtm_DeadTimePath',0,17,107,3
	.word	24140
	.byte	19
	.byte	'IfxGtm_Tom_Timer_Base',0,22,153,1,3
	.word	131038
	.byte	19
	.byte	'IfxGtm_Tom_Timer',0,22,176,1,3
	.word	131149
	.byte	19
	.byte	'IfxGtm_TomDtm_PwmHl',0,23,109,39
	.word	132183
	.byte	19
	.byte	'IfxGtm_Tom_Dtm_PwmHl_Base',0,23,134,1,3
	.word	131775
	.byte	19
	.byte	'IfxGtm_Tom_Dtm_PwmHl_Config',0,23,147,1,3
	.word	132471
	.byte	31,23,151,1,9,16,14
	.byte	'mode',0
	.word	131579
	.byte	1,2,35,0,14
	.byte	'inverted',0
	.word	537
	.byte	1,2,35,1,14
	.byte	'update',0
	.word	131985
	.byte	4,2,35,4,14
	.byte	'updateAndShift',0
	.word	132045
	.byte	4,2,35,8,14
	.byte	'updatePulse',0
	.word	132115
	.byte	4,2,35,12,0,19
	.byte	'IfxGtm_Tom_Dtm_PwmHl_Mode',0,23,158,1,3
	.word	250535
	.byte	15,80
	.word	250535
	.byte	16,4,0
.L503:
	.byte	25
	.word	250670
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L148:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,53,0,73,19,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,22,0,3,8,58,15,59,15,57,15,73,19,0,0,20,21,1,73,19,54,15,39
	.byte	12,0,0,21,5,0,73,19,0,0,22,21,1,54,15,39,12,0,0,23,13,0,73,19,11,15,56,9,0,0,24,11,1,0,0,25,38,0,73,19
	.byte	0,0,26,46,1,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,28,5,0,3,8,73
	.byte	19,0,0,29,46,1,49,19,0,0,30,5,0,49,19,0,0,31,19,1,58,15,59,15,57,15,11,15,0,0,32,46,1,3,8,58,15,59,15
	.byte	57,15,54,15,39,12,63,12,60,12,0,0,33,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,34,29
	.byte	1,49,19,0,0,35,11,0,49,19,0,0,36,5,0,58,15,59,15,57,15,73,19,0,0,37,46,0,3,8,58,15,59,15,57,15,54,15,63
	.byte	12,60,12,0,0,38,21,0,54,15,0,0,39,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L149:
	.word	.L602-.L601
.L601:
	.half	3
	.word	.L604-.L603
.L603:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap',0
	.byte	'D:\\App\\Tasking6_3_Install\\ctc\\include\\',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxScuWdt.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxStdIf_Timer.h',0,6,0,0
	.byte	'IfxStdIf.h',0,6,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Atom.h',0,0
	.byte	0,0
	.byte	'IfxGtm_regdef.h',0,3,0,0
	.byte	'IfxGtm_cfg.h',0,7,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,7,0,0
	.byte	'IfxScuCcu.h',0,4,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Dtm.h',0,0
	.byte	0,0
	.byte	'IfxStdIf_PwmHl.h',0,6,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Tom.h',0,0
	.byte	0,0
	.byte	'IfxGtm_PinMap.h',0,8,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer\\IfxGtm_Tom_Timer.h',0
	.byte	0,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Cmu.h',0,0
	.byte	0,0
	.byte	'string.h',0,9,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'stddef.h',0,9,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,7,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,7,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm.h',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Tbu.h',0,0
	.byte	0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Tim.h',0,0
	.byte	0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0,0
.L604:
.L602:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.debug_info'
.L150:
	.word	929
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_init',0,1,159,1,9
	.word	.L287
	.byte	1,1,1
	.word	.L95,.L288,.L94
	.byte	4
	.byte	'driver',0,1,159,1,56
	.word	.L289,.L290
	.byte	4
	.byte	'config',0,1,159,1,99
	.word	.L291,.L292
	.byte	5
	.word	.L95,.L288
	.byte	6
	.byte	'result',0,1,161,1,24
	.word	.L287,.L293
	.byte	6
	.byte	'channelsMask',0,1,163,1,24
	.word	.L294,.L295
	.byte	6
	.byte	'channelIndex',0,1,164,1,24
	.word	.L296,.L297
	.byte	6
	.byte	'timer',0,1,166,1,23
	.word	.L298,.L299
	.byte	5
	.word	.L300,.L288
	.byte	6
	.byte	'clock',0,1,182,1,20
	.word	.L301,.L302
	.byte	7
	.word	.L303
	.byte	6
	.byte	'channel',0,1,186,1,23
	.word	.L304,.L305
	.byte	8
	.word	.L306,.L307,.L5
	.byte	9
	.word	.L308,.L309
	.byte	9
	.word	.L310,.L311
	.byte	10
	.word	.L312,.L313
	.byte	6
	.byte	'dtm',0,2,134,2,16
	.word	.L316,.L317
	.byte	0,0,8
	.word	.L306,.L314,.L315
	.byte	9
	.word	.L308,.L309
	.byte	9
	.word	.L310,.L311
	.byte	0,8
	.word	.L318,.L319,.L320
	.byte	9
	.word	.L321,.L322
	.byte	9
	.word	.L323,.L324
	.byte	11
	.word	.L325,.L319,.L320
	.byte	0,8
	.word	.L326,.L327,.L8
	.byte	9
	.word	.L328,.L329
	.byte	12
	.word	.L330,.L327,.L8
	.byte	6
	.byte	'channel',0,2,151,2,19
	.word	.L331,.L332
	.byte	0,0,8
	.word	.L333,.L334,.L335
	.byte	9
	.word	.L336,.L337
	.byte	9
	.word	.L338,.L339
	.byte	9
	.word	.L340,.L341
	.byte	10
	.word	.L342,.L343
	.byte	6
	.byte	'shift',0,2,220,1,12
	.word	.L296,.L346
	.byte	0,0,8
	.word	.L333,.L344,.L345
	.byte	9
	.word	.L336,.L337
	.byte	9
	.word	.L338,.L339
	.byte	9
	.word	.L340,.L341
	.byte	0,8
	.word	.L347,.L348,.L349
	.byte	9
	.word	.L350,.L351
	.byte	9
	.word	.L352,.L353
	.byte	9
	.word	.L354,.L355
	.byte	12
	.word	.L356,.L348,.L349
	.byte	6
	.byte	'shift',0,2,229,1,12
	.word	.L296,.L357
	.byte	0,0,0,8
	.word	.L306,.L358,.L19
	.byte	9
	.word	.L308,.L309
	.byte	9
	.word	.L310,.L311
	.byte	10
	.word	.L312,.L359
	.byte	6
	.byte	'dtm',0,2,134,2,16
	.word	.L316,.L362
	.byte	0,0,8
	.word	.L306,.L360,.L361
	.byte	9
	.word	.L308,.L309
	.byte	9
	.word	.L310,.L311
	.byte	0,5
	.word	.L363,.L288
	.byte	6
	.byte	'tOn',0,1,254,1,20
	.word	.L364,.L365
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,1,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,12,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.debug_line'
.L152:
	.word	.L606-.L605
.L605:
	.half	3
	.word	.L608-.L607
.L607:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Dtm.h',0,0
	.byte	0,0,0
.L608:
	.byte	5,37,7,0,5,2
	.word	.L95
	.byte	3,167,1,1,5,9,3,119,1,5,37,9
	.half	.L530-.L95
	.byte	3,4,1,3,3,1,5,35,9
	.half	.L507-.L530
	.byte	3,2,1,5,37,9
	.half	.L609-.L507
	.byte	3,2,1,5,35,3,127,1,9
	.half	.L509-.L609
	.byte	3,1,1,9
	.half	.L610-.L509
	.byte	3,1,1,5,9,9
	.half	.L611-.L610
	.byte	3,116,1,5,49,9
	.half	.L504-.L611
	.byte	3,13,1,5,35,9
	.half	.L510-.L504
	.byte	1,5,37,9
	.half	.L612-.L510
	.byte	3,122,1,5,49,9
	.half	.L534-.L612
	.byte	3,7,1,5,35,9
	.half	.L613-.L534
	.byte	1,5,53,9
	.half	.L614-.L613
	.byte	3,3,1,5,49,9
	.half	.L615-.L614
	.byte	3,126,1,5,35,9
	.half	.L616-.L615
	.byte	1,5,37,9
	.half	.L617-.L616
	.byte	3,115,1,5,60,9
	.half	.L533-.L617
	.byte	3,15,1,5,43,9
	.half	.L618-.L533
	.byte	1,5,60,9
	.half	.L508-.L618
	.byte	1,5,53,9
	.half	.L619-.L508
	.byte	1,5,34,9
	.half	.L620-.L619
	.byte	1,5,68,9
	.half	.L621-.L620
	.byte	3,2,1,5,35,9
	.half	.L622-.L621
	.byte	1,5,62,9
	.half	.L300-.L622
	.byte	3,4,1,5,74,9
	.half	.L506-.L300
	.byte	1,5,26,9
	.half	.L505-.L506
	.byte	1,5,84,3,2,1,5,23,9
	.half	.L529-.L505
	.byte	1,5,15,3,5,1,5,68,9
	.half	.L527-.L529
	.byte	3,123,1,5,104,9
	.half	.L3-.L527
	.byte	3,5,1,5,159,1,9
	.half	.L512-.L3
	.byte	1,5,173,1,9
	.half	.L623-.L512
	.byte	1,4,2,5,5,9
	.half	.L307-.L623
	.byte	3,203,0,1,5,15,7,9
	.half	.L624-.L307
	.byte	3,2,1,5,23,9
	.half	.L513-.L624
	.byte	1,5,57,1,5,13,9
	.half	.L4-.L513
	.byte	3,4,1,4,1,5,67,9
	.half	.L5-.L4
	.byte	3,175,127,1,5,134,1,9
	.half	.L314-.L5
	.byte	1,5,66,9
	.half	.L315-.L314
	.byte	3,1,1,5,63,9
	.half	.L625-.L315
	.byte	1,5,34,9
	.half	.L626-.L625
	.byte	1,5,35,3,127,1,5,9,9
	.half	.L627-.L626
	.byte	3,5,1,5,47,7,9
	.half	.L628-.L627
	.byte	3,3,1,5,41,9
	.half	.L629-.L628
	.byte	3,2,1,5,52,9
	.half	.L630-.L629
	.byte	3,126,1,5,66,9
	.half	.L631-.L630
	.byte	1,5,39,9
	.half	.L524-.L631
	.byte	3,1,1,5,43,9
	.half	.L632-.L524
	.byte	3,1,1,5,48,9
	.half	.L633-.L632
	.byte	3,4,1,5,43,9
	.half	.L634-.L633
	.byte	3,124,1,5,64,9
	.half	.L635-.L634
	.byte	3,4,1,5,38,9
	.half	.L636-.L635
	.byte	3,125,1,5,64,3,3,1,5,65,9
	.half	.L637-.L636
	.byte	3,1,1,5,49,1,5,65,9
	.half	.L515-.L637
	.byte	1,5,48,9
	.half	.L516-.L515
	.byte	3,1,1,5,76,9
	.half	.L638-.L516
	.byte	1,5,66,9
	.half	.L639-.L638
	.byte	3,1,1,5,50,1,5,66,9
	.half	.L517-.L639
	.byte	1,5,50,9
	.half	.L518-.L517
	.byte	3,5,1,5,72,9
	.half	.L640-.L518
	.byte	1,4,2,5,16,9
	.half	.L319-.L640
	.byte	3,3,1,5,25,9
	.half	.L641-.L319
	.byte	1,4,1,5,79,9
	.half	.L320-.L641
	.byte	3,126,1,5,84,9
	.half	.L642-.L320
	.byte	1,5,98,9
	.half	.L643-.L642
	.byte	1,4,2,5,47,9
	.half	.L327-.L643
	.byte	3,197,0,1,5,59,9
	.half	.L644-.L327
	.byte	1,5,52,7,9
	.half	.L645-.L644
	.byte	3,4,1,5,64,9
	.half	.L646-.L645
	.byte	1,5,19,7,9
	.half	.L647-.L646
	.byte	3,2,1,5,66,1,5,17,9
	.half	.L9-.L647
	.byte	3,4,1,4,1,5,46,9
	.half	.L8-.L9
	.byte	3,177,127,1,4,2,5,25,9
	.half	.L334-.L8
	.byte	3,8,1,4,1,5,58,9
	.half	.L335-.L334
	.byte	3,121,1,4,2,5,20,9
	.half	.L344-.L335
	.byte	3,8,1,5,42,9
	.half	.L648-.L344
	.byte	3,127,1,5,37,9
	.half	.L520-.L648
	.byte	3,3,1,5,42,9
	.half	.L649-.L520
	.byte	1,5,22,9
	.half	.L650-.L649
	.byte	3,126,1,5,42,9
	.half	.L651-.L650
	.byte	3,2,1,5,40,9
	.half	.L652-.L651
	.byte	1,5,73,9
	.half	.L653-.L652
	.byte	1,5,49,9
	.half	.L521-.L653
	.byte	1,5,21,1,4,1,5,92,9
	.half	.L345-.L521
	.byte	3,119,1,5,58,9
	.half	.L654-.L345
	.byte	1,4,2,5,25,9
	.half	.L348-.L654
	.byte	3,15,1,5,42,9
	.half	.L655-.L348
	.byte	1,5,37,9
	.half	.L522-.L655
	.byte	3,3,1,5,22,9
	.half	.L656-.L522
	.byte	3,126,1,5,42,9
	.half	.L657-.L656
	.byte	3,2,1,5,40,9
	.half	.L658-.L657
	.byte	1,5,73,9
	.half	.L659-.L658
	.byte	1,5,49,9
	.half	.L523-.L659
	.byte	1,5,21,1,4,1,5,23,9
	.half	.L349-.L523
	.byte	3,113,1,5,13,9
	.half	.L660-.L349
	.byte	1,5,35,7,9
	.half	.L661-.L660
	.byte	3,3,1,5,60,9
	.half	.L662-.L661
	.byte	1,5,53,9
	.half	.L663-.L662
	.byte	1,5,21,9
	.half	.L664-.L663
	.byte	1,5,48,9
	.half	.L665-.L664
	.byte	3,127,1,5,149,1,9
	.half	.L666-.L665
	.byte	3,1,1,5,53,9
	.half	.L667-.L666
	.byte	3,127,1,5,149,1,9
	.half	.L668-.L667
	.byte	3,1,1,5,49,9
	.half	.L11-.L668
	.byte	3,4,1,5,56,9
	.half	.L669-.L11
	.byte	1,5,70,9
	.half	.L670-.L669
	.byte	1,5,41,9
	.half	.L525-.L670
	.byte	3,1,1,5,23,9
	.half	.L671-.L525
	.byte	3,3,1,5,13,9
	.half	.L526-.L671
	.byte	1,5,58,7,9
	.half	.L672-.L526
	.byte	3,3,1,5,35,1,5,62,9
	.half	.L673-.L672
	.byte	1,5,55,9
	.half	.L674-.L673
	.byte	1,5,21,9
	.half	.L675-.L674
	.byte	1,5,48,9
	.half	.L676-.L675
	.byte	3,127,1,5,151,1,9
	.half	.L677-.L676
	.byte	3,1,1,5,55,9
	.half	.L678-.L677
	.byte	3,127,1,5,151,1,9
	.half	.L679-.L678
	.byte	3,1,1,5,82,9
	.half	.L6-.L679
	.byte	3,81,1,5,55,9
	.half	.L2-.L6
	.byte	1,5,68,9
	.half	.L680-.L2
	.byte	1,5,5,7,9
	.half	.L681-.L680
	.byte	3,53,1,5,103,7,9
	.half	.L682-.L681
	.byte	3,2,1,5,158,1,9
	.half	.L683-.L682
	.byte	1,5,161,1,9
	.half	.L684-.L683
	.byte	1,4,2,5,5,9
	.half	.L358-.L684
	.byte	3,25,1,5,15,7,9
	.half	.L685-.L358
	.byte	3,2,1,5,23,9
	.half	.L535-.L685
	.byte	1,5,57,1,5,13,9
	.half	.L18-.L535
	.byte	3,4,1,4,1,5,66,9
	.half	.L19-.L18
	.byte	3,97,1,5,133,1,9
	.half	.L360-.L19
	.byte	1,5,30,9
	.half	.L361-.L360
	.byte	1,5,85,9
	.half	.L686-.L361
	.byte	3,1,1,5,29,9
	.half	.L538-.L686
	.byte	1,5,96,3,127,1,5,30,9
	.half	.L17-.L538
	.byte	3,5,1,5,58,9
	.half	.L20-.L17
	.byte	3,3,1,5,68,9
	.half	.L540-.L20
	.byte	3,2,1,5,47,1,5,71,9
	.half	.L687-.L540
	.byte	1,5,62,9
	.half	.L542-.L687
	.byte	3,1,1,5,41,1,5,65,9
	.half	.L688-.L542
	.byte	1,5,42,9
	.half	.L544-.L688
	.byte	3,2,1,5,65,9
	.half	.L363-.L544
	.byte	3,2,1,5,63,9
	.half	.L689-.L363
	.byte	1,5,44,9
	.half	.L690-.L689
	.byte	3,1,1,5,70,9
	.half	.L547-.L690
	.byte	3,3,1,5,49,1,5,76,9
	.half	.L691-.L547
	.byte	1,5,73,9
	.half	.L548-.L691
	.byte	1,5,76,1,5,34,9
	.half	.L549-.L548
	.byte	3,1,1,5,56,9
	.half	.L692-.L549
	.byte	3,1,1,5,49,1,5,76,9
	.half	.L693-.L692
	.byte	1,5,73,9
	.half	.L550-.L693
	.byte	1,5,76,1,5,23,9
	.half	.L551-.L550
	.byte	3,4,1,5,56,3,2,1,5,68,9
	.half	.L528-.L551
	.byte	3,126,1,5,61,9
	.half	.L23-.L528
	.byte	3,2,1,5,82,9
	.half	.L553-.L23
	.byte	3,126,1,5,55,9
	.half	.L22-.L553
	.byte	1,5,68,9
	.half	.L694-.L22
	.byte	1,5,5,7,9
	.half	.L695-.L694
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L154-.L695
	.byte	0,1,1
.L606:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L95,0,.L154-.L95,0,0
.L303:
	.word	-1,.L95,.L3-.L95,.L6-.L95,-1,.L97,0,.L279-.L97,-1,.L99,0,.L269-.L99,0,0
.L313:
	.word	-1,.L95,.L307-.L95,.L5-.L95,.L314-.L95,.L315-.L95,0,0
.L343:
	.word	-1,.L95,.L334-.L95,.L335-.L95,.L344-.L95,.L345-.L95,0,0
.L359:
	.word	-1,.L95,.L358-.L95,.L19-.L95,.L360-.L95,.L361-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.debug_info'
.L155:
	.word	266
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_initConfig',0,1,145,2,6,1,1,1
	.word	.L101,.L366,.L100
	.byte	4
	.byte	'config',0,1,145,2,67
	.word	.L367,.L368
	.byte	5
	.word	.L101,.L366
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.debug_line'
.L157:
	.word	.L697-.L696
.L696:
	.half	3
	.word	.L699-.L698
.L698:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L699:
	.byte	5,6,7,0,5,2
	.word	.L101
	.byte	3,144,2,1,5,38,9
	.half	.L555-.L101
	.byte	3,2,1,5,29,9
	.half	.L554-.L555
	.byte	3,1,1,5,27,9
	.half	.L700-.L554
	.byte	1,5,28,9
	.half	.L701-.L700
	.byte	3,1,1,5,26,1,5,27,9
	.half	.L702-.L701
	.byte	3,1,1,9
	.half	.L703-.L702
	.byte	3,1,1,9
	.half	.L704-.L703
	.byte	3,1,1,5,29,9
	.half	.L705-.L704
	.byte	3,1,1,5,27,1,5,1,9
	.half	.L706-.L705
	.byte	3,1,1,7,9
	.half	.L159-.L706
	.byte	0,1,1
.L697:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L101,0,.L159-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.debug_info'
.L160:
	.word	271
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_getDeadtime',0,1,157,2,9
	.word	.L369
	.byte	1,1,1
	.word	.L103,.L370,.L102
	.byte	4
	.byte	'driver',0,1,157,2,63
	.word	.L289,.L371
	.byte	5
	.word	.L103,.L370
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.debug_line'
.L162:
	.word	.L708-.L707
.L707:
	.half	3
	.word	.L710-.L709
.L709:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L710:
	.byte	5,69,7,0,5,2
	.word	.L103
	.byte	3,158,2,1,5,41,9
	.half	.L711-.L103
	.byte	1,4,2,5,12,9
	.half	.L712-.L711
	.byte	3,150,1,1,5,18,9
	.half	.L713-.L712
	.byte	1,4,1,5,1,3,235,126,1,7,9
	.half	.L164-.L713
	.byte	0,1,1
.L708:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L103,0,.L164-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.debug_info'
.L165:
	.word	275
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick',0,1,163,2,14
	.word	.L372
	.byte	1,1,1
	.word	.L105,.L373,.L104
	.byte	4
	.byte	'driver',0,1,163,2,72
	.word	.L289,.L374
	.byte	5
	.word	.L105,.L373
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.debug_line'
.L167:
	.word	.L715-.L714
.L714:
	.half	3
	.word	.L717-.L716
.L716:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L717:
	.byte	5,24,7,0,5,2
	.word	.L105
	.byte	3,164,2,1,5,1,9
	.half	.L718-.L105
	.byte	3,1,1,7,9
	.half	.L169-.L718
	.byte	0,1,1
.L715:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L105,0,.L169-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.debug_info'
.L170:
	.word	271
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_getMinPulse',0,1,169,2,9
	.word	.L369
	.byte	1,1,1
	.word	.L107,.L375,.L106
	.byte	4
	.byte	'driver',0,1,169,2,63
	.word	.L289,.L376
	.byte	5
	.word	.L107,.L375
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.debug_line'
.L172:
	.word	.L720-.L719
.L719:
	.half	3
	.word	.L722-.L721
.L721:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L722:
	.byte	5,9,7,0,5,2
	.word	.L107
	.byte	3,168,2,1,5,78,9
	.half	.L557-.L107
	.byte	3,2,1,5,140,1,9
	.half	.L723-.L557
	.byte	1,5,41,9
	.half	.L556-.L723
	.byte	1,5,88,9
	.half	.L558-.L556
	.byte	1,4,2,5,12,9
	.half	.L724-.L558
	.byte	3,138,1,1,4,1,5,54,9
	.half	.L725-.L724
	.byte	3,246,126,1,4,2,5,18,9
	.half	.L726-.L725
	.byte	3,138,1,1,4,1,5,1,3,247,126,1,7,9
	.half	.L174-.L726
	.byte	0,1,1
.L720:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L107,0,.L174-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.debug_info'
.L175:
	.word	267
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_getMode',0,1,175,2,14
	.word	.L377
	.byte	1,1,1
	.word	.L109,.L378,.L108
	.byte	4
	.byte	'driver',0,1,175,2,64
	.word	.L289,.L379
	.byte	5
	.word	.L109,.L378
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.debug_line'
.L177:
	.word	.L728-.L727
.L727:
	.half	3
	.word	.L730-.L729
.L729:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L730:
	.byte	5,24,7,0,5,2
	.word	.L109
	.byte	3,176,2,1,5,1,9
	.half	.L731-.L109
	.byte	3,1,1,7,9
	.half	.L179-.L731
	.byte	0,1,1
.L728:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L109,0,.L179-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.debug_info'
.L180:
	.word	474
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setDeadtime',0,1,181,2,9
	.word	.L287
	.byte	1,1,1
	.word	.L111,.L380,.L110
	.byte	4
	.byte	'driver',0,1,181,2,63
	.word	.L289,.L381
	.byte	4
	.byte	'deadtime',0,1,181,2,79
	.word	.L369,.L382
	.byte	5
	.word	.L111,.L380
	.byte	6
	.byte	'channelIndex',0,1,183,2,20
	.word	.L296,.L383
	.byte	7
	.word	.L384,.L385,.L386
	.byte	8
	.word	.L387,.L388
	.byte	8
	.word	.L389,.L390
	.byte	9
	.word	.L391,.L385,.L386
	.byte	0,7
	.word	.L392,.L393,.L394
	.byte	8
	.word	.L395,.L396
	.byte	8
	.word	.L397,.L398
	.byte	8
	.word	.L399,.L400
	.byte	8
	.word	.L401,.L402
	.byte	10
	.word	.L403,.L404
	.byte	0,7
	.word	.L392,.L405,.L31
	.byte	8
	.word	.L395,.L396
	.byte	8
	.word	.L397,.L398
	.byte	8
	.word	.L399,.L400
	.byte	8
	.word	.L401,.L402
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.debug_line'
.L182:
	.word	.L733-.L732
.L732:
	.half	3
	.word	.L735-.L734
.L734:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Dtm.h',0,0
	.byte	0,0,0
.L735:
	.byte	5,57,7,0,5,2
	.word	.L111
	.byte	3,183,2,1,4,2,5,20,9
	.half	.L385-.L111
	.byte	3,136,1,1,4,1,5,17,9
	.half	.L386-.L385
	.byte	3,250,126,1,5,5,9
	.half	.L736-.L386
	.byte	1,5,16,7,9
	.half	.L737-.L736
	.byte	3,2,1,5,1,3,13,1,5,31,7,9
	.half	.L29-.L737
	.byte	3,119,1,5,27,9
	.half	.L738-.L29
	.byte	3,2,1,5,42,3,2,1,5,69,9
	.half	.L559-.L738
	.byte	1,5,72,9
	.half	.L739-.L559
	.byte	3,126,1,5,47,9
	.half	.L32-.L739
	.byte	3,2,1,5,81,9
	.half	.L740-.L32
	.byte	1,5,104,9
	.half	.L393-.L740
	.byte	1,4,3,5,12,9
	.half	.L741-.L393
	.byte	3,104,1,5,38,9
	.half	.L742-.L741
	.byte	3,1,1,5,27,9
	.half	.L743-.L742
	.byte	3,127,1,4,1,5,86,9
	.half	.L394-.L743
	.byte	3,22,1,4,3,5,36,9
	.half	.L405-.L394
	.byte	3,106,1,5,27,9
	.half	.L744-.L405
	.byte	3,1,1,5,36,9
	.half	.L745-.L744
	.byte	1,4,1,5,59,9
	.half	.L31-.L745
	.byte	3,21,1,5,72,9
	.half	.L746-.L31
	.byte	1,5,12,7,9
	.half	.L747-.L746
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L184-.L747
	.byte	0,1,1
.L733:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L111,0,.L184-.L111,0,0
.L404:
	.word	-1,.L111,.L393-.L111,.L394-.L111,.L405-.L111,.L31-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.debug_info'
.L185:
	.word	339
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setMinPulse',0,1,204,2,9
	.word	.L287
	.byte	1,1,1
	.word	.L113,.L406,.L112
	.byte	4
	.byte	'driver',0,1,204,2,63
	.word	.L289,.L407
	.byte	4
	.byte	'minPulse',0,1,204,2,79
	.word	.L369,.L408
	.byte	5
	.word	.L113,.L406
	.byte	6
	.word	.L384,.L409,.L410
	.byte	7
	.word	.L387,.L411
	.byte	7
	.word	.L389,.L412
	.byte	8
	.word	.L391,.L409,.L410
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.debug_line'
.L187:
	.word	.L749-.L748
.L748:
	.half	3
	.word	.L751-.L750
.L750:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L751:
	.byte	5,9,7,0,5,2
	.word	.L113
	.byte	3,203,2,1,5,57,9
	.half	.L560-.L113
	.byte	3,2,1,5,70,9
	.half	.L752-.L560
	.byte	1,4,2,5,20,9
	.half	.L409-.L752
	.byte	3,242,0,1,4,1,5,87,9
	.half	.L753-.L409
	.byte	3,144,127,1,5,35,9
	.half	.L410-.L753
	.byte	1,5,27,1,5,12,9
	.half	.L754-.L410
	.byte	3,3,1,5,35,9
	.half	.L755-.L754
	.byte	3,126,1,5,48,9
	.half	.L756-.L755
	.byte	1,5,56,9
	.half	.L757-.L756
	.byte	1,5,27,1,5,1,9
	.half	.L758-.L757
	.byte	3,3,1,7,9
	.half	.L189-.L758
	.byte	0,1,1
.L749:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L113,0,.L189-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.debug_info'
.L190:
	.word	320
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setMode',0,1,215,2,9
	.word	.L287
	.byte	1,1,1
	.word	.L115,.L413,.L114
	.byte	4
	.byte	'driver',0,1,215,2,59
	.word	.L289,.L414
	.byte	4
	.byte	'mode',0,1,215,2,80
	.word	.L377,.L415
	.byte	5
	.word	.L416
	.byte	6
	.byte	'result',0,1,217,2,33
	.word	.L287,.L417
	.byte	6
	.byte	'base',0,1,218,2,32
	.word	.L418,.L419
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.debug_line'
.L192:
	.word	.L760-.L759
.L759:
	.half	3
	.word	.L762-.L761
.L761:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L762:
	.byte	5,13,7,0,5,2
	.word	.L115
	.byte	3,219,2,1,5,40,9
	.half	.L763-.L115
	.byte	3,125,1,5,5,9
	.half	.L561-.L763
	.byte	3,3,1,5,13,7,9
	.half	.L764-.L561
	.byte	3,2,1,5,70,7,9
	.half	.L765-.L764
	.byte	1,5,75,9
	.half	.L766-.L765
	.byte	1,5,83,9
	.half	.L767-.L766
	.byte	1,5,20,7,9
	.half	.L36-.L767
	.byte	3,2,1,9
	.half	.L768-.L36
	.byte	3,1,1,5,32,9
	.half	.L37-.L768
	.byte	3,5,1,5,61,9
	.half	.L769-.L37
	.byte	3,1,1,5,66,9
	.half	.L770-.L769
	.byte	1,5,32,9
	.half	.L771-.L770
	.byte	1,5,66,9
	.half	.L772-.L771
	.byte	3,1,1,5,32,9
	.half	.L773-.L772
	.byte	1,5,66,9
	.half	.L774-.L773
	.byte	3,1,1,5,32,9
	.half	.L775-.L774
	.byte	1,5,9,9
	.half	.L776-.L775
	.byte	3,2,1,5,62,7,9
	.half	.L777-.L776
	.byte	3,2,1,5,28,9
	.half	.L778-.L777
	.byte	1,5,1,9
	.half	.L35-.L778
	.byte	3,17,1,7,9
	.half	.L194-.L35
	.byte	0,1,1
.L760:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L115,0,.L194-.L115,0,0
.L416:
	.word	-1,.L115,0,.L413-.L115,-1,.L117,0,.L274-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.debug_info'
.L195:
	.word	309
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift',0,1,129,3,6,1,1,1
	.word	.L119,.L420,.L118
	.byte	4
	.byte	'driver',0,1,129,3,66
	.word	.L289,.L421
	.byte	4
	.byte	'tOn',0,1,129,3,90
	.word	.L422,.L423
	.byte	4
	.byte	'shift',0,1,129,3,111
	.word	.L422,.L424
	.byte	5
	.word	.L119,.L420
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.debug_line'
.L197:
	.word	.L780-.L779
.L779:
	.half	3
	.word	.L782-.L781
.L781:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L782:
	.byte	5,11,7,0,5,2
	.word	.L119
	.byte	3,130,3,1,5,41,9
	.half	.L783-.L119
	.byte	1,5,1,7,9
	.half	.L199-.L783
	.byte	3,1,0,1,1
.L780:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L119,0,.L199-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.debug_info'
.L200:
	.word	301
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L203,.L202
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setPulse',0,1,135,3,6,1,1,1
	.word	.L121,.L425,.L120
	.byte	4
	.byte	'driver',0,1,135,3,57
	.word	.L289,.L426
	.byte	4
	.byte	'tOn',0,1,135,3,74
	.word	.L427,.L428
	.byte	4
	.byte	'offset',0,1,135,3,88
	.word	.L427,.L429
	.byte	5
	.word	.L121,.L425
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.debug_line'
.L202:
	.word	.L785-.L784
.L784:
	.half	3
	.word	.L787-.L786
.L786:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L787:
	.byte	5,11,7,0,5,2
	.word	.L121
	.byte	3,136,3,1,5,38,9
	.half	.L788-.L121
	.byte	1,5,1,7,9
	.half	.L204-.L788
	.byte	3,1,0,1,1
.L785:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.debug_ranges'
.L203:
	.word	-1,.L121,0,.L204-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.debug_info'
.L205:
	.word	312
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L208,.L207
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setupChannels',0,1,141,3,6,1,1,1
	.word	.L123,.L430,.L122
	.byte	4
	.byte	'driver',0,1,141,3,62
	.word	.L289,.L431
	.byte	4
	.byte	'activeCh',0,1,141,3,79
	.word	.L432,.L433
	.byte	4
	.byte	'stuckSt',0,1,141,3,98
	.word	.L432,.L434
	.byte	5
	.word	.L123,.L430
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.debug_line'
.L207:
	.word	.L790-.L789
.L789:
	.half	3
	.word	.L792-.L791
.L791:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L792:
	.byte	5,1,7,0,5,2
	.word	.L123
	.byte	3,146,3,1,7,9
	.half	.L209-.L123
	.byte	0,1,1
.L790:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L123,0,.L209-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_info'
.L210:
	.word	293
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L213,.L212
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit',0,1,150,3,9
	.word	.L287
	.byte	1,1,1
	.word	.L125,.L435,.L124
	.byte	4
	.byte	'stdif',0,1,150,3,61
	.word	.L436,.L437
	.byte	4
	.byte	'driver',0,1,150,3,89
	.word	.L289,.L438
	.byte	5
	.word	.L125,.L435
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_line'
.L212:
	.word	.L794-.L793
.L793:
	.half	3
	.word	.L796-.L795
.L795:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L796:
	.byte	5,19,7,0,5,2
	.word	.L125
	.byte	3,152,3,1,5,9,3,125,1,5,22,9
	.half	.L563-.L125
	.byte	3,3,1,5,9,3,125,1,5,22,9
	.half	.L564-.L563
	.byte	3,3,1,5,33,9
	.half	.L562-.L564
	.byte	3,4,1,5,35,9
	.half	.L797-.L562
	.byte	3,1,1,5,33,9
	.half	.L798-.L797
	.byte	1,5,35,9
	.half	.L799-.L798
	.byte	3,1,1,5,33,9
	.half	.L800-.L799
	.byte	1,5,35,9
	.half	.L801-.L800
	.byte	3,1,1,5,33,9
	.half	.L802-.L801
	.byte	1,5,35,9
	.half	.L803-.L802
	.byte	3,1,1,5,33,9
	.half	.L804-.L803
	.byte	1,5,35,9
	.half	.L805-.L804
	.byte	3,1,1,5,33,9
	.half	.L806-.L805
	.byte	1,5,35,9
	.half	.L807-.L806
	.byte	3,1,1,5,33,9
	.half	.L808-.L807
	.byte	1,5,35,9
	.half	.L809-.L808
	.byte	3,1,1,5,33,9
	.half	.L810-.L809
	.byte	1,5,35,9
	.half	.L811-.L810
	.byte	3,1,1,5,33,9
	.half	.L812-.L811
	.byte	1,5,35,9
	.half	.L813-.L812
	.byte	3,1,1,5,33,9
	.half	.L814-.L813
	.byte	1,5,35,9
	.half	.L815-.L814
	.byte	3,1,1,5,33,9
	.half	.L816-.L815
	.byte	1,5,35,9
	.half	.L817-.L816
	.byte	3,1,1,5,33,9
	.half	.L818-.L817
	.byte	1,5,43,9
	.half	.L819-.L818
	.byte	3,1,1,5,58,9
	.half	.L820-.L819
	.byte	1,5,12,9
	.half	.L821-.L820
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L214-.L821
	.byte	0,1,1
.L794:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L125,0,.L214-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.debug_info'
.L215:
	.word	282
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L218,.L217
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_setOnTime',0,2,1,143,1,17,1,1
	.word	.L93,.L439,.L92
	.byte	4
	.byte	'driver',0,1,143,1,69
	.word	.L289,.L440
	.byte	4
	.byte	'tOn',0,1,143,1,93
	.word	.L422,.L441
	.byte	5
	.word	.L93,.L439
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,32,13,58,15,59,15,57,15
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.debug_line'
.L217:
	.word	.L823-.L822
.L822:
	.half	3
	.word	.L825-.L824
.L824:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L825:
	.byte	5,11,7,0,5,2
	.word	.L93
	.byte	3,144,1,1,5,28,9
	.half	.L826-.L93
	.byte	1,5,1,7,9
	.half	.L219-.L826
	.byte	3,1,0,1,1
.L823:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L93,0,.L219-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.debug_info'
.L220:
	.word	308
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L223,.L222
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff',0,1,176,3,17,1,1
	.word	.L127,.L442,.L126
	.byte	4
	.byte	'driver',0,1,176,3,77
	.word	.L289,.L443
	.byte	4
	.byte	'tOn',0,1,176,3,101
	.word	.L422,.L444
	.byte	4
	.byte	'shift',0,1,176,3,122
	.word	.L422,.L445
	.byte	5
	.word	.L127,.L442
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.debug_line'
.L222:
	.word	.L828-.L827
.L827:
	.half	3
	.word	.L830-.L829
.L829:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L830:
	.byte	5,44,7,0,5,2
	.word	.L127
	.byte	3,177,3,1,5,1,9
	.half	.L224-.L127
	.byte	3,3,0,1,1
.L828:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L127,0,.L224-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.debug_info'
.L225:
	.word	359
	.half	3
	.word	.L226
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L228,.L227
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned',0,1,184,3,17,1,1
	.word	.L129,.L446,.L128
	.byte	4
	.byte	'driver',0,1,184,3,79
	.word	.L289,.L447
	.byte	4
	.byte	'tOn',0,1,184,3,103
	.word	.L422,.L448
	.byte	5
	.word	.L129,.L446
	.byte	6
	.byte	'channelIndex',0,1,187,3,20
	.word	.L287,.L449
	.byte	6
	.byte	'period',0,1,188,3,20
	.word	.L296,.L450
	.byte	7
	.word	.L451
	.byte	6
	.byte	'x',0,1,194,3,24
	.word	.L296,.L453
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.debug_abbrev'
.L226:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.debug_line'
.L227:
	.word	.L832-.L831
.L831:
	.half	3
	.word	.L834-.L833
.L833:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L834:
	.byte	5,17,7,0,5,2
	.word	.L129
	.byte	3,183,3,1,5,20,9
	.half	.L570-.L129
	.byte	3,6,1,5,23,9
	.half	.L835-.L570
	.byte	3,2,1,5,17,3,120,1,5,33,9
	.half	.L568-.L835
	.byte	3,6,1,5,68,9
	.half	.L571-.L568
	.byte	3,2,1,5,16,9
	.half	.L42-.L571
	.byte	3,3,1,5,9,9
	.half	.L566-.L42
	.byte	3,20,1,5,103,7,9
	.half	.L836-.L566
	.byte	3,2,1,5,107,9
	.half	.L837-.L836
	.byte	1,5,92,9
	.half	.L47-.L837
	.byte	3,4,1,5,110,9
	.half	.L838-.L47
	.byte	1,5,82,9
	.half	.L452-.L838
	.byte	3,99,1,5,55,9
	.half	.L41-.L452
	.byte	1,5,68,9
	.half	.L839-.L41
	.byte	1,5,1,7,9
	.half	.L840-.L839
	.byte	3,32,1,7,9
	.half	.L229-.L840
	.byte	0,1,1
.L832:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.debug_ranges'
.L228:
	.word	-1,.L129,0,.L229-.L129,0,0
.L451:
	.word	-1,.L129,.L42-.L129,.L452-.L129,-1,.L131,0,.L264-.L131,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.debug_info'
.L230:
	.word	395
	.half	3
	.word	.L231
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L233,.L232
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned',0,1,227,3,17,1,1
	.word	.L133,.L454,.L132
	.byte	4
	.byte	'driver',0,1,227,3,77
	.word	.L289,.L455
	.byte	4
	.byte	'tOn',0,1,227,3,101
	.word	.L422,.L456
	.byte	5
	.word	.L133,.L454
	.byte	6
	.byte	'channelIndex',0,1,229,3,20
	.word	.L287,.L457
	.byte	6
	.byte	'period',0,1,230,3,20
	.word	.L296,.L458
	.byte	5
	.word	.L50,.L459
	.byte	6
	.byte	'x',0,1,236,3,24
	.word	.L296,.L460
	.byte	6
	.byte	'cm0',0,1,237,3,24
	.word	.L296,.L461
	.byte	6
	.byte	'cm1',0,1,237,3,29
	.word	.L296,.L462
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.debug_abbrev'
.L231:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.debug_line'
.L232:
	.word	.L842-.L841
.L841:
	.half	3
	.word	.L844-.L843
.L843:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L844:
	.byte	5,17,7,0,5,2
	.word	.L133
	.byte	3,226,3,1,5,20,9
	.half	.L573-.L133
	.byte	3,5,1,5,23,9
	.half	.L845-.L573
	.byte	3,2,1,5,17,3,121,1,5,33,9
	.half	.L574-.L845
	.byte	3,5,1,5,68,9
	.half	.L576-.L574
	.byte	3,2,1,5,16,9
	.half	.L50-.L576
	.byte	3,4,1,5,25,9
	.half	.L846-.L50
	.byte	3,2,1,5,16,9
	.half	.L847-.L846
	.byte	3,126,1,5,9,9
	.half	.L577-.L847
	.byte	3,2,1,5,24,7,9
	.half	.L848-.L577
	.byte	3,2,1,5,29,9
	.half	.L51-.L848
	.byte	3,5,1,5,9,9
	.half	.L849-.L51
	.byte	1,5,15,7,9
	.half	.L850-.L849
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L52-.L850
	.byte	3,2,1,5,14,9
	.half	.L851-.L52
	.byte	1,5,15,9
	.half	.L852-.L851
	.byte	3,2,1,5,9,9
	.half	.L53-.L852
	.byte	3,6,1,5,26,7,9
	.half	.L853-.L53
	.byte	3,3,1,5,20,3,127,1,5,14,9
	.half	.L55-.L853
	.byte	3,4,1,5,26,7,9
	.half	.L854-.L55
	.byte	3,2,1,5,29,1,9
	.half	.L57-.L854
	.byte	3,8,1,5,13,9
	.half	.L855-.L57
	.byte	1,5,21,7,9
	.half	.L56-.L855
	.byte	3,2,1,5,24,1,5,21,9
	.half	.L59-.L56
	.byte	3,6,1,9
	.half	.L58-.L59
	.byte	3,1,1,5,68,9
	.half	.L60-.L58
	.byte	3,3,1,5,50,9
	.half	.L856-.L60
	.byte	1,5,68,9
	.half	.L857-.L856
	.byte	1,5,89,9
	.half	.L858-.L857
	.byte	1,5,82,9
	.half	.L459-.L858
	.byte	3,75,1,5,55,9
	.half	.L49-.L459
	.byte	1,5,68,9
	.half	.L859-.L49
	.byte	1,5,1,7,9
	.half	.L860-.L859
	.byte	3,56,1,7,9
	.half	.L234-.L860
	.byte	0,1,1
.L842:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.debug_ranges'
.L233:
	.word	-1,.L133,0,.L234-.L133,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.debug_info'
.L235:
	.word	338
	.half	3
	.word	.L236
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L238,.L237
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updateOff',0,1,165,4,17,1,1
	.word	.L135,.L463,.L134
	.byte	4
	.byte	'driver',0,1,165,4,69
	.word	.L289,.L464
	.byte	4
	.byte	'tOn',0,1,165,4,93
	.word	.L422,.L465
	.byte	5
	.word	.L135,.L463
	.byte	5
	.word	.L466,.L463
	.byte	6
	.byte	'channelIndex',0,1,168,4,11
	.word	.L287,.L467
	.byte	6
	.byte	'period',0,1,169,4,20
	.word	.L296,.L468
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.debug_abbrev'
.L236:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.debug_line'
.L237:
	.word	.L862-.L861
.L861:
	.half	3
	.word	.L864-.L863
.L863:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L864:
	.byte	5,17,7,0,5,2
	.word	.L135
	.byte	3,164,4,1,5,20,9
	.half	.L466-.L135
	.byte	3,5,1,5,33,9
	.half	.L865-.L466
	.byte	1,5,23,9
	.half	.L578-.L865
	.byte	3,2,1,5,99,9
	.half	.L579-.L578
	.byte	3,3,1,5,68,3,125,1,5,64,9
	.half	.L62-.L579
	.byte	3,3,1,5,99,9
	.half	.L866-.L62
	.byte	1,5,46,1,5,99,9
	.half	.L867-.L866
	.byte	1,5,64,1,5,99,9
	.half	.L868-.L867
	.byte	1,5,82,9
	.half	.L869-.L868
	.byte	3,125,1,5,55,9
	.half	.L61-.L869
	.byte	1,5,68,9
	.half	.L870-.L61
	.byte	1,5,1,7,9
	.half	.L871-.L870
	.byte	3,5,1,7,9
	.half	.L239-.L871
	.byte	0,1,1
.L862:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.debug_ranges'
.L238:
	.word	-1,.L135,0,.L239-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.debug_info'
.L240:
	.word	495
	.half	3
	.word	.L241
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L243,.L242
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updatePulse',0,1,180,4,17,1,1
	.word	.L137,.L469,.L136
	.byte	4
	.byte	'driver',0,1,180,4,71
	.word	.L289,.L470
	.byte	4
	.byte	'tOn',0,1,180,4,88
	.word	.L427,.L471
	.byte	4
	.byte	'offset',0,1,180,4,102
	.word	.L427,.L472
	.byte	5
	.word	.L473
	.byte	6
	.byte	'channelIndex',0,1,182,4,20
	.word	.L287,.L474
	.byte	6
	.byte	'period',0,1,183,4,20
	.word	.L296,.L475
	.byte	7
	.word	.L64,.L476
	.byte	6
	.byte	'x',0,1,190,4,24
	.word	.L296,.L477
	.byte	6
	.byte	'cm0',0,1,192,4,24
	.word	.L296,.L478
	.byte	6
	.byte	'cm1',0,1,192,4,29
	.word	.L296,.L479
	.byte	8
	.word	.L384,.L480,.L481
	.byte	9
	.word	.L387,.L482
	.byte	9
	.word	.L389,.L483
	.byte	10
	.word	.L391,.L480,.L481
	.byte	0,8
	.word	.L384,.L481,.L484
	.byte	9
	.word	.L387,.L482
	.byte	9
	.word	.L389,.L483
	.byte	10
	.word	.L391,.L481,.L484
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.debug_abbrev'
.L241:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58,15,59
	.byte	15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.debug_line'
.L242:
	.word	.L873-.L872
.L872:
	.half	3
	.word	.L875-.L874
.L874:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L875:
	.byte	5,17,7,0,5,2
	.word	.L137
	.byte	3,179,4,1,5,68,9
	.half	.L584-.L137
	.byte	3,8,1,5,42,9
	.half	.L64-.L584
	.byte	3,6,1,5,25,9
	.half	.L876-.L64
	.byte	3,3,1,5,55,9
	.half	.L877-.L876
	.byte	3,125,1,5,70,9
	.half	.L878-.L877
	.byte	1,5,73,9
	.half	.L879-.L878
	.byte	3,1,1,4,2,5,20,9
	.half	.L480-.L879
	.byte	3,253,126,1,4,1,5,73,9
	.half	.L880-.L480
	.byte	3,131,1,1,4,2,5,20,9
	.half	.L481-.L880
	.byte	3,253,126,1,4,1,5,9,9
	.half	.L484-.L481
	.byte	3,133,1,1,5,24,7,9
	.half	.L881-.L484
	.byte	3,2,1,5,30,9
	.half	.L65-.L881
	.byte	3,5,1,5,13,9
	.half	.L882-.L65
	.byte	1,5,47,7,9
	.half	.L883-.L882
	.byte	1,5,15,7,9
	.half	.L66-.L883
	.byte	3,2,1,5,18,1,5,35,9
	.half	.L67-.L66
	.byte	3,2,1,5,18,9
	.half	.L884-.L67
	.byte	1,5,52,7,9
	.half	.L885-.L884
	.byte	1,5,56,9
	.half	.L886-.L885
	.byte	1,5,15,7,9
	.half	.L69-.L886
	.byte	3,2,1,5,68,9
	.half	.L68-.L69
	.byte	3,8,1,5,50,9
	.half	.L887-.L68
	.byte	1,5,68,9
	.half	.L888-.L887
	.byte	1,5,9,9
	.half	.L889-.L888
	.byte	3,126,1,5,24,7,9
	.half	.L890-.L889
	.byte	3,3,1,5,17,9
	.half	.L587-.L890
	.byte	3,1,1,5,68,1,5,14,9
	.half	.L71-.L587
	.byte	3,2,1,5,17,7,9
	.half	.L891-.L71
	.byte	3,2,1,5,26,9
	.half	.L588-.L891
	.byte	3,1,1,5,20,3,127,1,5,21,9
	.half	.L73-.L588
	.byte	3,6,1,9
	.half	.L589-.L73
	.byte	3,1,1,5,89,9
	.half	.L72-.L589
	.byte	3,1,1,5,82,9
	.half	.L476-.L72
	.byte	3,84,1,5,55,9
	.half	.L63-.L476
	.byte	1,5,68,9
	.half	.L892-.L63
	.byte	1,5,1,7,9
	.half	.L893-.L892
	.byte	3,49,1,7,9
	.half	.L244-.L893
	.byte	0,1,1
.L873:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.debug_ranges'
.L243:
	.word	-1,.L137,0,.L244-.L137,0,0
.L473:
	.word	-1,.L137,0,.L469-.L137,-1,.L139,0,.L284-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.debug_info'
.L245:
	.word	306
	.half	3
	.word	.L246
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L248,.L247
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updatePulseOff',0,1,240,4,17,1,1
	.word	.L141,.L485,.L140
	.byte	4
	.byte	'driver',0,1,240,4,74
	.word	.L289,.L486
	.byte	4
	.byte	'tOn',0,1,240,4,91
	.word	.L427,.L487
	.byte	4
	.byte	'offset',0,1,240,4,105
	.word	.L427,.L488
	.byte	5
	.word	.L141,.L485
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.debug_abbrev'
.L246:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.debug_line'
.L247:
	.word	.L895-.L894
.L894:
	.half	3
	.word	.L897-.L896
.L896:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L897:
	.byte	5,44,7,0,5,2
	.word	.L141
	.byte	3,244,4,1,5,1,9
	.half	.L249-.L141
	.byte	3,1,0,1,1
.L895:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.debug_ranges'
.L248:
	.word	-1,.L141,0,.L249-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_info'
.L250:
	.word	437
	.half	3
	.word	.L251
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L253,.L252
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned',0,1,249,4,17,1,1
	.word	.L143,.L489,.L142
	.byte	4
	.byte	'driver',0,1,249,4,84
	.word	.L289,.L490
	.byte	4
	.byte	'tOn',0,1,249,4,108
	.word	.L422,.L491
	.byte	4
	.byte	'shift',0,1,249,4,129,1
	.word	.L422,.L492
	.byte	5
	.word	.L143,.L489
	.byte	6
	.byte	'channelIndex',0,1,251,4,20
	.word	.L287,.L493
	.byte	6
	.byte	'period',0,1,252,4,20
	.word	.L296,.L494
	.byte	5
	.word	.L76,.L495
	.byte	6
	.byte	'x',0,1,130,5,24
	.word	.L296,.L496
	.byte	6
	.byte	's',0,1,131,5,24
	.word	.L296,.L497
	.byte	6
	.byte	'cm0',0,1,132,5,24
	.word	.L296,.L498
	.byte	6
	.byte	'cm1',0,1,132,5,29
	.word	.L296,.L499
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_abbrev'
.L251:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_line'
.L252:
	.word	.L899-.L898
.L898:
	.half	3
	.word	.L901-.L900
.L900:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L901:
	.byte	5,17,7,0,5,2
	.word	.L143
	.byte	3,248,4,1,5,68,9
	.half	.L592-.L143
	.byte	3,7,1,5,16,9
	.half	.L76-.L592
	.byte	3,5,1,5,9,9
	.half	.L593-.L76
	.byte	3,21,1,5,24,7,9
	.half	.L902-.L593
	.byte	3,3,1,5,17,9
	.half	.L903-.L902
	.byte	3,1,1,5,68,1,5,14,9
	.half	.L81-.L903
	.byte	3,2,1,5,17,7,9
	.half	.L904-.L81
	.byte	3,2,1,5,26,9
	.half	.L596-.L904
	.byte	3,1,1,5,20,3,127,1,5,22,9
	.half	.L83-.L596
	.byte	3,6,1,5,21,9
	.half	.L905-.L83
	.byte	3,4,1,5,22,9
	.half	.L906-.L905
	.byte	3,124,1,5,21,9
	.half	.L597-.L906
	.byte	3,4,1,5,13,9
	.half	.L907-.L597
	.byte	3,126,1,5,21,7,9
	.half	.L908-.L907
	.byte	3,2,1,5,52,9
	.half	.L909-.L908
	.byte	1,5,21,9
	.half	.L85-.L909
	.byte	3,4,1,9
	.half	.L86-.L85
	.byte	3,3,1,5,31,9
	.half	.L910-.L86
	.byte	3,1,1,5,21,9
	.half	.L911-.L910
	.byte	1,5,89,9
	.half	.L82-.L911
	.byte	3,1,1,5,82,9
	.half	.L495-.L82
	.byte	3,75,1,5,55,9
	.half	.L75-.L495
	.byte	1,5,68,9
	.half	.L912-.L75
	.byte	1,5,1,7,9
	.half	.L913-.L912
	.byte	3,56,1,7,9
	.half	.L254-.L913
	.byte	0,1,1
.L899:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_ranges'
.L253:
	.word	-1,.L143,0,.L254-.L143,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.debug_info'
.L255:
	.word	334
	.half	3
	.word	.L256
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L258,.L257
	.byte	2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks',0,1,187,5,27
	.word	.L296
	.byte	1,1
	.word	.L145,.L500,.L144
	.byte	4
	.byte	'driver',0,1,187,5,98
	.word	.L289,.L501
	.byte	5
	.word	.L145,.L500
	.byte	6
	.byte	'deadtimeInTimerClkTicks',0,1,189,5,20
	.word	.L296,.L502
	.byte	7
	.word	.L89,.L500
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.debug_abbrev'
.L256:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.debug_line'
.L257:
	.word	.L915-.L914
.L914:
	.half	3
	.word	.L917-.L916
.L916:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L917:
	.byte	5,39,7,0,5,2
	.word	.L145
	.byte	3,190,5,1,5,15,9
	.half	.L918-.L145
	.byte	1,5,47,9
	.half	.L919-.L918
	.byte	3,3,1,5,52,9
	.half	.L599-.L919
	.byte	3,125,1,5,30,9
	.half	.L920-.L599
	.byte	1,5,5,9
	.half	.L921-.L920
	.byte	1,5,10,7,9
	.half	.L922-.L921
	.byte	3,5,1,5,33,7,9
	.half	.L923-.L922
	.byte	3,2,1,5,1,9
	.half	.L88-.L923
	.byte	3,11,1,4,2,5,12,7,9
	.half	.L89-.L88
	.byte	3,228,125,1,5,18,9
	.half	.L924-.L89
	.byte	1,5,20,9
	.half	.L925-.L924
	.byte	3,11,1,4,1,5,1,9
	.half	.L926-.L925
	.byte	3,145,2,1,7,9
	.half	.L259-.L926
	.byte	0,1,1
.L915:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.debug_ranges'
.L258:
	.word	-1,.L145,0,.L259-.L145,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L260:
	.word	213
	.half	3
	.word	.L261
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L263,.L262
	.byte	2
	.word	.L146
	.byte	3
	.byte	'.cocofun_3',0,1,184,3,17,1
	.word	.L131,.L264,.L130
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L261:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L262:
	.word	.L928-.L927
.L927:
	.half	3
	.word	.L930-.L929
.L929:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L930:
	.byte	5,16,7,0,5,2
	.word	.L131
	.byte	3,194,3,1,5,25,9
	.half	.L931-.L131
	.byte	3,2,1,5,16,9
	.half	.L932-.L931
	.byte	3,126,1,5,9,9
	.half	.L567-.L932
	.byte	3,2,1,5,24,7,9
	.half	.L933-.L567
	.byte	3,2,1,5,29,9
	.half	.L43-.L933
	.byte	3,5,1,5,9,9
	.half	.L934-.L43
	.byte	1,5,15,7,9
	.half	.L935-.L934
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L44-.L935
	.byte	3,2,1,5,14,9
	.half	.L936-.L44
	.byte	1,5,15,9
	.half	.L937-.L936
	.byte	3,2,1,5,68,9
	.half	.L45-.L937
	.byte	3,7,1,5,50,9
	.half	.L938-.L45
	.byte	1,5,68,9
	.half	.L939-.L938
	.byte	1,5,50,9
	.half	.L940-.L939
	.byte	1,7,9
	.half	.L264-.L940
	.byte	0,1,1,5,16,0,5,2
	.word	.L131
	.byte	3,132,5,1,5,25,9
	.half	.L931-.L131
	.byte	3,2,1,5,16,9
	.half	.L932-.L931
	.byte	3,126,1,5,9,9
	.half	.L567-.L932
	.byte	3,2,1,5,24,7,9
	.half	.L933-.L567
	.byte	3,2,1,5,29,9
	.half	.L43-.L933
	.byte	3,5,1,5,9,9
	.half	.L934-.L43
	.byte	1,5,15,7,9
	.half	.L935-.L934
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L44-.L935
	.byte	3,2,1,5,14,9
	.half	.L936-.L44
	.byte	1,5,15,9
	.half	.L937-.L936
	.byte	3,2,1,5,68,9
	.half	.L45-.L937
	.byte	3,8,1,5,50,9
	.half	.L938-.L45
	.byte	1,5,68,9
	.half	.L939-.L938
	.byte	1,5,50,9
	.half	.L940-.L939
	.byte	3,189,126,1,7,9
	.half	.L264-.L940
	.byte	0,1,1
.L928:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L263:
	.word	-1,.L131,0,.L264-.L131,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L265:
	.word	213
	.half	3
	.word	.L266
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L268,.L267
	.byte	2
	.word	.L146
	.byte	3
	.byte	'.cocofun_4',0,1,159,1,9,1
	.word	.L99,.L269,.L98
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L266:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L267:
	.word	.L942-.L941
.L941:
	.half	3
	.word	.L944-.L943
.L943:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm\\Std\\IfxGtm_Dtm.h',0,0
	.byte	0,0,0
.L944:
	.byte	5,104,7,0,5,2
	.word	.L99
	.byte	3,188,1,1,4,2,5,12,9
	.half	.L945-.L99
	.byte	3,195,0,1,5,30,9
	.half	.L946-.L945
	.byte	1,4,1,5,154,1,9
	.half	.L947-.L946
	.byte	3,189,127,1,9
	.half	.L269-.L947
	.byte	0,1,1,5,103,0,5,2
	.word	.L99
	.byte	3,238,1,1,4,2,5,12,9
	.half	.L945-.L99
	.byte	3,17,1,5,30,9
	.half	.L946-.L945
	.byte	1,4,1,5,153,1,9
	.half	.L947-.L946
	.byte	3,111,1,5,154,1,9
	.half	.L948-.L947
	.byte	3,78,1,7,9
	.half	.L269-.L948
	.byte	0,1,1
.L942:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L268:
	.word	-1,.L99,0,.L269-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L270:
	.word	213
	.half	3
	.word	.L271
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L273,.L272
	.byte	2
	.word	.L146
	.byte	3
	.byte	'.cocofun_5',0,1,215,2,9,1
	.word	.L117,.L274,.L116
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L271:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L272:
	.word	.L950-.L949
.L949:
	.half	3
	.word	.L952-.L951
.L951:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L952:
	.byte	5,70,7,0,5,2
	.word	.L117
	.byte	3,221,2,1,5,43,1,5,69,9
	.half	.L953-.L117
	.byte	1,9
	.half	.L274-.L953
	.byte	0,1,1,5,61,0,5,2
	.word	.L117
	.byte	3,230,2,1,5,34,1,5,60,9
	.half	.L953-.L117
	.byte	1,5,69,9
	.half	.L954-.L953
	.byte	3,119,1,7,9
	.half	.L274-.L954
	.byte	0,1,1
.L950:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L273:
	.word	-1,.L117,0,.L274-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L275:
	.word	213
	.half	3
	.word	.L276
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L278,.L277
	.byte	2
	.word	.L146
	.byte	3
	.byte	'.cocofun_6',0,1,159,1,9,1
	.word	.L97,.L279,.L96
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L276:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L277:
	.word	.L956-.L955
.L955:
	.half	3
	.word	.L958-.L957
.L957:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L958:
	.byte	5,21,7,0,5,2
	.word	.L97
	.byte	3,219,1,1,5,98,7,9
	.half	.L959-.L97
	.byte	1,5,110,9
	.half	.L960-.L959
	.byte	1,5,84,9
	.half	.L12-.L960
	.byte	1,5,110,9
	.half	.L13-.L12
	.byte	1,7,9
	.half	.L279-.L13
	.byte	0,1,1,5,21,0,5,2
	.word	.L97
	.byte	3,230,1,1,5,100,7,9
	.half	.L959-.L97
	.byte	1,5,112,9
	.half	.L960-.L959
	.byte	1,5,86,9
	.half	.L12-.L960
	.byte	1,5,110,9
	.half	.L13-.L12
	.byte	3,117,1,7,9
	.half	.L279-.L13
	.byte	0,1,1
.L956:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L278:
	.word	-1,.L97,0,.L279-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L280:
	.word	213
	.half	3
	.word	.L281
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L283,.L282
	.byte	2
	.word	.L146
	.byte	3
	.byte	'.cocofun_7',0,1,180,4,17,1
	.word	.L139,.L284,.L138
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L281:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L282:
	.word	.L962-.L961
.L961:
	.half	3
	.word	.L964-.L963
.L963:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0,0,0,0,0
.L964:
	.byte	5,17,7,0,5,2
	.word	.L139
	.byte	3,179,4,1,5,20,9
	.half	.L581-.L139
	.byte	3,5,1,5,23,9
	.half	.L591-.L581
	.byte	3,3,1,5,17,3,120,1,5,33,9
	.half	.L583-.L591
	.byte	3,5,1,5,23,9
	.half	.L586-.L583
	.byte	3,3,1,7,9
	.half	.L284-.L586
	.byte	0,1,1,5,17,0,5,2
	.word	.L139
	.byte	3,248,4,1,5,20,9
	.half	.L581-.L139
	.byte	3,5,1,5,23,9
	.half	.L591-.L581
	.byte	3,2,1,5,17,3,121,1,5,33,9
	.half	.L583-.L591
	.byte	3,5,1,5,23,9
	.half	.L586-.L583
	.byte	3,190,127,1,7,9
	.half	.L284-.L586
	.byte	0,1,1
.L962:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L283:
	.word	-1,.L139,0,.L284-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_modes')
	.sect	'.debug_info'
.L285:
	.word	218
	.half	3
	.word	.L286
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl\\IfxGtm_Tom_Dtm_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1,2
	.word	.L146
	.byte	3
	.byte	'IfxGtm_Tom_Dtm_PwmHl_modes',0,26,131,1,48
	.word	.L503
	.byte	5,3
	.word	IfxGtm_Tom_Dtm_PwmHl_modes
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_modes')
	.sect	'.debug_abbrev'
.L286:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L130:
	.word	-1,.L131,0,.L264-.L131
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L269-.L99
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L274-.L117
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L279-.L97
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L138:
	.word	-1,.L139,0,.L284-.L139
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L370-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L371:
	.word	-1,.L103,0,.L370-.L103
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.debug_loc'
.L144:
	.word	-1,.L145,0,.L500-.L145
	.half	2
	.byte	138,0
	.word	0,0
.L502:
	.word	-1,.L145,.L599-.L145,.L500-.L145
	.half	1
	.byte	82
	.word	0,0
.L501:
	.word	-1,.L145,0,.L500-.L145
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L373-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L105,0,.L373-.L105
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L375-.L107
	.half	2
	.byte	138,0
	.word	0,0
.L376:
	.word	-1,.L107,0,.L556-.L107
	.half	1
	.byte	100
	.word	.L557-.L107,.L558-.L107
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L378-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L379:
	.word	-1,.L109,0,.L378-.L109
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L504-.L95
	.half	2
	.byte	138,0
	.word	.L504-.L95,.L288-.L95
	.half	2
	.byte	138,16
	.word	.L288-.L95,.L288-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L309:
	.word	0,0
.L329:
	.word	0,0
.L305:
	.word	-1,.L95,.L515-.L95,.L516-.L95
	.half	1
	.byte	84
	.word	.L517-.L95,.L518-.L95
	.half	1
	.byte	84
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	92
	.word	.L524-.L95,.L525-.L95
	.half	1
	.byte	92
	.word	.L525-.L95,.L526-.L95
	.half	1
	.byte	95
	.word	0,0
.L339:
	.word	0,0
.L353:
	.word	0,0
.L311:
	.word	0,0
.L332:
	.word	-1,.L95,.L327-.L95,.L519-.L95
	.half	1
	.byte	95
	.word	.L8-.L95,.L335-.L95
	.half	1
	.byte	95
	.word	0,0
.L297:
	.word	-1,.L95,.L99-.L95,.L269-.L95
	.half	1
	.byte	91
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	91
	.word	.L527-.L95,.L528-.L95
	.half	1
	.byte	91
	.word	.L528-.L95,.L288-.L95
	.half	1
	.byte	95
	.word	0,0
.L295:
	.word	-1,.L95,.L509-.L95,.L510-.L95
	.half	1
	.byte	95
	.word	.L99-.L95,.L269-.L95
	.half	1
	.byte	89
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	89
	.word	.L507-.L95,.L288-.L95
	.half	1
	.byte	89
	.word	.L541-.L95,.L542-.L95
	.half	1
	.byte	84
	.word	.L543-.L95,.L544-.L95
	.half	1
	.byte	84
	.word	.L548-.L95,.L549-.L95
	.half	1
	.byte	84
	.word	.L550-.L95,.L551-.L95
	.half	1
	.byte	85
	.word	0,0
.L302:
	.word	-1,.L95,.L505-.L95,.L512-.L95
	.half	1
	.byte	82
	.word	.L99-.L95,.L269-.L95
	.half	1
	.byte	90
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	90
	.word	.L529-.L95,.L288-.L95
	.half	1
	.byte	90
	.word	0,0
.L324:
	.word	0,0
.L292:
	.word	-1,.L95,0,.L505-.L95
	.half	1
	.byte	101
	.word	.L99-.L95,.L269-.L95
	.half	1
	.byte	111
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	111
	.word	.L530-.L95,.L531-.L95
	.half	1
	.byte	111
	.word	0,0
.L341:
	.word	0,0
.L355:
	.word	0,0
.L290:
	.word	-1,.L95,0,.L506-.L95
	.half	1
	.byte	100
	.word	.L99-.L95,.L269-.L95
	.half	1
	.byte	108
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	108
	.word	.L532-.L95,.L288-.L95
	.half	1
	.byte	108
	.word	.L537-.L95,.L538-.L95
	.half	1
	.byte	100
	.word	.L539-.L95,.L540-.L95
	.half	1
	.byte	100
	.word	.L545-.L95,.L363-.L95
	.half	1
	.byte	100
	.word	.L546-.L95,.L547-.L95
	.half	1
	.byte	100
	.word	0,0
.L322:
	.word	0,0
.L337:
	.word	0,0
.L351:
	.word	0,0
.L317:
	.word	-1,.L95,.L513-.L95,.L4-.L95
	.half	1
	.byte	85
	.word	.L5-.L95,.L315-.L95
	.half	1
	.byte	85
	.word	0,0
.L362:
	.word	-1,.L95,.L535-.L95,.L18-.L95
	.half	1
	.byte	85
	.word	.L19-.L95,.L361-.L95
	.half	1
	.byte	85
	.word	0,0
.L293:
	.word	-1,.L95,.L99-.L95,.L269-.L95
	.half	1
	.byte	88
	.word	.L97-.L95,.L279-.L95
	.half	1
	.byte	88
	.word	.L533-.L95,.L288-.L95
	.half	1
	.byte	88
	.word	0,0
.L346:
	.word	-1,.L95,.L520-.L95,.L521-.L95
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L357:
	.word	-1,.L95,.L522-.L95,.L523-.L95
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L365:
	.word	-1,.L95,.L99-.L95,.L269-.L95
	.half	2
	.byte	145,112
	.word	.L97-.L95,.L279-.L95
	.half	2
	.byte	145,112
	.word	0,.L288-.L95
	.half	2
	.byte	145,112
	.word	0,0
.L299:
	.word	-1,.L95,.L507-.L95,.L508-.L95
	.half	1
	.byte	98
	.word	.L511-.L95,.L505-.L95
	.half	1
	.byte	98
	.word	.L99-.L95,.L269-.L95
	.half	2
	.byte	145,124
	.word	.L514-.L95,.L315-.L95
	.half	1
	.byte	98
	.word	.L97-.L95,.L279-.L95
	.half	2
	.byte	145,124
	.word	.L534-.L95,.L288-.L95
	.half	2
	.byte	145,124
	.word	.L536-.L95,.L361-.L95
	.half	1
	.byte	98
	.word	.L552-.L95,.L553-.L95
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L366-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L368:
	.word	-1,.L101,0,.L554-.L101
	.half	1
	.byte	100
	.word	.L555-.L101,.L366-.L101
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L380-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L398:
	.word	0,0
.L383:
	.word	-1,.L111,.L559-.L111,.L380-.L111
	.half	1
	.byte	81
	.word	0,0
.L388:
	.word	0,0
.L382:
	.word	-1,.L111,0,.L380-.L111
	.half	1
	.byte	84
	.word	0,0
.L381:
	.word	-1,.L111,0,.L380-.L111
	.half	1
	.byte	100
	.word	0,0
.L396:
	.word	0,0
.L402:
	.word	0,0
.L400:
	.word	0,0
.L390:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L406-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L411:
	.word	0,0
.L407:
	.word	-1,.L113,0,.L410-.L113
	.half	1
	.byte	100
	.word	.L560-.L113,.L406-.L113
	.half	1
	.byte	111
	.word	0,0
.L408:
	.word	-1,.L113,0,.L410-.L113
	.half	1
	.byte	84
	.word	0,0
.L412:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L413-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L419:
	.word	0,0
.L414:
	.word	-1,.L115,.L117-.L115,.L274-.L115
	.half	1
	.byte	100
	.word	0,.L413-.L115
	.half	1
	.byte	100
	.word	0,0
.L415:
	.word	-1,.L115,.L117-.L115,.L274-.L115
	.half	1
	.byte	84
	.word	0,.L413-.L115
	.half	1
	.byte	84
	.word	0,0
.L417:
	.word	-1,.L115,.L117-.L115,.L274-.L115
	.half	1
	.byte	82
	.word	.L561-.L115,.L413-.L115
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L439-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L440:
	.word	-1,.L93,0,.L439-.L93
	.half	1
	.byte	100
	.word	0,0
.L441:
	.word	-1,.L93,0,.L439-.L93
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L420-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L421:
	.word	-1,.L119,0,.L420-.L119
	.half	1
	.byte	100
	.word	0,0
.L424:
	.word	-1,.L119,0,.L420-.L119
	.half	1
	.byte	102
	.word	0,0
.L423:
	.word	-1,.L119,0,.L420-.L119
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L425-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L426:
	.word	-1,.L121,0,.L425-.L121
	.half	1
	.byte	100
	.word	0,0
.L429:
	.word	-1,.L121,0,.L425-.L121
	.half	1
	.byte	102
	.word	0,0
.L428:
	.word	-1,.L121,0,.L425-.L121
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L430-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L433:
	.word	-1,.L123,0,.L430-.L123
	.half	1
	.byte	101
	.word	0,0
.L431:
	.word	-1,.L123,0,.L430-.L123
	.half	1
	.byte	100
	.word	0,0
.L434:
	.word	-1,.L123,0,.L430-.L123
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L435-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L438:
	.word	-1,.L125,0,.L562-.L125
	.half	1
	.byte	101
	.word	.L564-.L125,.L435-.L125
	.half	1
	.byte	108
	.word	0,0
.L437:
	.word	-1,.L125,0,.L562-.L125
	.half	1
	.byte	100
	.word	.L563-.L125,.L435-.L125
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L442-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L443:
	.word	-1,.L127,0,.L442-.L127
	.half	1
	.byte	100
	.word	0,0
.L445:
	.word	-1,.L127,0,.L442-.L127
	.half	1
	.byte	102
	.word	0,0
.L444:
	.word	-1,.L127,0,.L565-.L127
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L446-.L129
	.half	2
	.byte	138,0
	.word	0,0
.L449:
	.word	-1,.L129,.L131-.L129,.L264-.L129
	.half	1
	.byte	89
	.word	.L568-.L129,.L569-.L129
	.half	1
	.byte	89
	.word	.L41-.L129,.L446-.L129
	.half	1
	.byte	89
	.word	0,0
.L447:
	.word	-1,.L129,0,.L566-.L129
	.half	1
	.byte	100
	.word	.L131-.L129,.L264-.L129
	.half	1
	.byte	111
	.word	.L570-.L129,.L446-.L129
	.half	1
	.byte	111
	.word	0,0
.L450:
	.word	-1,.L129,.L131-.L129,.L264-.L129
	.half	1
	.byte	88
	.word	.L571-.L129,.L446-.L129
	.half	1
	.byte	88
	.word	0,0
.L448:
	.word	-1,.L129,0,.L566-.L129
	.half	1
	.byte	101
	.word	.L131-.L129,.L264-.L129
	.half	1
	.byte	108
	.word	.L568-.L129,.L446-.L129
	.half	1
	.byte	108
	.word	0,0
.L453:
	.word	-1,.L129,.L567-.L129,.L264-.L129
	.half	5
	.byte	144,32,157,32,0
	.word	.L566-.L129,.L572-.L129
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L133,0,.L454-.L133
	.half	2
	.byte	138,0
	.word	0,0
.L457:
	.word	-1,.L133,.L574-.L133,.L575-.L133
	.half	1
	.byte	88
	.word	.L49-.L133,.L454-.L133
	.half	1
	.byte	88
	.word	0,0
.L461:
	.word	-1,.L133,.L58-.L133,.L459-.L133
	.half	1
	.byte	85
	.word	0,0
.L462:
	.word	0,0
.L455:
	.word	-1,.L133,0,.L50-.L133
	.half	1
	.byte	100
	.word	.L573-.L133,.L454-.L133
	.half	1
	.byte	111
	.word	0,0
.L458:
	.word	-1,.L133,.L576-.L133,.L454-.L133
	.half	1
	.byte	89
	.word	0,0
.L456:
	.word	-1,.L133,0,.L50-.L133
	.half	1
	.byte	101
	.word	.L574-.L133,.L454-.L133
	.half	1
	.byte	108
	.word	0,0
.L460:
	.word	-1,.L133,.L577-.L133,.L459-.L133
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.debug_loc'
.L134:
	.word	-1,.L135,0,.L463-.L135
	.half	2
	.byte	138,0
	.word	0,0
.L467:
	.word	-1,.L135,.L579-.L135,.L580-.L135
	.half	1
	.byte	95
	.word	.L61-.L135,.L463-.L135
	.half	1
	.byte	95
	.word	0,0
.L464:
	.word	-1,.L135,0,.L62-.L135
	.half	1
	.byte	100
	.word	.L466-.L135,.L463-.L135
	.half	1
	.byte	111
	.word	0,0
.L468:
	.word	-1,.L135,.L578-.L135,.L62-.L135
	.half	1
	.byte	88
	.word	0,0
.L465:
	.word	-1,.L135,0,.L62-.L135
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.debug_loc'
.L136:
	.word	-1,.L137,0,.L469-.L137
	.half	2
	.byte	138,0
	.word	0,0
.L474:
	.word	-1,.L137,.L582-.L137,.L284-.L137
	.half	1
	.byte	89
	.word	.L584-.L137,.L585-.L137
	.half	1
	.byte	89
	.word	.L63-.L137,.L469-.L137
	.half	1
	.byte	89
	.word	0,0
.L482:
	.word	0,0
.L478:
	.word	-1,.L137,.L588-.L137,.L73-.L137
	.half	1
	.byte	85
	.word	.L589-.L137,.L476-.L137
	.half	1
	.byte	85
	.word	0,0
.L479:
	.word	-1,.L137,.L589-.L137,.L476-.L137
	.half	1
	.byte	86
	.word	0,0
.L470:
	.word	-1,.L137,.L139-.L137,.L284-.L137
	.half	1
	.byte	100
	.word	.L581-.L137,.L284-.L137
	.half	1
	.byte	111
	.word	.L584-.L137,.L469-.L137
	.half	1
	.byte	111
	.word	.L584-.L137,.L64-.L137
	.half	1
	.byte	100
	.word	0,0
.L472:
	.word	-1,.L137,.L139-.L137,.L284-.L137
	.half	1
	.byte	102
	.word	.L583-.L137,.L284-.L137
	.half	1
	.byte	109
	.word	.L584-.L137,.L469-.L137
	.half	1
	.byte	109
	.word	.L584-.L137,.L64-.L137
	.half	1
	.byte	102
	.word	0,0
.L475:
	.word	-1,.L137,.L586-.L137,.L284-.L137
	.half	1
	.byte	88
	.word	.L584-.L137,.L469-.L137
	.half	1
	.byte	88
	.word	0,0
.L483:
	.word	0,0
.L471:
	.word	-1,.L137,.L139-.L137,.L284-.L137
	.half	1
	.byte	101
	.word	.L582-.L137,.L284-.L137
	.half	1
	.byte	108
	.word	.L584-.L137,.L64-.L137
	.half	1
	.byte	101
	.word	.L584-.L137,.L469-.L137
	.half	1
	.byte	108
	.word	0,0
.L477:
	.word	-1,.L137,.L481-.L137,.L587-.L137
	.half	1
	.byte	85
	.word	.L71-.L137,.L588-.L137
	.half	1
	.byte	85
	.word	.L73-.L137,.L72-.L137
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L141,0,.L485-.L141
	.half	2
	.byte	138,0
	.word	0,0
.L486:
	.word	-1,.L141,0,.L485-.L141
	.half	1
	.byte	100
	.word	0,0
.L488:
	.word	-1,.L141,0,.L485-.L141
	.half	1
	.byte	102
	.word	0,0
.L487:
	.word	-1,.L141,0,.L590-.L141
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L143,0,.L489-.L143
	.half	2
	.byte	138,0
	.word	0,0
.L493:
	.word	-1,.L143,.L591-.L143,.L284-.L143
	.half	1
	.byte	89
	.word	.L131-.L143,.L264-.L143
	.half	1
	.byte	89
	.word	.L592-.L143,.L594-.L143
	.half	1
	.byte	89
	.word	.L75-.L143,.L489-.L143
	.half	1
	.byte	89
	.word	0,0
.L498:
	.word	-1,.L143,.L596-.L143,.L83-.L143
	.half	1
	.byte	85
	.word	.L82-.L143,.L495-.L143
	.half	1
	.byte	85
	.word	0,0
.L499:
	.word	-1,.L143,.L86-.L143,.L495-.L143
	.half	1
	.byte	86
	.word	0,0
.L490:
	.word	-1,.L143,.L139-.L143,.L284-.L143
	.half	1
	.byte	100
	.word	.L581-.L143,.L284-.L143
	.half	1
	.byte	111
	.word	.L592-.L143,.L593-.L143
	.half	1
	.byte	100
	.word	.L131-.L143,.L264-.L143
	.half	1
	.byte	111
	.word	.L592-.L143,.L489-.L143
	.half	1
	.byte	111
	.word	0,0
.L494:
	.word	-1,.L143,.L586-.L143,.L284-.L143
	.half	1
	.byte	88
	.word	.L131-.L143,.L264-.L143
	.half	1
	.byte	88
	.word	.L592-.L143,.L489-.L143
	.half	1
	.byte	88
	.word	0,0
.L497:
	.word	-1,.L143,.L597-.L143,.L86-.L143
	.half	1
	.byte	81
	.word	.L598-.L143,.L82-.L143
	.half	1
	.byte	95
	.word	0,0
.L492:
	.word	-1,.L143,.L139-.L143,.L284-.L143
	.half	1
	.byte	102
	.word	.L583-.L143,.L284-.L143
	.half	1
	.byte	109
	.word	.L592-.L143,.L593-.L143
	.half	1
	.byte	102
	.word	.L131-.L143,.L264-.L143
	.half	1
	.byte	109
	.word	.L592-.L143,.L489-.L143
	.half	1
	.byte	109
	.word	0,0
.L491:
	.word	-1,.L143,.L139-.L143,.L284-.L143
	.half	1
	.byte	101
	.word	.L582-.L143,.L284-.L143
	.half	1
	.byte	108
	.word	.L592-.L143,.L593-.L143
	.half	1
	.byte	101
	.word	.L131-.L143,.L264-.L143
	.half	1
	.byte	108
	.word	.L592-.L143,.L489-.L143
	.half	1
	.byte	108
	.word	0,0
.L496:
	.word	-1,.L143,.L567-.L143,.L264-.L143
	.half	5
	.byte	144,32,157,32,0
	.word	.L593-.L143,.L595-.L143
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L965:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTime')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L93,.L439-.L93
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L965,.L95,.L288-.L95
	.byte	4
	.word	(.L504-.L95)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L288-.L504)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L101,.L366-.L101
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L965,.L103,.L370-.L103
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeTick')
	.sect	'.debug_frame'
	.word	24
	.word	.L965,.L105,.L373-.L105
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMinPulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L107,.L375-.L107
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L965,.L109,.L378-.L109
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setDeadtime')
	.sect	'.debug_frame'
	.word	20
	.word	.L965,.L111,.L380-.L111
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMinPulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L113,.L406-.L113
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setMode')
	.sect	'.debug_frame'
	.word	20
	.word	.L965,.L115,.L413-.L115
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setOnTimeAndShift')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L119,.L420-.L119
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setPulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L121,.L425-.L121
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_setupChannels')
	.sect	'.debug_frame'
	.word	24
	.word	.L965,.L123,.L430-.L123
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L125,.L435-.L125
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateAndShiftOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L127,.L442-.L127
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L129,.L446-.L129
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateEdgeAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L133,.L454-.L133
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L135,.L463-.L135
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L137,.L469-.L137
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updatePulseOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L141,.L485-.L141
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_frame'
	.word	12
	.word	.L965,.L143,.L489-.L143
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Tom_Dtm_PwmHl_getDeadtimeInTimerClockTicks')
	.sect	'.debug_frame'
	.word	24
	.word	.L965,.L145,.L500-.L145
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L966:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L966,.L97,.L279-.L97
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L966,.L99,.L269-.L99
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L966,.L117,.L274-.L117
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L966,.L131,.L264-.L131
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L966,.L139,.L284-.L139
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
