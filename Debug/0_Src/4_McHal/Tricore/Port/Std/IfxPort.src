	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\4_McHal\\Tricore\\Port\\Std\\.IfxPort.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc37x -D__CPU_TC37X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\include\\arch -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\port\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\api -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv4 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\core\\ipv6 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\arpa -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\net -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\posix\\sys -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\compat\\stdc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\apps -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\priv -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\lwip\\prot -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\include\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\lwip\\src\\netif\\ppp\\polarssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Ethernet\\Phy_Dp83825i -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.src ..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c'

	
$TC162
	.sdecl	'.zrodata.IfxPort..1.cnt',data,rom
	.sect	'.zrodata.IfxPort..1.cnt'
	.align	2
.1.cnt:	.type	object
	.size	.1.cnt,4
	.word	-268187648
	.sdecl	'.zrodata.IfxPort..2.cnt',data,rom
	.sect	'.zrodata.IfxPort..2.cnt'
	.align	2
.2.cnt:	.type	object
	.size	.2.cnt,4
	.word	-268187552
	
	.sdecl	'.text.IfxPort.IfxPort_disableEmergencyStop',code,cluster('IfxPort_disableEmergencyStop')
	.sect	'.text.IfxPort.IfxPort_disableEmergencyStop'
	.align	2
	
	.global	IfxPort_disableEmergencyStop

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     1  /**
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     2   * \file IfxPort.c
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     3   * \brief PORT  basic functionality
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     4   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     5   * \version iLLD_1_0_1_12_0
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     7   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     8   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	     9   *                                 IMPORTANT NOTICE
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    10   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    12   * the company in which ordinary course of business you are acting and (ii)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    14   * of use are agreed, use of this file is subject to following:
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    15   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    17   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    18   * Permission is hereby granted, free of charge, to any person or organization
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    19   * obtaining a copy of the software and accompanying documentation covered by
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    20   * this license (the "Software") to use, reproduce, display, distribute,
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    21   * execute, and transmit the Software, and to prepare derivative works of the
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    22   * Software, and to permit third-parties to whom the Software is furnished to
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    23   * do so, all subject to the following:
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    24   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    25   * The copyright notices in the Software and this entire statement, including
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    26   * the above license grant, this restriction and the following disclaimer, must
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    27   * be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    28   * derivative works of the Software, unless such copies or derivative works are
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    29   * solely in the form of machine-executable object code generated by a source
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    30   * language processor.
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    31   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    38   * DEALINGS IN THE SOFTWARE.
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    39   *
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    40   */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    41  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    42  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    43  /*----------------------------------Includes----------------------------------*/
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    44  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    45  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    46  #include "IfxPort.h"
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    47  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    48  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    49  /*-------------------------Function Implementations---------------------------*/
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    50  /******************************************************************************/
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    51  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    52  boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex)
; Function IfxPort_disableEmergencyStop
.L116:
IfxPort_disableEmergencyStop:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    53  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    54      sint32  portIndex;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    55      boolean result = FALSE;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    56  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    57      for (portIndex = 0; portIndex < IFXPORT_NUM_MODULES; portIndex++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    58      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    59          if (port == IfxPort_cfg_esrMasks[portIndex].port)
	mov	d2,#0
	movh.a	a15,#@his(IfxPort_cfg_esrMasks)
.L423:
	lea	a15,[a15]@los(IfxPort_cfg_esrMasks)
.L547:
	lea	a2,16
.L2:
	ld.a	a5,[a15]
.L548:
	jne.a	a4,a5,.L3
.L549:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    60          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    61              if ((1U << pinIndex) & IfxPort_cfg_esrMasks[portIndex].masks)
	mov	d15,#1
	ld.hu	d0,[a15]4
.L550:
	sh	d15,d15,d4
.L551:
	and	d15,d0
.L552:
	jeq	d15,#0,.L4
.L553:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    62              {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    63                  IfxPort_resetESR(port, pinIndex);
	call	IfxPort_resetESR
.L422:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    64                  result = TRUE;
	mov	d2,#1
.L4:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    65              }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    66  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    67              break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    68          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    69      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    70  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    71      return result;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    72  }
	ret
.L3:
	lea	a15,[a15]8
	loop	a2,.L2
.L554:
	ret
.L239:
	
__IfxPort_disableEmergencyStop_function_end:
	.size	IfxPort_disableEmergencyStop,__IfxPort_disableEmergencyStop_function_end-IfxPort_disableEmergencyStop
.L157:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_enableEmergencyStop',code,cluster('IfxPort_enableEmergencyStop')
	.sect	'.text.IfxPort.IfxPort_enableEmergencyStop'
	.align	2
	
	.global	IfxPort_enableEmergencyStop

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    73  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    74  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    75  boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex)
; Function IfxPort_enableEmergencyStop
.L118:
IfxPort_enableEmergencyStop:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    76  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    77      sint32  portIndex;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    78      boolean result = FALSE;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    79  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    80      for (portIndex = 0; portIndex < IFXPORT_NUM_MODULES; portIndex++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    81      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    82          if (port == IfxPort_cfg_esrMasks[portIndex].port)
	mov	d8,d4
	movh.a	a12,#@his(IfxPort_cfg_esrMasks)
.L424:
	mov	d2,#0
	mov.aa	a15,a4
.L425:
	lea	a12,[a12]@los(IfxPort_cfg_esrMasks)
.L559:
	lea	a13,16
.L7:
	ld.a	a2,[a12]
.L560:
	jne.a	a15,a2,.L8
.L561:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    83          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    84              if ((1U << pinIndex) & IfxPort_cfg_esrMasks[portIndex].masks)
	mov	d15,#1
	ld.hu	d0,[a12]4
.L562:
	sh	d15,d15,d8
.L563:
	and	d15,d0
.L564:
	jeq	d15,#0,.L9
.L565:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    85              {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    86                  IfxPort_setESR(port, pinIndex);
	mov.aa	a4,a15
.L427:
	mov	d4,d8
	call	IfxPort_setESR
.L426:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    87                  result = TRUE;
	mov	d2,#1
.L9:
.L8:
	lea	a12,[a12]8
	loop	a13,.L7
.L566:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    88              }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    89          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    90      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    91  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    92      return result;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    93  }
	ret
.L246:
	
__IfxPort_enableEmergencyStop_function_end:
	.size	IfxPort_enableEmergencyStop,__IfxPort_enableEmergencyStop_function_end-IfxPort_enableEmergencyStop
.L162:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_getAddress',code,cluster('IfxPort_getAddress')
	.sect	'.text.IfxPort.IfxPort_getAddress'
	.align	2
	
	.global	IfxPort_getAddress

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    94  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    95  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    96  Ifx_P *IfxPort_getAddress(IfxPort_Index port)
; Function IfxPort_getAddress
.L120:
IfxPort_getAddress:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    97  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    98      Ifx_P *module = NULL_PTR;
	mov.a	a2,#0
.L428:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	    99      uint8  i      = 0;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   100  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   101      while ((i < IFXPORT_NUM_MODULES) && (module == NULL_PTR))
	mov	d0,#0
	j	.L11
.L12:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   102      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   103          if (IfxPort_cfg_indexMap[i].index == port)
	movh.a	a15,#@his(IfxPort_cfg_indexMap)
	lea	a15,[a15]@los(IfxPort_cfg_indexMap)
.L651:
	addsc.a	a15,a15,d0,#3
.L652:
	ld.w	d15,[a15]4
.L653:
	jne	d15,d4,.L13
.L654:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   104          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   105              module = IfxPort_cfg_indexMap[i].module;
	ld.a	a2,[a15]
.L13:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   106          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   107  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   108          i++;
	add	d0,#1
.L11:
	mov	d15,#17
.L655:
	jge.u	d0,d15,.L14
.L656:
	jz.a	a2,.L12
.L14:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   109      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   110  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   111      return module;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   112  }
	ret
.L321:
	
__IfxPort_getAddress_function_end:
	.size	IfxPort_getAddress,__IfxPort_getAddress_function_end-IfxPort_getAddress
.L192:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_getIndex',code,cluster('IfxPort_getIndex')
	.sect	'.text.IfxPort.IfxPort_getIndex'
	.align	2
	
	.global	IfxPort_getIndex

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   113  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   114  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   115  IfxPort_Index IfxPort_getIndex(Ifx_P *port)
; Function IfxPort_getIndex
.L122:
IfxPort_getIndex:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   116  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   117      uint32        index;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   118      IfxPort_Index result;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   119  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   120      result = IfxPort_Index_none;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   121  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   122      for (index = 0; index < IFXPORT_NUM_MODULES; index++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   123      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   124          if (IfxPort_cfg_indexMap[index].module == port)
	mov	d2,#-1
	movh.a	a15,#@his(IfxPort_cfg_indexMap)
.L429:
	lea	a15,[a15]@los(IfxPort_cfg_indexMap)
.L661:
	lea	a2,16
.L16:
	ld.a	a5,[a15]
.L662:
	jne.a	a5,a4,.L17
.L663:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   125          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   126              result = (IfxPort_Index)IfxPort_cfg_indexMap[index].index;
	ld.w	d15,[a15]4
.L664:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   127              break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   128          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   129      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   130  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   131      return result;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   132  }
	extr	d2,d15,#0,#8
	ret
.L17:
	lea	a15,[a15]8
	loop	a2,.L16
.L665:
	ret
.L325:
	
__IfxPort_getIndex_function_end:
	.size	IfxPort_getIndex,__IfxPort_getIndex_function_end-IfxPort_getIndex
.L197:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_resetESR',code,cluster('IfxPort_resetESR')
	.sect	'.text.IfxPort.IfxPort_resetESR'
	.align	2
	
	.global	IfxPort_resetESR

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   133  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   134  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   135  void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex)
; Function IfxPort_resetESR
.L124:
IfxPort_resetESR:	.type	func
	mov.aa	a15,a4
.L431:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   136  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   137      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	mov	d15,d4
	call	IfxScuWdt_getCpuWatchdogPassword
.L430:
	mov	d8,d2
.L434:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   138  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   139      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L395:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   140      __ldmst(&port->ESR.U, 1U << pinIndex, 0);
	mov	d0,#1
	lea	a15,[a15]80
.L432:
	sh	d0,d0,d15
.L728:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     2   * \file IfxCpu_IntrinsicsTasking.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     4   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     6   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    12   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    14   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    15   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    23   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    25   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    26   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    27   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    28   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    29   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    30   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    31   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    38   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    40   * \defgroup IfxLld_Cpu_Intrinsics_Tasking Intrinsics for TASKING compiler
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    41   * \ingroup IfxLld_Cpu_Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    43   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    44  #ifndef IFXCPU_INTRINSICSTASKING_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    45  #define IFXCPU_INTRINSICSTASKING_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    47  #include "Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    49  /* *INDENT-OFF* */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    51  #ifndef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    52  /** Function call without return
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    54  #define Ifx__non_return_call(fun)	__asm("\tji %0"::"a"(fun))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    56  /** Jump and link
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    58  IFX_INLINE void Ifx__jump_and_link(void (*fun)(void))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    60  	__asm("jli %0"::"a"(fun));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    61  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    63  IFX_INLINE void Ifx__moveToDataParam0(unsigned int var)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    65  	__asm("mov d4, %0"::"d"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    66  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    68  IFX_INLINE void Ifx__moveToAddrParam0(const void *var)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    69  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    70  	__asm("mov.aa a4, %0"::"a"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    71  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    72  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    73  IFX_INLINE unsigned int Ifx__getDataParamRet(void)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    75  	unsigned int var;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    76  	__asm(" mov\t %0, d2":"=d"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    77  	return var;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    78  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    80  IFX_INLINE void Ifx__moveToDataParamRet(unsigned int var)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    82  	__asm("mov d2, %0"::"d"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    83  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    85  IFX_INLINE void Ifx__jumpToFunction(const void *fun)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    87  	Ifx__non_return_call(fun);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    88  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    90  IFX_INLINE void Ifx__jumpToFunctionWithLink(const void *fun)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    91  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    92  	Ifx__jump_and_link((void (*)(void))fun);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    93  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    95  IFX_INLINE void Ifx__jumpBackToLink(void)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    96  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    97  	__asm("ji a11");
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    98  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    99  #endif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   100  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_any_type Cross type arithmetic operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   101   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   102   * Macro compatible with float, fix point, signed integer and unsigned integer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   103   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   104   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   105   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   106   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   107  #define Ifx__minX(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   108  #define Ifx__maxX(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   109  #define Ifx__saturateX(X,Min,Max)          ( Ifx__minX(Ifx__maxX(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   110  #define Ifx__checkrangeX(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   111  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   113  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_singed_integer Signed integer operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   114   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   115   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   117  #define Ifx__saturate(X,Min,Max)           ( __min(__max(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   118  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   120  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_unsinged_integer Unsigned integer operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   121   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   122   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   124  #define Ifx__saturateu(X,Min,Max)           ( __minu(__maxu(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   125  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   127  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_float Floating point operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   128   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   129   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   131  #define Ifx__checkrange(X,Min,Max)         (((X) >= (Min)) && ((X) <= (Max)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   133  #define Ifx__sqrf(X)                       ((X) * (X))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   134  #define Ifx__sqrtf(X)                      sqrtf(X)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   136  #define Ifx__roundf(X)                     ((((X) - (int)(X)) > 0.5) ? (1 + (int)(X)) : ((int)(X)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   137  #define Ifx__absf(X)                       ( ((X) < 0.0) ? -(X) : (X) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   138  #define Ifx__minf(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   139  #define Ifx__maxf(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   140  #define Ifx__saturatef(X,Min,Max)          ( Ifx__minf(_Ifx_maxf(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   141  #define Ifx__checkrangef(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   142  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   143  #define Ifx__abs_stdreal(X)                ( ((X) > 0.0) ? (X) : -(X) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   144  #define Ifx__min_stdreal(X,Y)              ( ((X) < (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   145  #define Ifx__max_stdreal(X,Y)              ( ((X) > (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   146  #define Ifx__saturate_stdreal(X,Min,Max)   ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   148  #define Ifx__neqf(X,Y)                     ( ((X) > (Y)) ||  ((X) < (Y)) )     /**< X != Y */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   149  #define Ifx__leqf(X,Y)                     ( !((X) > (Y)) )     /**< X <= Y */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   150  #define Ifx__geqf(X,Y)                     ( !((X) < (Y)) )     /**< X >= Y */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   151  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   152  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_fractional Fractional Arithmetic Support
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   153   The next table provides an overview of intrinsic functions to convert fractional values. Note that the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   154   TASKING VX-toolset C compiler for TriCore fully supports the fractional type so normally you should not
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   155   need these intrinsic functions (except for __mulfractlong). For compatibility reasons the TASKING C
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   156   compiler does support these functions.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   157   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   158   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   160  #define Ifx__fract_to_float(value)  ((float)(value))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   162  #define Ifx__mulfractlong __mulfractlong
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   163  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   164  #define Ifx__mulfractfract(fractvalue1,fractvalue2)  ((fractvalue1)*(fractvalue2))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   166  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   168  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_insert Insert / Extract Bit-fields and Bits
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   169   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   170   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   171   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   173  #define Ifx__extru(a, p, w)            __extru(a,p,w)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   175  #define Ifx__extr(a, p, w)             __extr(a,p,w)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   177  #define Ifx__imaskldmst(a, v, b, p)    __imaskldmst((int*)a, v, b, p)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   178  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   179  #define Ifx__insert(a,b,p,w)           __insert(a,b,p,w)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   181  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   183  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_interrupt_handling Interrupt Handling
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   184   The next table provides an overview of the intrinsic functions to read or set interrupt handling.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   185   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   186   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   188  #define Ifx__disable_and_save __disable_and_save
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   190  #define Ifx__restore __restore
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   192  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   194  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_miscellaneous Miscellaneous Intrinsic Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   195   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   196   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   198  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   199  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   201  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_packed Packed Data Type Support
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   202   The next table provides an overview of the intrinsic functions for initialization of packed data type.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   203   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   204   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   207  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   209  #ifndef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   210  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_register Register Handling
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   211   The next table provides an overview of the intrinsic functions that you can use to access control registers.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   212   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   213   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   215  #define Ifx__mtcr_no_isync(reg, val)   \ 
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   216      __asm("mtcr %0,%1"::"i"(reg),"d"(val));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   218  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   220  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_saturation Saturation Arithmetic Support
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   221   These intrinsics support saturation arithmetic
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   222   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   223   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   224   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   226  #define Ifx__adds(a,b)                 ((__sat int)(a)+(__sat int)(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   228  #define Ifx__addsu(a,b)                ((__sat unsigned int)(a)+(__sat unsigned int)(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   230  #define Ifx__subs(a,b)                 ((__sat int)(a)-(__sat int)(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   232  #define Ifx__subsu(a,b)                ((__sat unsigned int )(a)-(__sat unsigned int )(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   234  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   236  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_single_assembly Insert Single Assembly Instruction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   237   The next table provides an overview of the intrinsic functions that you can use to insert a single assembly
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   238   instruction.You can also use inline assembly but these intrinsics provide a shorthand for frequently used
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   239   assembly instructions.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   240   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   241   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   244  IFX_INLINE void Ifx__nops(void* cnt)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   245  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   246      __asm("nop16 \n\t"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   247            "loop %0,*-2"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   248            ::"a"(((char*)cnt) - 1));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   249  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   251  #define Ifx__NOP(n)   __asm(".DUP " #n "\n\tnop16\n\t.ENDM\n")
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   253  /** Insert a memory barrier
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   255  #define Ifx__mem_barrier __asm("":::"memory");
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   257  #if CPU_NO_LDMST
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   258  IFX_INLINE void Ifx__ldmstC(volatile void *addr, uint32 mask, uint32 data)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   260      *(volatile uint32 *)addr = (*(volatile uint32 *)addr & ~mask) | (mask & data);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   261  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   262  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   263  #define Ifx__ldmst(a,b,c) Ifx__ldmstC(a,b,c)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   264  #else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   266  IFX_INLINE void Ifx__ldmstAsm(volatile void *addr, uint32 mask, uint32 data)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   267  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   269            "\tmov d2, %2 \n"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   270            "\tldmst [%0],e2"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   271            ::"a"(addr), "d"(mask), "d"(data):"d2", "d3");
	mov	d15,#0
.L433:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d0 
	mov d2, d15 
	ldmst [a15],e2
	
.L396:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   141      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L435:
	j	IfxScuWdt_setCpuEndinit
.L391:
	
__IfxPort_resetESR_function_end:
	.size	IfxPort_resetESR,__IfxPort_resetESR_function_end-IfxPort_resetESR
.L217:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setESR',code,cluster('IfxPort_setESR')
	.sect	'.text.IfxPort.IfxPort_setESR'
	.align	2
	
	.global	IfxPort_setESR

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   142  }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   143  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   144  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   145  void IfxPort_setESR(Ifx_P *port, uint8 pinIndex)
; Function IfxPort_setESR
.L126:
IfxPort_setESR:	.type	func
	mov.aa	a15,a4
.L437:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   146  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   147      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	mov	d15,d4
	call	IfxScuWdt_getCpuWatchdogPassword
.L436:
	mov	d8,d2
.L439:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   148  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   149      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L404:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   150      __ldmst(&port->ESR.U, 1U << pinIndex, 1U << pinIndex);
	mov	d0,#1
	sh	d0,d0,d15
	lea	a15,[a15]80
.L438:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d0 
	mov d2, d0 
	ldmst [a15],e2
	
.L405:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   151      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L440:
	j	IfxScuWdt_setCpuEndinit
.L400:
	
__IfxPort_setESR_function_end:
	.size	IfxPort_setESR,__IfxPort_setESR_function_end-IfxPort_setESR
.L222:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setGroupModeInput',code,cluster('IfxPort_setGroupModeInput')
	.sect	'.text.IfxPort.IfxPort_setGroupModeInput'
	.align	2
	
	.global	IfxPort_setGroupModeInput

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   152  }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   153  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   154  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   155  void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode)
; Function IfxPort_setGroupModeInput
.L128:
IfxPort_setGroupModeInput:	.type	func
	mov	d7,d4
	sub.a	a10,#32
.L441:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   156  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   157      uint32 i;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   158      uint32 iocrVal[4];
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   159      uint32 iocrMask[4];
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   160  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   161      /* initialise */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   162      for (i = 0; i < 4; i++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   163      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   164          iocrVal[i]  = 0;
	mov	d0,d5
	mov.aa	a15,a10
.L443:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   165          iocrMask[i] = 0;
	mov	d1,#0
	lea	a2,[a10]16
.L442:
	fcall	.cocofun_3
.L340:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   166      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   167  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   168      /* calculate IOCRx values and masks */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   169      uint32 imask = (uint32)mask << pinIndex;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   170  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   171      for (i = pinIndex; i < 16; i++)
	j	.L21
.L22:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   172      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   173          if ((imask & (1U << i)) != 0)
	mov	d1,#1
.L670:
	sh	d1,d1,d7
.L671:
	and	d1,d0
.L672:
	jeq	d1,#0,.L23
.L343:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   174          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   175              uint32 index = i / 4;
	fcall	.cocofun_4
.L445:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   176              uint32 shift = (i & 0x3U) * 8;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   177              iocrMask[index] |= (0x1FU << 3) << shift;
	addsc.a	a15,a10,d1,#2
.L447:
	mov	d15,#248
.L673:
	ld.w	d1,[a15]16
.L448:
	sh	d5,d15,d4
.L674:
	or	d1,d5
	st.w	[a15]16,d1
.L675:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   178              iocrVal[index]  |= (mode) << shift;
	sha	d1,d6,d4
.L676:
	ld.w	d15,[a15]
.L677:
	or	d15,d1
	st.w	[a15],d15
.L23:
	add	d7,#1
.L21:
	mov	d15,#16
.L678:
	jlt.u	d7,d15,.L22
.L679:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   179          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   180      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   181  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   182      /* write IOCRx */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   183      for (i = 0; i < 4; i++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   184      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   185          if (iocrMask[i] != 0)
	lea	a15,[a10]16
.L680:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   186          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   187              __ldmst(&((&(port->IOCR0.U))[i]), iocrMask[i], iocrVal[i]);
	mov.aa	a2,a10
	lea	a4,[a4]16
.L449:
	mov.a	a5,#3
.L24:
	ld.w	d15,[a15]
.L681:
	jeq	d15,#0,.L25
.L346:
	ld.w	d0,[a2]
.L682:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d15 
	mov d2, d0 
	ldmst [a4],e2
	
.L25:
	add.a	a15,#4
	add.a	a2,#4
.L683:
	add.a	a4,#4
	loop	a5,.L24
.L684:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   188          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   189      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   190  }
	ret
.L329:
	
__IfxPort_setGroupModeInput_function_end:
	.size	IfxPort_setGroupModeInput,__IfxPort_setGroupModeInput_function_end-IfxPort_setGroupModeInput
.L202:
	; End of function
	
	.sdecl	'.text.IfxPort..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxPort..cocofun_4'
	.align	2
; Function .cocofun_4
.L130:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	sh	d1,d7,#-2
.L446:
	and	d15,d7,#3
.L450:
	sh	d4,d15,#3
	fret
.L237:
	; End of function
	.sdecl	'.text.IfxPort..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxPort..cocofun_3'
	.align	2
; Function .cocofun_3
.L132:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	mov.a	a5,#3
.L20:
	st.w	[a15+],d1
.L759:
	st.w	[a2+],d1
	loop	a5,.L20
.L444:
	sh	d0,d0,d7
	fret
.L232:
	; End of function
	.sdecl	'.text.IfxPort.IfxPort_setGroupModeOutput',code,cluster('IfxPort_setGroupModeOutput')
	.sect	'.text.IfxPort.IfxPort_setGroupModeOutput'
	.align	2
	
	.global	IfxPort_setGroupModeOutput

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   191  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   192  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   193  void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
; Function IfxPort_setGroupModeOutput
.L134:
IfxPort_setGroupModeOutput:	.type	func
	mov	d7,d4
	sub.a	a10,#32
.L451:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   194  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   195      uint32 i;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   196      uint32 iocrVal[4];
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   197      uint32 iocrMask[4];
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   198  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   199      IFX_UNUSED_PARAMETER(index == IfxPort_OutputIdx_general);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   200  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   201      /* initialise */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   202      for (i = 0; i < 4; i++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   203      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   204          iocrVal[i]  = 0;
	mov	d0,d5
	mov.aa	a15,a10
.L452:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   205          iocrMask[i] = 0;
	mov	d8,d6
	lea	a2,[a10]16
.L455:
	mov	d1,#0
	fcall	.cocofun_3
.L361:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   206      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   207  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   208      /* calculate IOCRx values and masks */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   209      uint32 imask = (uint32)mask << pinIndex;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   210  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   211      for (i = pinIndex; i < 16; i++)
	j	.L27
.L28:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   212      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   213          if ((imask & (1U << i)) != 0)
	mov	d1,#1
.L689:
	sh	d1,d1,d7
.L690:
	and	d1,d0
.L691:
	jeq	d1,#0,.L29
.L363:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   214          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   215              uint32 index = i / 4;
	fcall	.cocofun_4
.L453:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   216              uint32 shift = (i & 0x3U) * 8;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   217              iocrMask[index] |= (0x1FU << 3) << shift;
	addsc.a	a15,a10,d1,#2
.L692:
	mov	d15,#248
.L693:
	ld.w	d5,[a15]16
.L694:
	sh	d6,d15,d4
.L695:
	or	d5,d6
	st.w	[a15]16,d5
.L696:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   218              iocrVal[index]  |= (mode | index) << shift;
	or	d1,d8
.L454:
	ld.w	d15,[a15]
.L697:
	sh	d1,d1,d4
.L698:
	or	d15,d1
	st.w	[a15],d15
.L29:
	add	d7,#1
.L27:
	mov	d15,#16
.L699:
	jlt.u	d7,d15,.L28
.L700:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   219          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   220      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   221  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   222      /* write IOCRx */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   223      for (i = 0; i < 4; i++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   224      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   225          if (iocrMask[i] != 0)
	lea	a15,[a10]16
.L701:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   226          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   227              __ldmst(&((&(port->IOCR0.U))[i]), iocrMask[i], iocrVal[i]);
	mov.aa	a2,a10
	lea	a4,[a4]16
.L456:
	mov.a	a5,#3
.L30:
	ld.w	d15,[a15]
.L702:
	jeq	d15,#0,.L31
.L366:
	ld.w	d0,[a2]
.L703:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d15 
	mov d2, d0 
	ldmst [a4],e2
	
.L31:
	add.a	a15,#4
	add.a	a2,#4
.L704:
	add.a	a4,#4
	loop	a5,.L30
.L705:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   228          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   229      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   230  }
	ret
.L350:
	
__IfxPort_setGroupModeOutput_function_end:
	.size	IfxPort_setGroupModeOutput,__IfxPort_setGroupModeOutput_function_end-IfxPort_setGroupModeOutput
.L207:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setGroupPadDriver',code,cluster('IfxPort_setGroupPadDriver')
	.sect	'.text.IfxPort.IfxPort_setGroupPadDriver'
	.align	2
	
	.global	IfxPort_setGroupPadDriver

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   231  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   232  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   233  void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver)
; Function IfxPort_setGroupPadDriver
.L136:
IfxPort_setGroupPadDriver:	.type	func
	mov	d10,d6
	sub.a	a10,#16
.L457:
	mov	e8,d4,d5
	mov.aa	a12,a4
.L459:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   234  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   235      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L458:
	mov	d11,d2
.L460:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   236  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   237      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d11
	call	IfxScuWdt_clearCpuEndinit
.L376:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   238      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   239          uint32 i;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   240          uint32 pdrVal[2];
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   241          uint32 pdrMask[2];
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   242  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   243          /* initialise */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   244          for (i = 0; i < 2; i++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   245          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   246              pdrVal[i]  = 0;
	mov	d0,#0
	mov.aa	a15,a10
.L710:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   247              pdrMask[i] = 0;
	lea	a2,[a10]8
.L711:
	mov.a	a4,#1
.L32:
	st.w	[a15+],d0
.L712:
	st.w	[a2+],d0
	loop	a4,.L32
.L382:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   248          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   249  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   250          /* calculate PDRx values and masks */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   251          uint32 imask = (uint32)mask << pinIndex;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   252  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   253          for (i = pinIndex; i < 16; i++)
	sh	d8,d8,d9
	j	.L33
.L34:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   254          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   255              if ((imask & (1U << i)) != 0)
	mov	d0,#1
.L461:
	sh	d0,d0,d9
.L462:
	and	d0,d8
.L713:
	jeq	d0,#0,.L35
.L384:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   256              {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   257                  uint32 index = i / 8;
	sh	d0,d9,#-3
.L463:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   258                  uint32 shift = (i & 0x7U) * 4;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   259                  pdrMask[index] |= (0xFUL << shift);
	addsc.a	a15,a10,d0,#2
.L465:
	and	d15,d9,#7
.L466:
	ld.w	d0,[a15]8
.L464:
	sh	d1,d15,#2
.L467:
	mov	d15,#15
.L714:
	sh	d15,d15,d1
.L715:
	or	d0,d15
	st.w	[a15]8,d0
.L716:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   260                  pdrVal[index]  |= (padDriver << shift);
	sha	d0,d10,d1
.L717:
	ld.w	d15,[a15]
.L718:
	or	d15,d0
	st.w	[a15],d15
.L35:
	add	d9,#1
.L33:
	mov	d15,#16
.L468:
	jlt.u	d9,d15,.L34
.L469:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   261              }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   262          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   263  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   264          /* write PDRx */
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   265          for (i = 0; i < 2; i++)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   266          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   267              if (pdrMask[i] != 0)
	lea	a15,[a10]8
.L719:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   268              {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   269                  __ldmst(&((&(port->PDR0.U))[i]), pdrMask[i], pdrVal[i]);
	mov.aa	a2,a10
	lea	a4,[a12]64
.L720:
	mov.a	a5,#1
.L36:
	ld.w	d15,[a15]
.L721:
	jeq	d15,#0,.L37
.L387:
	ld.w	d0,[a2]
.L722:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d15 
	mov d2, d0 
	ldmst [a4],e2
	
.L37:
	add.a	a15,#4
	add.a	a2,#4
.L723:
	add.a	a4,#4
	loop	a5,.L36
.L377:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   270              }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   271          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   272      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   273      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d11
.L470:
	j	IfxScuWdt_setCpuEndinit
.L370:
	
__IfxPort_setGroupPadDriver_function_end:
	.size	IfxPort_setGroupPadDriver,__IfxPort_setGroupPadDriver_function_end-IfxPort_setGroupPadDriver
.L212:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setPinMode',code,cluster('IfxPort_setPinMode')
	.sect	'.text.IfxPort.IfxPort_setPinMode'
	.align	2
	
	.global	IfxPort_setPinMode

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   274  }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   275  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   276  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   277  void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode)
; Function IfxPort_setPinMode
.L138:
IfxPort_setPinMode:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   278  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   279      volatile Ifx_P_IOCR0 *iocr      = &(port->IOCR0);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   280      uint8                 iocrIndex = (pinIndex / 4);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   281      uint8                 shift     = (pinIndex & 0x3U) * 8;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   282  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   283      if (port == &MODULE_P40)
	mov	e8,d5,d4
	ld.w	d0,.1.cnt
.L571:
	lea	a15,[a4]16
.L472:
	mov.a	a2,d0
.L474:
	and	d15,d8,#3
.L572:
	sha	d10,d8,#-2
.L475:
	sha	d11,d15,#3
	jne.a	a4,a2,.L38
.L260:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   284      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   285          uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L471:
	mov	d15,d2
.L477:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   286          IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_clearCpuEndinit
.L476:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   287          port->PDISC.U &= ~(1 << pinIndex);
	ld.w	d0,.2.cnt
.L573:
	mov	d1,#1
.L574:
	mov.a	a2,d0
.L478:
	sha	d1,d1,d8
.L479:
	ld.w	d0,[a2]
.L575:
	mov	d2,#-1
	xor	d1,d2
.L576:
	and	d0,d1
	st.w	[a2],d0
.L577:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   288          IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_setCpuEndinit
.L38:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   289      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   290  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   291      __ldmst(&iocr[iocrIndex].U, (0xFFUL << shift), (mode << shift));
	addsc.a	a15,a15,d10,#2
.L473:
	mov	d15,#255
	sh	d15,d15,d11
.L480:
	sha	d9,d9,d11
.L481:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d15 
	mov d2, d9 
	ldmst [a15],e2
	
.L264:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   292  }
	ret
.L251:
	
__IfxPort_setPinMode_function_end:
	.size	IfxPort_setPinMode,__IfxPort_setPinMode_function_end-IfxPort_setPinMode
.L167:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setPinModeLVDS',code,cluster('IfxPort_setPinModeLVDS')
	.sect	'.text.IfxPort.IfxPort_setPinModeLVDS'
	.align	2
	
	.global	IfxPort_setPinModeLVDS

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   293  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   294  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   295  void IfxPort_setPinModeLVDS(Ifx_P *port, uint8 pinIndex, IfxPort_Mode pinMode, IfxPort_LvdsConfig *lvds)
; Function IfxPort_setPinModeLVDS
.L140:
IfxPort_setPinModeLVDS:	.type	func
	mov	d8,d5
	mov.aa	a15,a5
.L483:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   296  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   297      uint32               lpcrOffset = (pinIndex / 2);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   298  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   299      volatile Ifx_P_LPCR *lpcr       = &(port->LPCR[0]);
	sha	d15,d4,#-1
	lea	a12,[a4]160
.L484:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   300      uint16               passwd     = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L482:
	mov	d9,d2
.L487:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   301  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   302      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d9
	call	IfxScuWdt_clearCpuEndinit
.L486:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   303      lpcr[lpcrOffset].B.LVDSM = lvds->lvdsMode;
	addsc.a	a2,a12,d15,#2
.L582:
	ld.bu	d0,[a15]
.L583:
	ld.bu	d15,[a2]
.L485:
	insert	d15,d15,d0,#6,#1
	st.b	[a2],d15
.L584:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   304      lpcr[lpcrOffset].B.PS    = lvds->padSupply;
	ld.bu	d0,[a2]
.L585:
	ld.bu	d15,[a15]2
.L586:
	insert	d15,d0,d15,#7,#1
	st.b	[a2],d15
.L587:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   305  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   306      if (pinMode < IfxPort_Mode_outputPushPullGeneral)
	mov	d15,#128
.L588:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   307      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   308          lpcr[lpcrOffset].B.REN_CTRL = lvds->enablePortControlled;
	ld.bu	d0,[a15]1
.L589:
	jge.u	d8,d15,.L39
.L590:
	ld.bu	d15,[a2]
.L591:
	insert	d15,d15,d0,#0,#1
	st.b	[a2],d15
.L592:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   309          lpcr[lpcrOffset].B.RX_EN    = 1;
	ld.bu	d15,[a2]
.L593:
	or	d15,#2
	j	.L40
.L39:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   310      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   311      else
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   312      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   313          lpcr[lpcrOffset].B.TEN_CTRL = lvds->enablePortControlled;
	ld.bu	d15,[+a2]1
.L594:
	insert	d15,d15,d0,#0,#1
	st.b	[a2],d15
.L595:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   314          lpcr[lpcrOffset].B.TX_EN    = 1;
	ld.bu	d15,[a2]
.L596:
	or	d15,#2
	st.b	[a2],d15
.L597:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   315          lpcr[lpcrOffset].B.TX_PD    = 0;
	ld.bu	d15,[a2]
.L598:
	insert	d15,d15,#0,#6,#1
.L40:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   316      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   317  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   318      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d9
	st.b	[a2],d15
.L488:
	j	IfxScuWdt_setCpuEndinit
.L272:
	
__IfxPort_setPinModeLVDS_function_end:
	.size	IfxPort_setPinModeLVDS,__IfxPort_setPinModeLVDS_function_end-IfxPort_setPinModeLVDS
.L172:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setPinPadDriver',code,cluster('IfxPort_setPinPadDriver')
	.sect	'.text.IfxPort.IfxPort_setPinPadDriver'
	.align	2
	
	.global	IfxPort_setPinPadDriver

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   319  }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   320  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   321  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   322  void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver)
; Function IfxPort_setPinPadDriver
.L142:
IfxPort_setPinPadDriver:	.type	func
	mov.aa	a15,a4
.L490:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   323  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   324      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	mov	e8,d5,d4
	call	IfxScuWdt_getCpuWatchdogPassword
.L489:
	mov	d10,d2
.L491:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   325  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   326      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d10
	call	IfxScuWdt_clearCpuEndinit
.L289:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   327      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   328          volatile uint32 *pdr      = (volatile uint32 *)&(port->PDR0.U);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   329          uint8            pdrIndex = (pinIndex / 8);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   330          uint8            shift    = (pinIndex & 0x7U) * 4;
	and	d15,d8,#7
.L292:
	sha	d8,#-3
.L603:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   331          __ldmst(&(pdr[pdrIndex]), (0xFUL << shift), (padDriver << shift));
	addsc.a	a15,a15,d8,#2
.L293:
	sha	d0,d15,#2
.L298:
	lea	a15,[a15]64
	mov	d15,#15
	sh	d15,d15,d0
.L492:
	sha	d9,d9,d0
.L493:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d15 
	mov d2, d9 
	ldmst [a15],e2
	
.L290:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   332      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   333      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d10
.L494:
	j	IfxScuWdt_setCpuEndinit
.L283:
	
__IfxPort_setPinPadDriver_function_end:
	.size	IfxPort_setPinPadDriver,__IfxPort_setPinPadDriver_function_end-IfxPort_setPinPadDriver
.L177:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_setPinControllerSelection',code,cluster('IfxPort_setPinControllerSelection')
	.sect	'.text.IfxPort.IfxPort_setPinControllerSelection'
	.align	2
	
	.global	IfxPort_setPinControllerSelection

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   334  }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   335  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   336  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   337  void IfxPort_setPinControllerSelection(Ifx_P *port, uint8 pinIndex)
; Function IfxPort_setPinControllerSelection
.L144:
IfxPort_setPinControllerSelection:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   338  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   339      boolean       select    = 0, lock = 0;
	mov	d8,#0
	mov.aa	a15,a4
.L496:
	mov	d9,d8
.L499:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   340      IfxPort_Index portIndex = IfxPort_getIndex(port);
	mov	d15,d4
	call	IfxPort_getIndex
.L495:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   341  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   342      switch (portIndex)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   343      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   344      case IfxPort_Index_00:
	jeq	d2,#0,.L41
.L608:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   345  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   346          if ((pinIndex == 10) || (pinIndex == 11))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   347  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   348          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   349              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   350          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   351  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   352          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   353  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   354      case IfxPort_Index_11:
	mov	d0,#11
	jeq	d0,d2,.L42
.L609:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   355  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   356          if ((pinIndex == 0) || (pinIndex == 1) || (pinIndex == 2) || (pinIndex == 3) || (pinIndex == 4) || (pinIndex == 6))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   357          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   358              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   359          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   360  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   361          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   362  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   363      case IfxPort_Index_22:
	mov	d0,#22
	jeq	d0,d2,.L43
.L610:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   364  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   365          if ((pinIndex == 10) || (pinIndex == 11))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   366          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   367              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   368          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   369  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   370          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   371  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   372      case IfxPort_Index_23:
	mov	d0,#23
	jeq	d0,d2,.L44
.L611:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   373  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   374          if ((pinIndex == 2) || (pinIndex == 3) || (pinIndex == 4))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   375  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   376          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   377              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   378          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   379  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   380          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   381  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   382      case IfxPort_Index_33:
	mov	d0,#33
	jeq	d0,d2,.L45
.L612:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   383  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   384          select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   385          lock   = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   386          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   387      case IfxPort_Index_34:
	mov	d0,#34
	jeq	d0,d2,.L46
.L613:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   388  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   389          if (pinIndex == 1)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   390          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   391              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   392              lock   = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   393          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   394  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   395          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   396  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   397      case IfxPort_Index_40:
	mov	d0,#40
	jeq	d0,d2,.L47
	j	.L48
.L41:
	mov	d0,#10
.L614:
	jeq	d15,d0,.L49
.L615:
	mov	d0,#11
.L616:
	jne	d15,d0,.L50
.L617:
	j	.L51
.L42:
	jeq	d15,#0,.L52
.L618:
	jeq	d15,#1,.L53
.L619:
	jeq	d15,#2,.L54
.L620:
	jeq	d15,#3,.L55
.L621:
	jeq	d15,#4,.L56
.L622:
	jne	d15,#6,.L57
.L623:
	j	.L58
.L43:
	mov	d0,#10
.L624:
	jeq	d15,d0,.L59
.L625:
	mov	d0,#11
.L626:
	jne	d15,d0,.L60
.L627:
	j	.L61
.L44:
	jeq	d15,#2,.L62
.L628:
	jeq	d15,#3,.L63
.L629:
	jne	d15,#4,.L64
.L630:
	j	.L65
.L46:
	jne	d15,#1,.L66
.L45:
	mov	d8,#1
.L631:
	mov	d9,d8
	j	.L67
.L47:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   398  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   399          if ((pinIndex == 1) || (pinIndex == 2) || (pinIndex == 3) || (pinIndex == 5) || (pinIndex == 10) || (pinIndex == 11) || (pinIndex == 12))
	jeq	d15,#1,.L68
.L632:
	jeq	d15,#2,.L69
.L633:
	jeq	d15,#3,.L70
.L634:
	jeq	d15,#5,.L71
.L635:
	mov	d0,#10
.L636:
	jeq	d15,d0,.L72
.L637:
	mov	d0,#11
.L638:
	jeq	d15,d0,.L73
.L639:
	mov	d0,#12
.L640:
	jne	d15,d0,.L74
.L73:
.L72:
.L71:
.L70:
.L69:
.L68:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   400          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   401              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   402          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   403  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   404          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   405  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   406      default:
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   407          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   408      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   409  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   410      if (select == 1)
.L65:
.L63:
.L62:
.L61:
.L59:
.L58:
.L56:
.L55:
.L54:
.L53:
.L52:
.L51:
.L49:
	mov	d8,#1
.L74:
.L67:
.L66:
.L64:
.L60:
.L57:
.L50:
.L48:
	jeq	d8,#0,.L75
.L306:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   411      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   412          uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
	call	IfxScuWdt_getSafetyWatchdogPassword
.L500:
	mov	d8,d2
.L498:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   413  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   414          IfxScuWdt_clearSafetyEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearSafetyEndinit
.L501:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   415  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   416          if ((lock == 1) && (port->PCSR.B.LCK == 1))
	jeq	d9,#0,.L76
.L641:
	ld.bu	d0,[a15]103
.L76:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   417          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   418              IFX_ASSERT(IFX_VERBOSE_LEVEL_WARNING, FALSE);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   419          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   420  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   421          __ldmst(&port->PCSR.U, 1U << pinIndex, 1U << pinIndex);
	mov	d0,#1
	sh	d0,d0,d15
	lea	a15,[a15]100
.L497:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d0 
	mov d2, d0 
	ldmst [a15],e2
	
.L308:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   422  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   423          IfxScuWdt_setSafetyEndinit(passwd);
	mov	d4,d8
.L502:
	j	IfxScuWdt_setSafetyEndinit
.L75:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   424      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   425  }
	ret
.L299:
	
__IfxPort_setPinControllerSelection_function_end:
	.size	IfxPort_setPinControllerSelection,__IfxPort_setPinControllerSelection_function_end-IfxPort_setPinControllerSelection
.L182:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_resetPinControllerSelection',code,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.text.IfxPort.IfxPort_resetPinControllerSelection'
	.align	2
	
	.global	IfxPort_resetPinControllerSelection

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   426  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   427  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   428  void IfxPort_resetPinControllerSelection(Ifx_P *port, uint8 pinIndex)
; Function IfxPort_resetPinControllerSelection
.L146:
IfxPort_resetPinControllerSelection:	.type	func
	mov.aa	a15,a4
.L504:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   429  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   430      uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
	mov	d15,d4
	call	IfxScuWdt_getSafetyWatchdogPassword
.L503:
	mov	d8,d2
.L507:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   431  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   432      IfxScuWdt_clearSafetyEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearSafetyEndinit
.L316:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   433      __ldmst(&port->PCSR.U, 1U << pinIndex, 0);
	mov	d0,#1
	lea	a15,[a15]100
.L505:
	sh	d0,d0,d15
.L646:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     2   * \file IfxCpu_IntrinsicsTasking.h
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     3   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     4   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     5   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     6   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     7   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	     9   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    11   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    12   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    13   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    14   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    15   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    16   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    18   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    19   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    20   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    21   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    22   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    23   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    24   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    25   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    26   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    27   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    28   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    29   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    30   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    31   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    32   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    33   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    34   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    35   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    36   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    37   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    38   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    39   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    40   * \defgroup IfxLld_Cpu_Intrinsics_Tasking Intrinsics for TASKING compiler
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    41   * \ingroup IfxLld_Cpu_Intrinsics
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    43   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    44  #ifndef IFXCPU_INTRINSICSTASKING_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    45  #define IFXCPU_INTRINSICSTASKING_H
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    46  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    47  #include "Ifx_Types.h"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    48  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    49  /* *INDENT-OFF* */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    50  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    51  #ifndef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    52  /** Function call without return
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    53   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    54  #define Ifx__non_return_call(fun)	__asm("\tji %0"::"a"(fun))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    55  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    56  /** Jump and link
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    57   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    58  IFX_INLINE void Ifx__jump_and_link(void (*fun)(void))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    59  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    60  	__asm("jli %0"::"a"(fun));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    61  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    63  IFX_INLINE void Ifx__moveToDataParam0(unsigned int var)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    64  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    65  	__asm("mov d4, %0"::"d"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    66  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    67  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    68  IFX_INLINE void Ifx__moveToAddrParam0(const void *var)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    69  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    70  	__asm("mov.aa a4, %0"::"a"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    71  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    72  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    73  IFX_INLINE unsigned int Ifx__getDataParamRet(void)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    74  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    75  	unsigned int var;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    76  	__asm(" mov\t %0, d2":"=d"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    77  	return var;
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    78  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    80  IFX_INLINE void Ifx__moveToDataParamRet(unsigned int var)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    81  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    82  	__asm("mov d2, %0"::"d"(var));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    83  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    84  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    85  IFX_INLINE void Ifx__jumpToFunction(const void *fun)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    86  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    87  	Ifx__non_return_call(fun);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    88  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    89  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    90  IFX_INLINE void Ifx__jumpToFunctionWithLink(const void *fun)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    91  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    92  	Ifx__jump_and_link((void (*)(void))fun);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    93  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    94  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    95  IFX_INLINE void Ifx__jumpBackToLink(void)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    96  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    97  	__asm("ji a11");
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    98  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	    99  #endif
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   100  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_any_type Cross type arithmetic operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   101   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   102   * Macro compatible with float, fix point, signed integer and unsigned integer
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   103   *
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   104   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   105   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   106   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   107  #define Ifx__minX(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   108  #define Ifx__maxX(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   109  #define Ifx__saturateX(X,Min,Max)          ( Ifx__minX(Ifx__maxX(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   110  #define Ifx__checkrangeX(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   111  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   113  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_singed_integer Signed integer operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   114   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   115   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   116   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   117  #define Ifx__saturate(X,Min,Max)           ( __min(__max(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   118  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   119  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   120  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_unsinged_integer Unsigned integer operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   121   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   122   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   123   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   124  #define Ifx__saturateu(X,Min,Max)           ( __minu(__maxu(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   125  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   127  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_float Floating point operation
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   128   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   129   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   130   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   131  #define Ifx__checkrange(X,Min,Max)         (((X) >= (Min)) && ((X) <= (Max)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   132  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   133  #define Ifx__sqrf(X)                       ((X) * (X))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   134  #define Ifx__sqrtf(X)                      sqrtf(X)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   136  #define Ifx__roundf(X)                     ((((X) - (int)(X)) > 0.5) ? (1 + (int)(X)) : ((int)(X)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   137  #define Ifx__absf(X)                       ( ((X) < 0.0) ? -(X) : (X) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   138  #define Ifx__minf(X,Y)                     ( ((X) < (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   139  #define Ifx__maxf(X,Y)                     ( ((X) > (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   140  #define Ifx__saturatef(X,Min,Max)          ( Ifx__minf(_Ifx_maxf(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   141  #define Ifx__checkrangef(X,Min,Max)        (((X) >= (Min)) && ((X) <= (Max)))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   142  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   143  #define Ifx__abs_stdreal(X)                ( ((X) > 0.0) ? (X) : -(X) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   144  #define Ifx__min_stdreal(X,Y)              ( ((X) < (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   145  #define Ifx__max_stdreal(X,Y)              ( ((X) > (Y)) ? (X) : (Y) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   146  #define Ifx__saturate_stdreal(X,Min,Max)   ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   147  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   148  #define Ifx__neqf(X,Y)                     ( ((X) > (Y)) ||  ((X) < (Y)) )     /**< X != Y */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   149  #define Ifx__leqf(X,Y)                     ( !((X) > (Y)) )     /**< X <= Y */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   150  #define Ifx__geqf(X,Y)                     ( !((X) < (Y)) )     /**< X >= Y */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   151  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   152  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_fractional Fractional Arithmetic Support
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   153   The next table provides an overview of intrinsic functions to convert fractional values. Note that the
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   154   TASKING VX-toolset C compiler for TriCore fully supports the fractional type so normally you should not
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   155   need these intrinsic functions (except for __mulfractlong). For compatibility reasons the TASKING C
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   156   compiler does support these functions.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   157   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   158   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   159   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   160  #define Ifx__fract_to_float(value)  ((float)(value))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   161  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   162  #define Ifx__mulfractlong __mulfractlong
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   163  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   164  #define Ifx__mulfractfract(fractvalue1,fractvalue2)  ((fractvalue1)*(fractvalue2))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   166  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   167  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   168  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_insert Insert / Extract Bit-fields and Bits
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   169   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   170   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   171   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   172  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   173  #define Ifx__extru(a, p, w)            __extru(a,p,w)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   175  #define Ifx__extr(a, p, w)             __extr(a,p,w)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   176  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   177  #define Ifx__imaskldmst(a, v, b, p)    __imaskldmst((int*)a, v, b, p)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   178  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   179  #define Ifx__insert(a,b,p,w)           __insert(a,b,p,w)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   180  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   181  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   182  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   183  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_interrupt_handling Interrupt Handling
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   184   The next table provides an overview of the intrinsic functions to read or set interrupt handling.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   185   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   186   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   187   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   188  #define Ifx__disable_and_save __disable_and_save
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   189  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   190  #define Ifx__restore __restore
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   191  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   192  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   193  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   194  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_miscellaneous Miscellaneous Intrinsic Functions
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   195   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   196   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   197   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   198  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   199  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   200  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   201  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_packed Packed Data Type Support
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   202   The next table provides an overview of the intrinsic functions for initialization of packed data type.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   203   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   204   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   205   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   206  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   207  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   209  #ifndef __cplusplus
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   210  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_register Register Handling
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   211   The next table provides an overview of the intrinsic functions that you can use to access control registers.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   212   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   213   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   214   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   215  #define Ifx__mtcr_no_isync(reg, val)   \ 
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   216      __asm("mtcr %0,%1"::"i"(reg),"d"(val));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   218  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   219  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   220  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_saturation Saturation Arithmetic Support
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   221   These intrinsics support saturation arithmetic
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   222   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   223   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   224   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   225  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   226  #define Ifx__adds(a,b)                 ((__sat int)(a)+(__sat int)(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   228  #define Ifx__addsu(a,b)                ((__sat unsigned int)(a)+(__sat unsigned int)(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   229  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   230  #define Ifx__subs(a,b)                 ((__sat int)(a)-(__sat int)(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   231  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   232  #define Ifx__subsu(a,b)                ((__sat unsigned int )(a)-(__sat unsigned int )(b))
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   233  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   234  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   235  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   236  /** \defgroup IfxLld_Cpu_Intrinsics_Tasking_single_assembly Insert Single Assembly Instruction
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   237   The next table provides an overview of the intrinsic functions that you can use to insert a single assembly
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   238   instruction.You can also use inline assembly but these intrinsics provide a shorthand for frequently used
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   239   assembly instructions.
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   240   * \ingroup IfxLld_Cpu_Intrinsics_Tasking
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   241   * \{
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   242   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   243  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   244  IFX_INLINE void Ifx__nops(void* cnt)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   245  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   246      __asm("nop16 \n\t"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   247            "loop %0,*-2"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   248            ::"a"(((char*)cnt) - 1));
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   249  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   251  #define Ifx__NOP(n)   __asm(".DUP " #n "\n\tnop16\n\t.ENDM\n")
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   252  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   253  /** Insert a memory barrier
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   254   */
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   255  #define Ifx__mem_barrier __asm("":::"memory");
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   256  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   257  #if CPU_NO_LDMST
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   258  IFX_INLINE void Ifx__ldmstC(volatile void *addr, uint32 mask, uint32 data)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   260      *(volatile uint32 *)addr = (*(volatile uint32 *)addr & ~mask) | (mask & data);
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   261  }
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   262  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   263  #define Ifx__ldmst(a,b,c) Ifx__ldmstC(a,b,c)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   264  #else
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   265  
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   266  IFX_INLINE void Ifx__ldmstAsm(volatile void *addr, uint32 mask, uint32 data)
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   267  {
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   269            "\tmov d2, %2 \n"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   270            "\tldmst [%0],e2"
; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   271            ::"a"(addr), "d"(mask), "d"(data):"d2", "d3");
	mov	d15,#0
.L506:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d0 
	mov d2, d15 
	ldmst [a15],e2
	
.L317:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   434      IfxScuWdt_setSafetyEndinit(passwd);
	mov	d4,d8
.L508:
	j	IfxScuWdt_setSafetyEndinit
.L312:
	
__IfxPort_resetPinControllerSelection_function_end:
	.size	IfxPort_resetPinControllerSelection,__IfxPort_resetPinControllerSelection_function_end-IfxPort_resetPinControllerSelection
.L187:
	; End of function
	
	.sdecl	'.text.IfxPort.IfxPort_modifyPinControllerSelection',code,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.text.IfxPort.IfxPort_modifyPinControllerSelection'
	.align	2
	
	.global	IfxPort_modifyPinControllerSelection

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   435  }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   436  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   437  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   438  void IfxPort_modifyPinControllerSelection(Ifx_P *port, uint8 pinIndex, boolean mode)
; Function IfxPort_modifyPinControllerSelection
.L148:
IfxPort_modifyPinControllerSelection:	.type	func

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   439  {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   440      boolean       select    = 0, lock = 0;
	mov	d10,#0
	mov.aa	a15,a4
.L510:
	mov	d11,d10
.L512:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   441      IfxPort_Index portIndex = IfxPort_getIndex(port);
	mov	e8,d5,d4
	call	IfxPort_getIndex
.L509:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   442  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   443      switch (portIndex)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   444      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   445      case IfxPort_Index_00:
	jeq	d2,#0,.L77
.L737:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   446  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   447          if ((pinIndex == 10) || (pinIndex == 11))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   448          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   449              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   450          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   451  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   452          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   453  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   454      case IfxPort_Index_11:
	mov	d15,#11
	jeq	d15,d2,.L78
.L738:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   455  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   456          if ((pinIndex == 0) || (pinIndex == 1) || (pinIndex == 2) || (pinIndex == 3) || (pinIndex == 4) || (pinIndex == 6))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   457          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   458              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   459          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   460  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   461          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   462  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   463      case IfxPort_Index_22:
	mov	d15,#22
	jeq	d15,d2,.L79
.L739:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   464  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   465          if ((pinIndex == 10) || (pinIndex == 11) || (pinIndex == 12))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   466          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   467              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   468          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   469  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   470          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   471      case IfxPort_Index_23:
	mov	d15,#23
	jeq	d15,d2,.L80
.L740:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   472  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   473          if ((pinIndex == 2) || (pinIndex == 3) || (pinIndex == 4))
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   474          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   475              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   476          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   477  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   478          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   479  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   480      case IfxPort_Index_33:
	mov	d15,#33
	jeq	d15,d2,.L81
.L741:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   481  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   482          select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   483          lock   = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   484          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   485      case IfxPort_Index_34:
	mov	d15,#34
	jeq	d15,d2,.L82
.L742:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   486  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   487          if (pinIndex == 1)
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   488          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   489              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   490              lock   = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   491          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   492  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   493          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   494      case IfxPort_Index_40:
	mov	d15,#40
	jeq	d15,d2,.L83
	j	.L84
.L77:
	mov	d15,#10
.L514:
	jeq	d15,d8,.L85
.L515:
	mov	d15,#11
.L516:
	jne	d15,d8,.L86
.L517:
	j	.L87
.L78:
	jeq	d8,#0,.L88
.L743:
	jeq	d8,#1,.L89
.L744:
	jeq	d8,#2,.L90
.L745:
	jeq	d8,#3,.L91
.L746:
	jeq	d8,#4,.L92
.L747:
	jne	d8,#6,.L93
.L518:
	j	.L94
.L79:
	mov	d15,#10
.L519:
	jeq	d15,d8,.L95
.L520:
	mov	d15,#11
.L521:
	jeq	d15,d8,.L96
.L522:
	mov	d15,#12
.L523:
	jne	d15,d8,.L97
.L524:
	j	.L98
.L80:
	jeq	d8,#2,.L99
.L748:
	jeq	d8,#3,.L100
.L749:
	jne	d8,#4,.L101
.L525:
	j	.L102
.L82:
	jne	d8,#1,.L103
.L81:
	mov	d10,#1
.L750:
	mov	d11,d10
	j	.L104
.L83:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   495  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   496          if ((pinIndex == 1) || (pinIndex == 2) || (pinIndex == 3) || (pinIndex == 5) || (pinIndex == 10) || (pinIndex == 11) || (pinIndex == 12) || (pinIndex == 15))
	jeq	d8,#1,.L105
.L751:
	jeq	d8,#2,.L106
.L752:
	jeq	d8,#3,.L107
.L753:
	jeq	d8,#5,.L108
.L526:
	mov	d15,#10
.L527:
	jeq	d15,d8,.L109
.L528:
	mov	d15,#11
.L529:
	jeq	d15,d8,.L110
.L530:
	mov	d15,#12
.L531:
	jeq	d15,d8,.L111
.L532:
	mov	d15,#15
.L533:
	jne	d15,d8,.L112
.L111:
.L110:
.L109:
.L108:
.L107:
.L106:
.L105:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   497          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   498              select = 1;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   499          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   500  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   501          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   502      default:
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   503          break;
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   504      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   505  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   506      if (select == 1)
.L102:
.L100:
.L99:
.L98:
.L96:
.L95:
.L94:
.L92:
.L91:
.L90:
.L89:
.L88:
.L87:
.L85:
	mov	d10,#1
.L112:
.L104:
.L103:
.L101:
.L97:
.L93:
.L86:
.L84:
	jeq	d10,#0,.L113
.L416:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   507      {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   508          uint16 passwd = IfxScuWdt_getSafetyWatchdogPassword();
	call	IfxScuWdt_getSafetyWatchdogPassword
.L513:
	mov	d15,d2
.L535:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   509  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   510          IfxScuWdt_clearSafetyEndinit(passwd);
	mov	d4,d15
	call	IfxScuWdt_clearSafetyEndinit
.L534:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   511  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   512          if ((lock == 1) && (port->PCSR.B.LCK == 1))
	jeq	d11,#0,.L114
.L754:
	ld.bu	d0,[a15]103
.L114:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   513          {
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   514              IFX_ASSERT(IFX_VERBOSE_LEVEL_WARNING, FALSE);
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   515          }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   516  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   517          __ldmst(&port->PCSR.U, 1U << pinIndex, mode << pinIndex);
	mov	d0,#1
	lea	a15,[a15]100
.L511:
	sh	d0,d0,d8
.L537:
	sha	d9,d9,d8
.L536:

; D:\WorkSpace\Tasking\Tasking_TC375_Ethernet\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu_IntrinsicsTasking.h	   268      __asm("\tmov d3, %1 \n"      (inlined)
	
		mov d3, d0 
	mov d2, d9 
	ldmst [a15],e2
	
.L418:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   518  
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   519          IfxScuWdt_setSafetyEndinit(passwd);
	mov	d4,d15
.L538:
	j	IfxScuWdt_setSafetyEndinit
.L113:

; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   520      }
; ..\0_Src\4_McHal\Tricore\Port\Std\IfxPort.c	   521  }
	ret
.L409:
	
__IfxPort_modifyPinControllerSelection_function_end:
	.size	IfxPort_modifyPinControllerSelection,__IfxPort_modifyPinControllerSelection_function_end-IfxPort_modifyPinControllerSelection
.L227:
	; End of function
	
	.calls	'IfxPort_disableEmergencyStop','IfxPort_resetESR'
	.calls	'IfxPort_enableEmergencyStop','IfxPort_setESR'
	.calls	'IfxPort_resetESR','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPort_resetESR','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPort_resetESR','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPort_setESR','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPort_setESR','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPort_setESR','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPort_setGroupPadDriver','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPort_setGroupPadDriver','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPort_setGroupPadDriver','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPort_setPinMode','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPort_setPinMode','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPort_setPinMode','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPort_setPinModeLVDS','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPort_setPinModeLVDS','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPort_setPinModeLVDS','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPort_setPinPadDriver','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxPort_setPinPadDriver','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxPort_setPinPadDriver','IfxScuWdt_setCpuEndinit'
	.calls	'IfxPort_setPinControllerSelection','IfxPort_getIndex'
	.calls	'IfxPort_setPinControllerSelection','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxPort_setPinControllerSelection','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxPort_setPinControllerSelection','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxPort_resetPinControllerSelection','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxPort_resetPinControllerSelection','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxPort_resetPinControllerSelection','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxPort_modifyPinControllerSelection','IfxPort_getIndex'
	.calls	'IfxPort_modifyPinControllerSelection','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'IfxPort_modifyPinControllerSelection','IfxScuWdt_clearSafetyEndinit'
	.calls	'IfxPort_modifyPinControllerSelection','IfxScuWdt_setSafetyEndinit'
	.calls	'IfxPort_setGroupModeInput','.cocofun_3'
	.calls	'IfxPort_setGroupModeInput','.cocofun_4'
	.calls	'IfxPort_setGroupModeOutput','.cocofun_3'
	.calls	'IfxPort_setGroupModeOutput','.cocofun_4'
	.calls	'IfxPort_disableEmergencyStop','',0
	.calls	'IfxPort_enableEmergencyStop','',0
	.calls	'IfxPort_getAddress','',0
	.calls	'IfxPort_getIndex','',0
	.calls	'IfxPort_resetESR','',0
	.calls	'IfxPort_setESR','',0
	.calls	'IfxPort_setGroupModeInput','',32
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_3','',0
	.calls	'IfxPort_setGroupModeOutput','',32
	.calls	'IfxPort_setGroupPadDriver','',16
	.calls	'IfxPort_setPinMode','',0
	.calls	'IfxPort_setPinModeLVDS','',0
	.calls	'IfxPort_setPinPadDriver','',0
	.calls	'IfxPort_setPinControllerSelection','',0
	.calls	'IfxPort_resetPinControllerSelection','',0
	.extern	IfxPort_cfg_esrMasks
	.extern	IfxPort_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_clearSafetyEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_setSafetyEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuWdt_getSafetyWatchdogPassword
	.calls	'IfxPort_modifyPinControllerSelection','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L150:
	.word	39569
	.half	3
	.word	.L151
	.byte	4
.L149:
	.byte	1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L152
	.byte	2,1,1,3
	.word	156
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	159
	.byte	6,0,7
	.byte	'void',0,8
	.word	204
	.byte	3
	.word	210
.L278:
	.byte	9
	.byte	'unsigned long int',0,4,7
.L263:
	.byte	4
	.byte	'Ifx__ldmstAsm',0,3,1,138,2,17,1,1
.L265:
	.byte	5
	.byte	'addr',0,1,138,2,46
	.word	215
.L267:
	.byte	5
	.byte	'mask',0,1,138,2,59
	.word	220
.L269:
	.byte	5
	.byte	'data',0,1,138,2,72
	.word	220
.L271:
	.byte	6,0,9
	.byte	'__fract',0,4,128,1,9
	.byte	'float',0,4,4,10
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	307
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	319
	.byte	6,0,9
	.byte	'unsigned long long int',0,8,7,3
	.word	204
	.byte	10
	.byte	'__ld64',0,3,2,132,1,19
	.word	373
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	399
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	399
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	373
	.byte	6,0,9
	.byte	'unsigned int',0,4,7,9
	.byte	'int',0,4,5
.L238:
	.byte	9
	.byte	'unsigned char',0,1,8
.L261:
	.byte	9
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_P_OUT_Bits',0,4,145,3,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,171,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	547
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,4,171,2,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,4,251,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	863
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,4,133,1,16,4,12
	.byte	'MODREV',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,155,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1434
	.byte	4,2,35,0,0,15,4
	.word	508
	.byte	16,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,4,163,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,4,171,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1563
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,4,189,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,4,187,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1778
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,4,202,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,4,195,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1993
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,4,176,1,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	508
	.byte	5,0,2,35,3,0,13,4,179,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2210
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,4,141,1,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,163,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2430
	.byte	4,2,35,0,0,15,24
	.word	508
	.byte	16,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,4,212,3,16,4,12
	.byte	'PD0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'PL0',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'PD1',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'PL1',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'PD2',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'PL2',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'PD3',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'PL3',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'PD4',0,1
	.word	508
	.byte	2,6,2,35,2,12
	.byte	'PL4',0,1
	.word	508
	.byte	2,4,2,35,2,12
	.byte	'PD5',0,1
	.word	508
	.byte	2,2,2,35,2,12
	.byte	'PL5',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'PD6',0,1
	.word	508
	.byte	2,6,2,35,3,12
	.byte	'PL6',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'PD7',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'PL7',0,1
	.word	508
	.byte	2,0,2,35,3,0,13,4,195,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2754
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,4,233,3,16,4,12
	.byte	'PD8',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'PL8',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'PD9',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'PL9',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'PD10',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'PL10',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'PD11',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'PL11',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'PD12',0,1
	.word	508
	.byte	2,6,2,35,2,12
	.byte	'PL12',0,1
	.word	508
	.byte	2,4,2,35,2,12
	.byte	'PD13',0,1
	.word	508
	.byte	2,2,2,35,2,12
	.byte	'PL13',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'PD14',0,1
	.word	508
	.byte	2,6,2,35,3,12
	.byte	'PL14',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'PD15',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'PL15',0,1
	.word	508
	.byte	2,0,2,35,3,0,13,4,203,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3058
	.byte	4,2,35,0,0,15,8
	.word	508
	.byte	16,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,4,111,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,147,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3383
	.byte	4,2,35,0,0,15,12
	.word	508
	.byte	16,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,4,190,3,16,4,12
	.byte	'PDIS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,187,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3723
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,4,167,3,16,4,12
	.byte	'SEL0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'SEL8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'SEL9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'SEL12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'SEL13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'SEL14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'SEL15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,4,179,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4089
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,4,230,2,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	485
	.byte	28,0,2,35,0,0,13,4,139,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4453
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,4,251,2,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	485
	.byte	24,0,2,35,0,0,13,4,155,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4600
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,4,134,3,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	485
	.byte	20,0,2,35,0,0,13,4,163,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4769
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,4,240,2,16,4,12
	.byte	'reserved_0',0,2
	.word	525
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,147,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4941
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,4,128,2,16,4,12
	.byte	'reserved_0',0,2
	.word	525
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	525
	.byte	12,0,2,35,2,0,13,4,219,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5116
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,4,149,2,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	8,0,2,35,3,0,13,4,235,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5290
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,4,160,2,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,13,4,243,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5464
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,4,139,2,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,4,227,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5640
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,4,208,2,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,131,5,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5796
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,4,234,1,16,4,12
	.byte	'reserved_0',0,2
	.word	525
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,4,211,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6129
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR_Bits',0,4,215,1,16,4,12
	.byte	'REN_CTRL',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'RX_EN',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	508
	.byte	3,2,2,35,0,12
	.byte	'LVDSM',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PS',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TEN_CTRL',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TX_EN',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'VDIFFADJ',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'VOSDYN',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'VOSEXT',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,13,4,203,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6477
	.byte	4,2,35,0,0,15,32
	.word	6757
	.byte	16,7,0,15,56
	.word	508
	.byte	16,55,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,4,105,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	32,0,2,35,0,0,13,4,139,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6815
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,4,68,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	508
	.byte	1,0,2,35,3,0,13,4,131,4,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6902
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,4,220,5,25,128,2,14
	.byte	'OUT',0
	.word	823
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	1394
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	1514
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1554
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	1738
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	1953
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	2170
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	2390
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	1554
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	2705
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	2745
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	3018
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	3334
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	3374
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	3674
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	3714
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	4049
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	4413
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	3374
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	4560
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	4729
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	4901
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	5076
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	5250
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	5424
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	5600
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	5756
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	6089
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	6437
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	3374
	.byte	8,3,35,152,1,14
	.byte	'LPCR',0
	.word	6797
	.byte	32,3,35,160,1,14
	.byte	'reserved_C0',0
	.word	6806
	.byte	56,3,35,192,1,14
	.byte	'ACCEN1',0
	.word	6862
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	7429
	.byte	4,3,35,252,1,0,8
	.word	7469
.L240:
	.byte	3
	.word	8039
	.byte	17,3,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,3,169,5,17,1,1,5
	.byte	'port',0,3,169,5,44
	.word	8044
	.byte	5
	.byte	'pinIndex',0,3,169,5,56
	.word	508
	.byte	5
	.byte	'action',0,3,169,5,80
	.word	8049
	.byte	6,0,19
	.word	501
	.byte	20
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	8230
	.byte	0,8
	.word	485
	.byte	3
	.word	485
	.byte	22
	.byte	'__cmpswapw',0
	.word	8272
	.byte	1,1,1,1,23
	.byte	'p',0
	.word	8277
	.byte	23
	.byte	'value',0
	.word	485
	.byte	23
	.byte	'compare',0
	.word	485
	.byte	0,24
	.word	164
	.byte	25
	.word	190
	.byte	6,0,24
	.word	241
	.byte	25
	.word	263
	.byte	25
	.word	277
	.byte	25
	.word	291
	.byte	6,0,24
	.word	328
	.byte	25
	.word	360
	.byte	6,0,24
	.word	404
	.byte	25
	.word	423
	.byte	6,0,24
	.word	439
	.byte	25
	.word	454
	.byte	25
	.word	468
	.byte	6,0,26
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,237,1,17,1,1,1,1,5
	.byte	'password',0,5,237,1,50
	.word	525
	.byte	0,26
	.byte	'IfxScuWdt_clearSafetyEndinit',0,5,147,2,17,1,1,1,1,5
	.byte	'password',0,5,147,2,53
	.word	525
	.byte	0,26
	.byte	'IfxScuWdt_setCpuEndinit',0,5,157,2,17,1,1,1,1,5
	.byte	'password',0,5,157,2,48
	.word	525
	.byte	0,26
	.byte	'IfxScuWdt_setSafetyEndinit',0,5,187,2,17,1,1,1,1,5
	.byte	'password',0,5,187,2,51
	.word	525
	.byte	0,27
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,215,3,19
	.word	525
	.byte	1,1,1,1,27
	.byte	'IfxScuWdt_getSafetyWatchdogPassword',0,5,249,3,19
	.word	525
	.byte	1,1,1,1,24
	.word	8152
	.byte	25
	.word	8180
	.byte	25
	.word	8194
	.byte	25
	.word	8212
	.byte	6,0
.L243:
	.byte	9
	.byte	'long int',0,4,5
.L254:
	.byte	17,3,101,9,1,18
	.byte	'IfxPort_Mode_inputNoPullDevice',0,0,18
	.byte	'IfxPort_Mode_inputPullDown',0,8,18
	.byte	'IfxPort_Mode_inputPullUp',0,16,18
	.byte	'IfxPort_Mode_outputPushPullGeneral',0,128,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt1',0,136,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt2',0,144,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt3',0,152,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt4',0,160,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt5',0,168,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt6',0,176,1,18
	.byte	'IfxPort_Mode_outputPushPullAlt7',0,184,1,18
	.byte	'IfxPort_Mode_outputOpenDrainGeneral',0,192,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt1',0,200,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt2',0,208,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt3',0,216,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt4',0,224,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt5',0,232,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt6',0,240,1,18
	.byte	'IfxPort_Mode_outputOpenDrainAlt7',0,248,1,0,8
	.word	1738
.L256:
	.byte	3
	.word	9425
	.byte	17,3,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,17,3,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,17,3,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,28,3,237,1,9,4,14
	.byte	'lvdsMode',0
	.word	9435
	.byte	1,2,35,0,14
	.byte	'enablePortControlled',0
	.word	9491
	.byte	1,2,35,1,14
	.byte	'padSupply',0
	.word	9553
	.byte	1,2,35,2,0
.L276:
	.byte	3
	.word	9606
	.byte	8
	.word	6757
.L280:
	.byte	3
	.word	9685
.L286:
	.byte	17,3,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0
.L304:
	.byte	17,6,76,9,1,18
	.byte	'IfxPort_Index_none',0,127,18
	.byte	'IfxPort_Index_00',0,0,18
	.byte	'IfxPort_Index_01',0,1,18
	.byte	'IfxPort_Index_02',0,2,18
	.byte	'IfxPort_Index_10',0,10,18
	.byte	'IfxPort_Index_11',0,11,18
	.byte	'IfxPort_Index_12',0,12,18
	.byte	'IfxPort_Index_13',0,13,18
	.byte	'IfxPort_Index_14',0,14,18
	.byte	'IfxPort_Index_15',0,15,18
	.byte	'IfxPort_Index_20',0,20,18
	.byte	'IfxPort_Index_21',0,21,18
	.byte	'IfxPort_Index_22',0,22,18
	.byte	'IfxPort_Index_23',0,23,18
	.byte	'IfxPort_Index_32',0,32,18
	.byte	'IfxPort_Index_33',0,33,18
	.byte	'IfxPort_Index_34',0,34,18
	.byte	'IfxPort_Index_40',0,40,0
.L333:
	.byte	17,3,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0
.L337:
	.byte	15,16
	.word	220
	.byte	16,3,0
.L354:
	.byte	17,3,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0
.L356:
	.byte	17,3,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0
.L379:
	.byte	15,8
	.word	220
	.byte	16,1,0,9
	.byte	'short int',0,2,5,29
	.byte	'__wchar_t',0,7,1,1
	.word	10924
	.byte	29
	.byte	'__size_t',0,7,1,1
	.word	485
	.byte	29
	.byte	'__ptrdiff_t',0,7,1,1
	.word	501
	.byte	30,1,3
	.word	10992
	.byte	29
	.byte	'__codeptr',0,7,1,1
	.word	10994
	.byte	29
	.byte	'boolean',0,8,104,29
	.word	508
	.byte	29
	.byte	'uint8',0,8,108,29
	.word	508
	.byte	29
	.byte	'uint16',0,8,112,29
	.word	525
	.byte	29
	.byte	'uint32',0,8,116,29
	.word	220
	.byte	29
	.byte	'uint64',0,8,121,29
	.word	373
	.byte	29
	.byte	'sint16',0,8,129,1,29
	.word	10924
	.byte	29
	.byte	'sint32',0,8,134,1,29
	.word	8744
	.byte	9
	.byte	'long long int',0,8,5,29
	.byte	'sint64',0,8,141,1,29
	.word	11124
	.byte	29
	.byte	'float32',0,8,170,1,29
	.word	319
	.byte	29
	.byte	'pvoid',0,9,54,28
	.word	399
	.byte	29
	.byte	'Ifx_TickTime',0,9,76,28
	.word	11124
	.byte	28,9,140,1,9,8,14
	.byte	'module',0
	.word	215
	.byte	4,2,35,0,14
	.byte	'index',0
	.word	8744
	.byte	4,2,35,4,0,29
	.byte	'IfxModule_IndexMap',0,9,144,1,3
	.word	11209
	.byte	29
	.byte	'Ifx_UReg_8Bit',0,10,96,24
	.word	508
	.byte	29
	.byte	'Ifx_UReg_32Bit',0,10,98,24
	.word	485
	.byte	29
	.byte	'Ifx_SReg_32Bit',0,10,101,24
	.word	501
	.byte	29
	.byte	'Ifx_P_ACCEN0_Bits',0,4,102,3
	.word	6902
	.byte	29
	.byte	'Ifx_P_ACCEN1_Bits',0,4,108,3
	.word	6815
	.byte	29
	.byte	'Ifx_P_ESR_Bits',0,4,130,1,3
	.word	3383
	.byte	29
	.byte	'Ifx_P_ID_Bits',0,4,138,1,3
	.word	1434
	.byte	29
	.byte	'Ifx_P_IN_Bits',0,4,160,1,3
	.word	2430
	.byte	29
	.byte	'Ifx_P_IOCR0_Bits',0,4,173,1,3
	.word	1563
	.byte	29
	.byte	'Ifx_P_IOCR12_Bits',0,4,186,1,3
	.word	2210
	.byte	29
	.byte	'Ifx_P_IOCR4_Bits',0,4,199,1,3
	.word	1778
	.byte	29
	.byte	'Ifx_P_IOCR8_Bits',0,4,212,1,3
	.word	1993
	.byte	29
	.byte	'Ifx_P_LPCR_Bits',0,4,231,1,3
	.word	6477
	.byte	29
	.byte	'Ifx_P_OMCR_Bits',0,4,253,1,3
	.word	6129
	.byte	29
	.byte	'Ifx_P_OMCR0_Bits',0,4,136,2,3
	.word	5116
	.byte	29
	.byte	'Ifx_P_OMCR12_Bits',0,4,146,2,3
	.word	5640
	.byte	29
	.byte	'Ifx_P_OMCR4_Bits',0,4,157,2,3
	.word	5290
	.byte	29
	.byte	'Ifx_P_OMCR8_Bits',0,4,168,2,3
	.word	5464
	.byte	29
	.byte	'Ifx_P_OMR_Bits',0,4,205,2,3
	.word	863
	.byte	29
	.byte	'Ifx_P_OMSR_Bits',0,4,227,2,3
	.word	5796
	.byte	29
	.byte	'Ifx_P_OMSR0_Bits',0,4,237,2,3
	.word	4453
	.byte	29
	.byte	'Ifx_P_OMSR12_Bits',0,4,248,2,3
	.word	4941
	.byte	29
	.byte	'Ifx_P_OMSR4_Bits',0,4,131,3,3
	.word	4600
	.byte	29
	.byte	'Ifx_P_OMSR8_Bits',0,4,142,3,3
	.word	4769
	.byte	29
	.byte	'Ifx_P_OUT_Bits',0,4,164,3,3
	.word	547
	.byte	29
	.byte	'Ifx_P_PCSR_Bits',0,4,187,3,3
	.word	4089
	.byte	29
	.byte	'Ifx_P_PDISC_Bits',0,4,209,3,3
	.word	3723
	.byte	29
	.byte	'Ifx_P_PDR0_Bits',0,4,230,3,3
	.word	2754
	.byte	29
	.byte	'Ifx_P_PDR1_Bits',0,4,251,3,3
	.word	3058
	.byte	29
	.byte	'Ifx_P_ACCEN0',0,4,136,4,3
	.word	7429
	.byte	29
	.byte	'Ifx_P_ACCEN1',0,4,144,4,3
	.word	6862
	.byte	29
	.byte	'Ifx_P_ESR',0,4,152,4,3
	.word	3674
	.byte	29
	.byte	'Ifx_P_ID',0,4,160,4,3
	.word	1514
	.byte	29
	.byte	'Ifx_P_IN',0,4,168,4,3
	.word	2705
	.byte	29
	.byte	'Ifx_P_IOCR0',0,4,176,4,3
	.word	1738
	.byte	29
	.byte	'Ifx_P_IOCR12',0,4,184,4,3
	.word	2390
	.byte	29
	.byte	'Ifx_P_IOCR4',0,4,192,4,3
	.word	1953
	.byte	29
	.byte	'Ifx_P_IOCR8',0,4,200,4,3
	.word	2170
	.byte	29
	.byte	'Ifx_P_LPCR',0,4,208,4,3
	.word	6757
	.byte	29
	.byte	'Ifx_P_OMCR',0,4,216,4,3
	.word	6437
	.byte	29
	.byte	'Ifx_P_OMCR0',0,4,224,4,3
	.word	5250
	.byte	29
	.byte	'Ifx_P_OMCR12',0,4,232,4,3
	.word	5756
	.byte	29
	.byte	'Ifx_P_OMCR4',0,4,240,4,3
	.word	5424
	.byte	29
	.byte	'Ifx_P_OMCR8',0,4,248,4,3
	.word	5600
	.byte	29
	.byte	'Ifx_P_OMR',0,4,128,5,3
	.word	1394
	.byte	29
	.byte	'Ifx_P_OMSR',0,4,136,5,3
	.word	6089
	.byte	29
	.byte	'Ifx_P_OMSR0',0,4,144,5,3
	.word	4560
	.byte	29
	.byte	'Ifx_P_OMSR12',0,4,152,5,3
	.word	5076
	.byte	29
	.byte	'Ifx_P_OMSR4',0,4,160,5,3
	.word	4729
	.byte	29
	.byte	'Ifx_P_OMSR8',0,4,168,5,3
	.word	4901
	.byte	29
	.byte	'Ifx_P_OUT',0,4,176,5,3
	.word	823
	.byte	29
	.byte	'Ifx_P_PCSR',0,4,184,5,3
	.word	4413
	.byte	29
	.byte	'Ifx_P_PDISC',0,4,192,5,3
	.word	4049
	.byte	29
	.byte	'Ifx_P_PDR0',0,4,200,5,3
	.word	3018
	.byte	29
	.byte	'Ifx_P_PDR1',0,4,208,5,3
	.word	3334
	.byte	8
	.word	7469
	.byte	29
	.byte	'Ifx_P',0,4,128,6,3
	.word	12537
	.byte	29
	.byte	'IfxPort_Index',0,6,96,3
	.word	10118
	.byte	28,6,104,9,8,14
	.byte	'port',0
	.word	8044
	.byte	4,2,35,0,14
	.byte	'masks',0
	.word	525
	.byte	2,2,35,4,0,29
	.byte	'IfxPort_Esr_Masks',0,6,108,3
	.word	12579
	.byte	15,136,1
	.word	12579
	.byte	16,16,0,19
	.word	12640
	.byte	31
	.byte	'IfxPort_cfg_esrMasks',0,6,114,41
	.word	12650
	.byte	1,1,15,136,1
	.word	11209
	.byte	16,16,0,19
	.word	12686
	.byte	31
	.byte	'IfxPort_cfg_indexMap',0,6,116,41
	.word	12696
	.byte	1,1,17,11,254,9,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,29
	.byte	'IfxScu_WDTCON1_IR',0,11,131,10,3
	.word	12732
	.byte	11
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,12,68,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN00_Bits',0,12,102,3
	.word	12854
	.byte	11
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,12,105,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN01_Bits',0,12,108,3
	.word	13413
	.byte	11
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,12,111,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN10_Bits',0,12,145,1,3
	.word	13492
	.byte	11
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,12,148,1,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN11_Bits',0,12,151,1,3
	.word	14052
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,12,154,1,16,4,12
	.byte	'STM0DIS',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	485
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,12,164,1,3
	.word	14133
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,12,167,1,16,4,12
	.byte	'STMDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	508
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	508
	.byte	4,4,2,35,2,12
	.byte	'BBBDIV',0,1
	.word	508
	.byte	4,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	508
	.byte	2,6,2,35,3,12
	.byte	'FSI2DIV',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,12,181,1,3
	.word	14359
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,12,184,1,16,4,12
	.byte	'MCANDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'CLKSELMCAN',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PLL1DIVDIS',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'I2CDIV',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'MSCDIV',0,1
	.word	508
	.byte	4,4,2,35,2,12
	.byte	'CLKSELMSC',0,1
	.word	508
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'QSPIDIV',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'CLKSELQSPI',0,1
	.word	508
	.byte	2,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,12,199,1,3
	.word	14632
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,12,202,1,16,4,12
	.byte	'ASCLINFDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'ASCLINSDIV',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'CLKSELASCLINS',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,4
	.word	485
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'ERAYPERON',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	508
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,12,214,1,3
	.word	14958
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,12,217,1,16,4,12
	.byte	'PLL0MONEN',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PLL1MONEN',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PLL2MONEN',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SPBMONEN',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'BACKMONEN',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	3,0,2,35,0,12
	.byte	'PLL0MONTST',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'PLL1MONTST',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'PLL2MONTST',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'SPBMONTST',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'BACKMONTST',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,4
	.word	485
	.byte	11,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	6,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,12,234,1,3
	.word	15236
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,12,237,1,16,4,12
	.byte	'LOTHR',0,2
	.word	525
	.byte	12,4,2,35,0,12
	.byte	'UPTHR',0,4
	.word	485
	.byte	12,8,2,35,0,12
	.byte	'MONEN',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'MONTST',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	4,2,2,35,3,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,12,246,1,3
	.word	15605
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,12,249,1,16,4,12
	.byte	'GETHDIV',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'MCANHDIV',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	485
	.byte	18,2,2,35,0,12
	.byte	'UP',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,12,129,2,3
	.word	15785
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,12,132,2,16,4,12
	.byte	'CPU0DIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	485
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,12,136,2,3
	.word	15957
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,12,139,2,16,4,12
	.byte	'CPU1DIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	485
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7_Bits',0,12,143,2,3
	.word	16057
	.byte	11
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,12,146,2,16,4,12
	.byte	'CPU2DIV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	485
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8_Bits',0,12,150,2,3
	.word	16157
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,12,153,2,16,4,12
	.byte	'CHREV',0,1
	.word	508
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'CHPK',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'CHID',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'EEA',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	508
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'VART',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'SEC',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,12,164,2,3
	.word	16257
	.byte	11
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,12,167,2,16,4,12
	.byte	'LOWER',0,2
	.word	525
	.byte	12,4,2,35,0,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'BGPOK',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'EN',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'LLU',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	525
	.byte	12,4,2,35,2,12
	.byte	'INTEN',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'INT',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,12,179,2,3
	.word	16460
	.byte	11
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,12,182,2,16,4,12
	.byte	'RESULT',0,2
	.word	525
	.byte	12,4,2,35,0,12
	.byte	'reserved_12',0,4
	.word	485
	.byte	20,0,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,12,186,2,3
	.word	16692
	.byte	9
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_SCU_EICON0_Bits',0,12,189,2,16,4,12
	.byte	'reserved_0',0,4
	.word	16794
	.byte	1,31,2,35,0,12
	.byte	'ENDINIT',0,4
	.word	16794
	.byte	1,30,2,35,0,12
	.byte	'EPW',0,4
	.word	16794
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	16794
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_EICON0_Bits',0,12,195,2,3
	.word	16810
	.byte	11
	.byte	'_Ifx_SCU_EICON1_Bits',0,12,198,2,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	485
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_EICON1_Bits',0,12,207,2,3
	.word	16938
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,12,210,2,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	508
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	508
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	485
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	508
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,12,229,2,3
	.word	17127
	.byte	11
	.byte	'_Ifx_SCU_EIFILT_Bits',0,12,232,2,16,4,12
	.byte	'FILRQ0A',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'FILRQ5A',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'FILRQ2A',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'FILRQ3A',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'FILRQ0C',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'FILRQ1C',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'FILRQ3C',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'FILRQ2C',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'FILRQ4A',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'FILRQ6A',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'FILRQ1A',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'FILRQ7A',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'FILRQ6D',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'FILRQ4D',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'FILRQ2B',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'FILRQ3B',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'FILRQ7C',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	7,0,2,35,2,12
	.byte	'FILTDIV',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'DEPTH',0,1
	.word	508
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EIFILT_Bits',0,12,254,2,3
	.word	17491
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,12,129,3,16,4,12
	.byte	'INTF0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	485
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,12,140,3,3
	.word	17930
	.byte	11
	.byte	'_Ifx_SCU_EISR_Bits',0,12,143,3,16,4,12
	.byte	'AE',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	10,0,2,35,0,12
	.byte	'TIM',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_EISR_Bits',0,12,153,3,3
	.word	18141
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,12,156,3,16,4,12
	.byte	'POL',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	525
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	525
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,12,166,3,3
	.word	18317
	.byte	11
	.byte	'_Ifx_SCU_EMSSW_Bits',0,12,169,3,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	24,8,2,35,0,12
	.byte	'EMSFM',0,1
	.word	508
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	508
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSSW_Bits',0,12,175,3,3
	.word	18511
	.byte	11
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,12,178,3,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	525
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	485
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,12,183,3,3
	.word	18646
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,12,186,3,16,4,12
	.byte	'ARI',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	485
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,12,191,3,3
	.word	18782
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,12,194,3,16,4,12
	.byte	'EN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	508
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	508
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	508
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,12,205,3,3
	.word	18893
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,12,208,3,16,4,12
	.byte	'STEP',0,2
	.word	525
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	525
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,12,216,3,3
	.word	19111
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,12,219,3,16,4,12
	.byte	'FS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,12,239,3,3
	.word	19274
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,12,242,3,16,4,12
	.byte	'MODREV',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,12,247,3,3
	.word	19610
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,12,250,3,16,4,12
	.byte	'IPEN00',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	508
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,12,146,4,3
	.word	19717
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,12,149,4,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	485
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,12,154,4,3
	.word	20169
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,12,157,4,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,12,164,4,3
	.word	20268
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,12,167,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'LBISTRES',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,4
	.word	485
	.byte	18,12,2,35,0,12
	.byte	'reserved_20',0,2
	.word	525
	.byte	8,4,2,35,2,12
	.byte	'LBISTDONE',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'LBISTERRINJ',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'LBISTREQRED',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,12,177,4,3
	.word	20418
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,12,180,4,16,4,12
	.byte	'SEED',0,4
	.word	485
	.byte	19,13,2,35,0,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	508
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,12,187,4,3
	.word	20656
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,12,190,4,16,4,12
	.byte	'LENGTH',0,2
	.word	525
	.byte	12,4,2,35,0,12
	.byte	'reserved_12',0,4
	.word	485
	.byte	20,0,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,12,194,4,3
	.word	20817
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,12,197,4,16,4,12
	.byte	'SIGNATURE',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,12,200,4,3
	.word	20923
	.byte	11
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,12,203,4,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,2
	.word	525
	.byte	14,1,2,35,0,12
	.byte	'reserved_15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'LS0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	525
	.byte	14,1,2,35,2,12
	.byte	'LSEN0',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON0_Bits',0,12,211,4,3
	.word	21009
	.byte	11
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,12,214,4,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,2
	.word	525
	.byte	14,1,2,35,0,12
	.byte	'reserved_15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'LS1',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	525
	.byte	14,1,2,35,2,12
	.byte	'LSEN1',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON1_Bits',0,12,222,4,3
	.word	21190
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,12,225,4,16,4,12
	.byte	'LCLT0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'LCLT2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	10,0,2,35,0,12
	.byte	'PLCLT0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PLCLT1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'PLCLT2',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	525
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,12,241,4,3
	.word	21371
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,12,244,4,16,4,12
	.byte	'DEPT',0,1
	.word	508
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	525
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,12,249,4,3
	.word	21715
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,12,252,4,16,4,12
	.byte	'PS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	525
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	525
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,12,132,5,3
	.word	21826
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,12,135,5,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	508
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	508
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'HYSEN',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'HYSCTL',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'AMPCTL',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	508
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,12,156,5,3
	.word	21984
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,12,159,5,16,4,12
	.byte	'P0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	485
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,12,164,5,3
	.word	22395
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,12,167,5,16,4,12
	.byte	'CSEL0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	10,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,12,183,5,3
	.word	22496
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,12,186,5,16,4,12
	.byte	'OVEN0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	485
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,12,195,5,3
	.word	22829
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,12,198,5,16,4,12
	.byte	'PDIS0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	485
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,12,203,5,3
	.word	23031
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,12,206,5,16,4,12
	.byte	'PD0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'PL0',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'PD1',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'PL1',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	485
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,12,213,5,3
	.word	23142
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,12,216,5,16,4,12
	.byte	'PDR0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	485
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,12,227,5,3
	.word	23275
	.byte	11
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,12,230,5,16,4,12
	.byte	'DIVBY',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,2
	.word	525
	.byte	8,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	508
	.byte	5,0,2,35,3,0,29
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,12,241,5,3
	.word	23478
	.byte	11
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,12,244,5,16,4,12
	.byte	'K2DIV',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	5,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,12,250,5,3
	.word	23718
	.byte	11
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,12,253,5,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'LOCK',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'K3RDY',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,4
	.word	485
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,12,135,6,3
	.word	23862
	.byte	11
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,12,138,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR0_Bits',0,12,144,6,3
	.word	24084
	.byte	11
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,12,147,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR1_Bits',0,12,153,6,3
	.word	24220
	.byte	11
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,12,156,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR2_Bits',0,12,162,6,3
	.word	24356
	.byte	11
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,12,165,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR3_Bits',0,12,171,6,3
	.word	24492
	.byte	11
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,12,174,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR4_Bits',0,12,180,6,3
	.word	24628
	.byte	11
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,12,183,6,16,4,12
	.byte	'REQSLP',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'PMST',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	485
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR5_Bits',0,12,189,6,3
	.word	24764
	.byte	11
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,12,192,6,16,4,12
	.byte	'CPU0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'CPU1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'CPU2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'CPU3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'CPU4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'CPU5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	10,0,2,35,0,12
	.byte	'CPU0LS',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'CPU1LS',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'CPU2LS',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'CPU3LS',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	525
	.byte	12,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,12,206,6,3
	.word	24900
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,12,209,6,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	508
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,4
	.word	485
	.byte	11,8,2,35,0,12
	.byte	'CPUSEL',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	508
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,12,220,6,3
	.word	25172
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,12,223,6,16,4,12
	.byte	'LJTEN',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'LJTOVEN',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'LJTOVIEN',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'LJTSTRT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'LJTSTP',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'LJTCLR',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	6,4,2,35,0,12
	.byte	'SDSTEP',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'VDTEN',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'VDTOVEN',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'VDTOVIEN',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'VDTSTRT',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'VDTSTP',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'VDTCLR',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	525
	.byte	7,3,2,35,2,12
	.byte	'LPSLPEN',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	508
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,12,242,6,3
	.word	25417
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,12,245,6,16,4,12
	.byte	'LJTCV',0,2
	.word	525
	.byte	16,0,2,35,0,12
	.byte	'VDTCV',0,2
	.word	525
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,12,250,6,3
	.word	25805
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,12,253,6,16,4,12
	.byte	'LDJMPREQ',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'LJTRUN',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'LJTOV',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	508
	.byte	3,4,2,35,1,12
	.byte	'LJTOVCLR',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	508
	.byte	3,0,2,35,1,12
	.byte	'LJTCNT',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,12,136,7,3
	.word	25923
	.byte	11
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,12,139,7,16,4,12
	.byte	'VDROOPREQ',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'VDTRUN',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'VDTOV',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	508
	.byte	3,4,2,35,1,12
	.byte	'VDTOVCLR',0,1
	.word	508
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	508
	.byte	3,0,2,35,1,12
	.byte	'VDTCNT',0,2
	.word	525
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	508
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,12,151,7,3
	.word	26166
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,12,154,7,16,4,12
	.byte	'ESR0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	508
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	508
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	508
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	508
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	508
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	508
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	508
	.byte	2,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	508
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	525
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,12,168,7,3
	.word	26433
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,12,171,7,16,4,12
	.byte	'FRTO',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'CSSX',0,2
	.word	525
	.byte	6,3,2,35,0,12
	.byte	'reserved_13',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,12,185,7,3
	.word	26713
	.byte	11
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,12,188,7,16,4,12
	.byte	'reserved_0',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON3_Bits',0,12,191,7,3
	.word	27018
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,12,194,7,16,4,12
	.byte	'ESR0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	508
	.byte	5,0,2,35,1,12
	.byte	'PORST',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'EVRC',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	508
	.byte	1,6,2,35,3,12
	.byte	'HSMS',0,1
	.word	508
	.byte	1,5,2,35,3,12
	.byte	'HSMA',0,1
	.word	508
	.byte	1,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	508
	.byte	1,3,2,35,3,12
	.byte	'LBPORST',0,1
	.word	508
	.byte	1,2,2,35,3,12
	.byte	'LBTERM',0,1
	.word	508
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	508
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,12,224,7,3
	.word	27099
	.byte	11
	.byte	'_Ifx_SCU_SEICON0_Bits',0,12,227,7,16,4,12
	.byte	'reserved_0',0,4
	.word	16794
	.byte	1,31,2,35,0,12
	.byte	'ENDINIT',0,4
	.word	16794
	.byte	1,30,2,35,0,12
	.byte	'EPW',0,4
	.word	16794
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	16794
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON0_Bits',0,12,233,7,3
	.word	27667
	.byte	11
	.byte	'_Ifx_SCU_SEICON1_Bits',0,12,236,7,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	485
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON1_Bits',0,12,245,7,3
	.word	27797
	.byte	11
	.byte	'_Ifx_SCU_SEISR_Bits',0,12,248,7,16,4,12
	.byte	'AE',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	525
	.byte	10,0,2,35,0,12
	.byte	'TIM',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SEISR_Bits',0,12,130,8,3
	.word	27988
	.byte	11
	.byte	'_Ifx_SCU_STCON_Bits',0,12,133,8,16,4,12
	.byte	'reserved_0',0,2
	.word	525
	.byte	13,3,2,35,0,12
	.byte	'SFCBAE',0,1
	.word	508
	.byte	1,2,2,35,1,12
	.byte	'CFCBAE',0,1
	.word	508
	.byte	1,1,2,35,1,12
	.byte	'STP',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_STCON_Bits',0,12,140,8,3
	.word	28166
	.byte	11
	.byte	'_Ifx_SCU_STMEM1_Bits',0,12,143,8,16,4,12
	.byte	'MEM',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM1_Bits',0,12,146,8,3
	.word	28317
	.byte	11
	.byte	'_Ifx_SCU_STMEM2_Bits',0,12,149,8,16,4,12
	.byte	'MEM',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM2_Bits',0,12,152,8,3
	.word	28389
	.byte	11
	.byte	'_Ifx_SCU_STMEM3_Bits',0,12,155,8,16,4,12
	.byte	'MEM',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM3_Bits',0,12,158,8,3
	.word	28461
	.byte	11
	.byte	'_Ifx_SCU_STMEM4_Bits',0,12,161,8,16,4,12
	.byte	'MEM',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM4_Bits',0,12,164,8,3
	.word	28533
	.byte	11
	.byte	'_Ifx_SCU_STMEM5_Bits',0,12,167,8,16,4,12
	.byte	'MEM',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM5_Bits',0,12,170,8,3
	.word	28605
	.byte	11
	.byte	'_Ifx_SCU_STMEM6_Bits',0,12,173,8,16,4,12
	.byte	'MEM',0,4
	.word	485
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM6_Bits',0,12,176,8,3
	.word	28677
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,12,179,8,16,4,12
	.byte	'HWCFG',0,1
	.word	508
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	508
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	508
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	508
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	508
	.byte	1,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	508
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	508
	.byte	1,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	508
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	508
	.byte	3,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,12,195,8,3
	.word	28749
	.byte	11
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,12,198,8,16,4,12
	.byte	'ADDRCFG',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'SPARE',0,2
	.word	525
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,12,203,8,3
	.word	29078
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,12,206,8,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	508
	.byte	6,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,12,213,8,3
	.word	29198
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,12,216,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	508
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'DDC',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,12,228,8,3
	.word	29368
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,12,231,8,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	2,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	525
	.byte	6,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	508
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	508
	.byte	3,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	508
	.byte	3,2,2,35,3,12
	.byte	'INSEL',0,1
	.word	508
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,12,244,8,3
	.word	29631
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,12,247,8,16,4,12
	.byte	'K2DIV',0,1
	.word	508
	.byte	3,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	485
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,12,251,8,3
	.word	29910
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,12,254,8,16,4,12
	.byte	'MODCFG',0,2
	.word	525
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,12,130,9,3
	.word	30014
	.byte	11
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,12,133,9,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'LOCK',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	508
	.byte	2,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	485
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,12,143,9,3
	.word	30120
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,12,146,9,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'TRAP2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	485
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,12,153,9,3
	.word	30343
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,12,156,9,16,4,12
	.byte	'CPU0ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'CPU0ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'CPU0TRAP2T',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'CPU0SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'CPU1ESR0T',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'CPU1ESR1T',0,1
	.word	508
	.byte	1,6,2,35,1,12
	.byte	'CPU1TRAP2T',0,1
	.word	508
	.byte	1,5,2,35,1,12
	.byte	'CPU1SMUT',0,1
	.word	508
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'CPU2ESR0T',0,1
	.word	508
	.byte	1,7,2,35,2,12
	.byte	'CPU2ESR1T',0,1
	.word	508
	.byte	1,6,2,35,2,12
	.byte	'CPU2TRAP2T',0,1
	.word	508
	.byte	1,5,2,35,2,12
	.byte	'CPU2SMUT',0,1
	.word	508
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,1
	.word	508
	.byte	4,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	508
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	508
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,12,175,9,3
	.word	30491
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,12,178,9,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	508
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	508
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,12,185,9,3
	.word	30918
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,12,188,9,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'TRAP2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	485
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,12,195,9,3
	.word	31091
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,12,198,9,16,4,12
	.byte	'ESR0T',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'TRAP2',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	485
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,12,205,9,3
	.word	31239
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,12,208,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	16794
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	16794
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	16794
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	16794
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,12,214,9,3
	.word	31389
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,12,217,9,16,4,12
	.byte	'reserved_0',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,12,230,9,3
	.word	31519
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,12,233,9,16,4,12
	.byte	'AE',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,12,246,9,3
	.word	31779
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,12,249,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	16794
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	16794
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	16794
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	16794
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,12,255,9,3
	.word	32002
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,12,130,10,16,4,12
	.byte	'CLRIRF',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,12,143,10,3
	.word	32128
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,12,146,10,16,4,12
	.byte	'AE',0,1
	.word	508
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	508
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	508
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	508
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	508
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	508
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	508
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	508
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	508
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	508
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	525
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,12,159,10,3
	.word	32380
	.byte	13,12,167,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12854
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN00',0,12,172,10,3
	.word	32599
	.byte	13,12,175,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13413
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN01',0,12,180,10,3
	.word	32664
	.byte	13,12,183,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13492
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN10',0,12,188,10,3
	.word	32729
	.byte	13,12,191,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14052
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN11',0,12,196,10,3
	.word	32794
	.byte	13,12,199,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14133
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,12,204,10,3
	.word	32859
	.byte	13,12,207,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14359
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,12,212,10,3
	.word	32924
	.byte	13,12,215,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14632
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,12,220,10,3
	.word	32989
	.byte	13,12,223,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14958
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,12,228,10,3
	.word	33054
	.byte	13,12,231,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15236
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,12,236,10,3
	.word	33119
	.byte	13,12,239,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15605
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,12,244,10,3
	.word	33184
	.byte	13,12,247,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15785
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,12,252,10,3
	.word	33249
	.byte	13,12,255,10,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15957
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,12,132,11,3
	.word	33314
	.byte	13,12,135,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16057
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7',0,12,140,11,3
	.word	33379
	.byte	13,12,143,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16157
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8',0,12,148,11,3
	.word	33444
	.byte	13,12,151,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16257
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,12,156,11,3
	.word	33509
	.byte	13,12,159,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16460
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCLIM',0,12,164,11,3
	.word	33573
	.byte	13,12,167,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16692
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCSTAT',0,12,172,11,3
	.word	33638
	.byte	13,12,175,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16810
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICON0',0,12,180,11,3
	.word	33704
	.byte	13,12,183,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	16938
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICON1',0,12,188,11,3
	.word	33768
	.byte	13,12,191,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17127
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,12,196,11,3
	.word	33832
	.byte	13,12,199,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17491
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFILT',0,12,204,11,3
	.word	33894
	.byte	13,12,207,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	17930
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,12,212,11,3
	.word	33958
	.byte	13,12,215,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18141
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EISR',0,12,220,11,3
	.word	34020
	.byte	13,12,223,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18317
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,12,228,11,3
	.word	34082
	.byte	13,12,231,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18511
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSSW',0,12,236,11,3
	.word	34144
	.byte	13,12,239,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18646
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,12,244,11,3
	.word	34207
	.byte	13,12,247,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18782
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,12,252,11,3
	.word	34280
	.byte	13,12,255,11,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	18893
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,12,132,12,3
	.word	34345
	.byte	13,12,135,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19111
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,12,140,12,3
	.word	34409
	.byte	13,12,143,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19274
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,12,148,12,3
	.word	34470
	.byte	13,12,151,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19610
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,12,156,12,3
	.word	34531
	.byte	13,12,159,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	19717
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,12,164,12,3
	.word	34591
	.byte	13,12,167,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20169
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,12,172,12,3
	.word	34653
	.byte	13,12,175,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20268
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,12,180,12,3
	.word	34713
	.byte	13,12,183,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20418
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,12,188,12,3
	.word	34775
	.byte	13,12,191,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20656
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,12,196,12,3
	.word	34843
	.byte	13,12,199,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20817
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,12,204,12,3
	.word	34911
	.byte	13,12,207,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20923
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL3',0,12,212,12,3
	.word	34979
	.byte	13,12,215,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21009
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON0',0,12,220,12,3
	.word	35047
	.byte	13,12,223,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21190
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON1',0,12,228,12,3
	.word	35112
	.byte	13,12,231,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21371
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,12,236,12,3
	.word	35177
	.byte	13,12,239,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21715
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,12,244,12,3
	.word	35242
	.byte	13,12,247,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21826
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,12,252,12,3
	.word	35305
	.byte	13,12,255,12,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21984
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,12,132,13,3
	.word	35366
	.byte	13,12,135,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22395
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,12,140,13,3
	.word	35430
	.byte	13,12,143,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22496
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,12,148,13,3
	.word	35491
	.byte	13,12,151,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22829
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,12,156,13,3
	.word	35555
	.byte	13,12,159,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23031
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,12,164,13,3
	.word	35622
	.byte	13,12,167,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23142
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,12,172,13,3
	.word	35685
	.byte	13,12,175,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23275
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,12,180,13,3
	.word	35746
	.byte	13,12,183,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23478
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON0',0,12,188,13,3
	.word	35808
	.byte	13,12,191,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23718
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON1',0,12,196,13,3
	.word	35876
	.byte	13,12,199,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23862
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLSTAT',0,12,204,13,3
	.word	35944
	.byte	13,12,207,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24084
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR0',0,12,212,13,3
	.word	36012
	.byte	13,12,215,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24220
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR1',0,12,220,13,3
	.word	36076
	.byte	13,12,223,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24356
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR2',0,12,228,13,3
	.word	36140
	.byte	13,12,231,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24492
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR3',0,12,236,13,3
	.word	36204
	.byte	13,12,239,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24628
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR4',0,12,244,13,3
	.word	36268
	.byte	13,12,247,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24764
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR5',0,12,252,13,3
	.word	36332
	.byte	13,12,255,13,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24900
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSTAT0',0,12,132,14,3
	.word	36396
	.byte	13,12,135,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	25172
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,12,140,14,3
	.word	36461
	.byte	13,12,143,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	25417
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR0',0,12,148,14,3
	.word	36526
	.byte	13,12,151,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	25805
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR1',0,12,156,14,3
	.word	36592
	.byte	13,12,159,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	25923
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR2',0,12,164,14,3
	.word	36658
	.byte	13,12,167,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26166
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR3',0,12,172,14,3
	.word	36724
	.byte	13,12,175,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26433
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,12,180,14,3
	.word	36790
	.byte	13,12,183,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26713
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,12,188,14,3
	.word	36854
	.byte	13,12,191,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27018
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON3',0,12,196,14,3
	.word	36919
	.byte	13,12,199,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27099
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,12,204,14,3
	.word	36984
	.byte	13,12,207,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27667
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON0',0,12,212,14,3
	.word	37049
	.byte	13,12,215,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27797
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON1',0,12,220,14,3
	.word	37114
	.byte	13,12,223,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27988
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEISR',0,12,228,14,3
	.word	37179
	.byte	13,12,231,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28166
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STCON',0,12,236,14,3
	.word	37242
	.byte	13,12,239,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28317
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM1',0,12,244,14,3
	.word	37305
	.byte	13,12,247,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28389
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM2',0,12,252,14,3
	.word	37369
	.byte	13,12,255,14,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28461
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM3',0,12,132,15,3
	.word	37433
	.byte	13,12,135,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28533
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM4',0,12,140,15,3
	.word	37497
	.byte	13,12,143,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28605
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM5',0,12,148,15,3
	.word	37561
	.byte	13,12,151,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28677
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM6',0,12,156,15,3
	.word	37625
	.byte	13,12,159,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28749
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,12,164,15,3
	.word	37689
	.byte	13,12,167,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29078
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWAPCTRL',0,12,172,15,3
	.word	37753
	.byte	13,12,175,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29198
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,12,180,15,3
	.word	37819
	.byte	13,12,183,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29368
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,12,188,15,3
	.word	37885
	.byte	13,12,191,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29631
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON0',0,12,196,15,3
	.word	37949
	.byte	13,12,199,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29910
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON1',0,12,204,15,3
	.word	38017
	.byte	13,12,207,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30014
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON2',0,12,212,15,3
	.word	38085
	.byte	13,12,215,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30120
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLSTAT',0,12,220,15,3
	.word	38153
	.byte	13,12,223,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30343
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,12,228,15,3
	.word	38221
	.byte	13,12,231,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30491
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS0',0,12,236,15,3
	.word	38286
	.byte	13,12,239,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30918
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS1',0,12,244,15,3
	.word	38352
	.byte	13,12,247,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31091
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,12,252,15,3
	.word	38418
	.byte	13,12,255,15,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31239
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,12,132,16,3
	.word	38483
	.byte	13,12,135,16,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31389
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,12,140,16,3
	.word	38549
	.byte	13,12,143,16,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31519
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,12,148,16,3
	.word	38618
	.byte	13,12,151,16,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31779
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_SR',0,12,156,16,3
	.word	38687
	.byte	13,12,159,16,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32002
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0',0,12,164,16,3
	.word	38754
	.byte	13,12,167,16,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32128
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON1',0,12,172,16,3
	.word	38821
	.byte	13,12,175,16,9,4,14
	.byte	'U',0
	.word	485
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	501
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32380
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_SR',0,12,180,16,3
	.word	38888
	.byte	11
	.byte	'_Ifx_SCU_ESRCFGX',0,12,192,16,25,4,14
	.byte	'ESRCFGX',0
	.word	34207
	.byte	4,2,35,0,0,8
	.word	38953
	.byte	29
	.byte	'Ifx_SCU_ESRCFGX',0,12,195,16,3
	.word	38994
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU',0,12,210,16,25,12,14
	.byte	'CON0',0
	.word	38549
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	38618
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	38687
	.byte	4,2,35,8,0,8
	.word	39024
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,12,215,16,3
	.word	39087
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,12,230,16,25,12,14
	.byte	'CON0',0
	.word	38754
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	38821
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	38888
	.byte	4,2,35,8,0,8
	.word	39116
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,12,235,16,3
	.word	39177
	.byte	29
	.byte	'IfxPort_ControlledBy',0,3,77,3
	.word	9491
	.byte	29
	.byte	'IfxPort_InputMode',0,3,87,3
	.word	10468
	.byte	29
	.byte	'IfxPort_LvdsMode',0,3,95,3
	.word	9435
	.byte	29
	.byte	'IfxPort_Mode',0,3,122,3
	.word	8756
	.byte	29
	.byte	'IfxPort_OutputIdx',0,3,136,1,3
	.word	10698
	.byte	29
	.byte	'IfxPort_OutputMode',0,3,145,1,3
	.word	10602
	.byte	29
	.byte	'IfxPort_PadDriver',0,3,165,1,3
	.word	9695
	.byte	29
	.byte	'IfxPort_PadSupply',0,3,173,1,3
	.word	9553
	.byte	17,3,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,29
	.byte	'IfxPort_PinFunctionMode',0,3,181,1,3
	.word	39414
	.byte	29
	.byte	'IfxPort_State',0,3,193,1,3
	.word	8049
	.byte	29
	.byte	'IfxPort_LvdsConfig',0,3,242,1,3
	.word	9606
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,59,0,3,8,0,0,8,53
	.byte	0,73,19,0,0,9,36,0,3,8,11,15,62,15,0,0,10,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,38,0,73,19,0,0,20,46,1,3,8,54,15,39,12,63,12,60,12,0,0,21
	.byte	5,0,73,19,0,0,22,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,23,5,0,3,8,73,19,0,0,24,46,1,49,19,0,0,25
	.byte	5,0,49,19,0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,27,46,0,3,8,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,28,19,1,58,15,59,15,57,15,11,15,0,0,29,22,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,30,21,0,54,15,0,0,31,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L152:
	.word	.L540-.L539
.L539:
	.half	3
	.word	.L542-.L541
.L541:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\_Impl',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.h',0,0,0,0
	.byte	'IfxPort_regdef.h',0,2,0,0
	.byte	'IfxScuWdt.h',0,3,0,0
	.byte	'IfxPort_cfg.h',0,4,0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,2,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,2,0,0,0
.L542:
.L540:
	.sdecl	'.debug_info',debug,cluster('IfxPort_disableEmergencyStop')
	.sect	'.debug_info'
.L153:
	.word	304
	.half	3
	.word	.L154
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L156,.L155
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_disableEmergencyStop',0,1,52,9
	.word	.L238
	.byte	1,1,1
	.word	.L116,.L239,.L115
	.byte	4
	.byte	'port',0,1,52,45
	.word	.L240,.L241
	.byte	4
	.byte	'pinIndex',0,1,52,57
	.word	.L238,.L242
	.byte	5
	.word	.L116,.L239
	.byte	6
	.byte	'portIndex',0,1,54,13
	.word	.L243,.L244
	.byte	6
	.byte	'result',0,1,55,13
	.word	.L238,.L245
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_disableEmergencyStop')
	.sect	'.debug_abbrev'
.L154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_disableEmergencyStop')
	.sect	'.debug_line'
.L155:
	.word	.L544-.L543
.L543:
	.half	3
	.word	.L546-.L545
.L545:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L546:
	.byte	5,20,7,0,5,2
	.word	.L116
	.byte	3,54,1,5,21,3,4,1,5,56,9
	.half	.L547-.L116
	.byte	3,126,1,5,52,9
	.half	.L2-.L547
	.byte	3,2,1,5,9,9
	.half	.L548-.L2
	.byte	1,5,18,7,9
	.half	.L549-.L548
	.byte	3,2,1,5,67,1,5,21,9
	.half	.L550-.L549
	.byte	1,5,34,9
	.half	.L551-.L550
	.byte	1,5,13,9
	.half	.L552-.L551
	.byte	1,5,40,7,9
	.half	.L553-.L552
	.byte	3,2,1,5,24,9
	.half	.L422-.L553
	.byte	3,1,1,5,1,9
	.half	.L4-.L422
	.byte	3,8,1,5,67,7,9
	.half	.L3-.L4
	.byte	3,113,1,5,56,1,5,1,7,9
	.half	.L554-.L3
	.byte	3,15,1,7,9
	.half	.L157-.L554
	.byte	0,1,1
.L544:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_disableEmergencyStop')
	.sect	'.debug_ranges'
.L156:
	.word	-1,.L116,0,.L157-.L116,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_enableEmergencyStop')
	.sect	'.debug_info'
.L158:
	.word	303
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L161,.L160
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_enableEmergencyStop',0,1,75,9
	.word	.L238
	.byte	1,1,1
	.word	.L118,.L246,.L117
	.byte	4
	.byte	'port',0,1,75,44
	.word	.L240,.L247
	.byte	4
	.byte	'pinIndex',0,1,75,56
	.word	.L238,.L248
	.byte	5
	.word	.L118,.L246
	.byte	6
	.byte	'portIndex',0,1,77,13
	.word	.L243,.L249
	.byte	6
	.byte	'result',0,1,78,13
	.word	.L238,.L250
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_enableEmergencyStop')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_enableEmergencyStop')
	.sect	'.debug_line'
.L160:
	.word	.L556-.L555
.L555:
	.half	3
	.word	.L558-.L557
.L557:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L558:
	.byte	5,9,7,0,5,2
	.word	.L118
	.byte	3,202,0,1,5,21,3,7,1,5,20,9
	.half	.L424-.L118
	.byte	3,124,1,5,9,3,125,1,5,21,9
	.half	.L425-.L424
	.byte	3,7,1,5,56,9
	.half	.L559-.L425
	.byte	3,126,1,5,52,9
	.half	.L7-.L559
	.byte	3,2,1,5,9,9
	.half	.L560-.L7
	.byte	1,5,18,7,9
	.half	.L561-.L560
	.byte	3,2,1,5,67,1,5,21,9
	.half	.L562-.L561
	.byte	1,5,34,9
	.half	.L563-.L562
	.byte	1,5,13,9
	.half	.L564-.L563
	.byte	1,5,38,7,9
	.half	.L565-.L564
	.byte	3,2,1,5,24,9
	.half	.L426-.L565
	.byte	3,1,1,5,67,9
	.half	.L8-.L426
	.byte	3,121,1,5,56,1,5,1,7,9
	.half	.L566-.L8
	.byte	3,13,1,7,9
	.half	.L162-.L566
	.byte	0,1,1
.L556:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_enableEmergencyStop')
	.sect	'.debug_ranges'
.L161:
	.word	-1,.L118,0,.L162-.L118,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setPinMode')
	.sect	'.debug_info'
.L163:
	.word	414
	.half	3
	.word	.L164
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L166,.L165
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setPinMode',0,1,149,2,6,1,1,1
	.word	.L138,.L251,.L137
	.byte	4
	.byte	'port',0,1,149,2,32
	.word	.L240,.L252
	.byte	4
	.byte	'pinIndex',0,1,149,2,44
	.word	.L238,.L253
	.byte	4
	.byte	'mode',0,1,149,2,67
	.word	.L254,.L255
	.byte	5
	.word	.L138,.L251
	.byte	6
	.byte	'iocr',0,1,151,2,27
	.word	.L256,.L257
	.byte	6
	.byte	'iocrIndex',0,1,152,2,27
	.word	.L238,.L258
	.byte	6
	.byte	'shift',0,1,153,2,27
	.word	.L238,.L259
	.byte	5
	.word	.L260,.L38
	.byte	6
	.byte	'passwd',0,1,157,2,16
	.word	.L261,.L262
	.byte	0,7
	.word	.L263,.L38,.L264
	.byte	8
	.word	.L265,.L266
	.byte	8
	.word	.L267,.L268
	.byte	8
	.word	.L269,.L270
	.byte	9
	.word	.L271,.L38,.L264
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setPinMode')
	.sect	'.debug_abbrev'
.L164:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setPinMode')
	.sect	'.debug_line'
.L165:
	.word	.L568-.L567
.L567:
	.half	3
	.word	.L570-.L569
.L569:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L570:
	.byte	5,6,7,0,5,2
	.word	.L138
	.byte	3,148,2,1,5,18,3,6,1,5,45,9
	.half	.L571-.L138
	.byte	3,124,1,5,18,9
	.half	.L472-.L571
	.byte	3,4,1,5,49,9
	.half	.L474-.L472
	.byte	3,126,1,5,40,9
	.half	.L572-.L474
	.byte	3,127,1,5,49,9
	.half	.L475-.L572
	.byte	3,1,1,5,5,3,2,1,5,57,7,9
	.half	.L260-.L475
	.byte	3,2,1,5,23,9
	.half	.L471-.L260
	.byte	1,5,35,9
	.half	.L477-.L471
	.byte	3,1,1,5,20,9
	.half	.L476-.L477
	.byte	3,1,1,5,28,9
	.half	.L573-.L476
	.byte	1,5,20,9
	.half	.L574-.L573
	.byte	1,5,30,9
	.half	.L478-.L574
	.byte	1,5,20,9
	.half	.L479-.L478
	.byte	1,5,26,9
	.half	.L575-.L479
	.byte	1,5,23,9
	.half	.L576-.L575
	.byte	1,5,33,9
	.half	.L577-.L576
	.byte	3,1,1,5,5,9
	.half	.L38-.L577
	.byte	3,3,1,4,2,9
	.half	.L481-.L38
	.byte	3,105,1,4,1,5,1,9
	.half	.L264-.L481
	.byte	3,24,1,7,9
	.half	.L167-.L264
	.byte	0,1,1
.L568:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setPinMode')
	.sect	'.debug_ranges'
.L166:
	.word	-1,.L138,0,.L167-.L138,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setPinModeLVDS')
	.sect	'.debug_info'
.L168:
	.word	357
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L171,.L170
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setPinModeLVDS',0,1,167,2,6,1,1,1
	.word	.L140,.L272,.L139
	.byte	4
	.byte	'port',0,1,167,2,36
	.word	.L240,.L273
	.byte	4
	.byte	'pinIndex',0,1,167,2,48
	.word	.L238,.L274
	.byte	4
	.byte	'pinMode',0,1,167,2,71
	.word	.L254,.L275
	.byte	4
	.byte	'lvds',0,1,167,2,100
	.word	.L276,.L277
	.byte	5
	.word	.L140,.L272
	.byte	6
	.byte	'lpcrOffset',0,1,169,2,26
	.word	.L278,.L279
	.byte	6
	.byte	'lpcr',0,1,171,2,26
	.word	.L280,.L281
	.byte	6
	.byte	'passwd',0,1,172,2,26
	.word	.L261,.L282
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setPinModeLVDS')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setPinModeLVDS')
	.sect	'.debug_line'
.L170:
	.word	.L579-.L578
.L578:
	.half	3
	.word	.L581-.L580
.L580:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L581:
	.byte	5,6,7,0,5,2
	.word	.L140
	.byte	3,166,2,1,5,40,9
	.half	.L483-.L140
	.byte	3,2,1,5,45,3,2,1,5,71,9
	.half	.L484-.L483
	.byte	3,1,1,5,37,9
	.half	.L482-.L484
	.byte	1,5,31,9
	.half	.L487-.L482
	.byte	3,2,1,5,9,9
	.half	.L486-.L487
	.byte	3,1,1,5,36,9
	.half	.L582-.L486
	.byte	1,5,23,9
	.half	.L583-.L582
	.byte	1,5,30,9
	.half	.L485-.L583
	.byte	1,5,23,9
	.half	.L584-.L485
	.byte	3,1,1,5,36,9
	.half	.L585-.L584
	.byte	1,5,30,9
	.half	.L586-.L585
	.byte	1,5,19,9
	.half	.L587-.L586
	.byte	3,2,1,5,43,9
	.half	.L588-.L587
	.byte	3,2,1,5,5,9
	.half	.L589-.L588
	.byte	3,126,1,5,27,7,9
	.half	.L590-.L589
	.byte	3,2,1,5,37,9
	.half	.L591-.L590
	.byte	1,5,27,9
	.half	.L592-.L591
	.byte	3,1,1,5,37,9
	.half	.L593-.L592
	.byte	1,5,65,3,127,1,5,27,9
	.half	.L39-.L593
	.byte	3,5,1,5,37,9
	.half	.L594-.L39
	.byte	1,5,27,9
	.half	.L595-.L594
	.byte	3,1,1,5,37,9
	.half	.L596-.L595
	.byte	1,5,27,9
	.half	.L597-.L596
	.byte	3,1,1,5,37,9
	.half	.L598-.L597
	.byte	1,5,29,9
	.half	.L40-.L598
	.byte	3,3,1,5,37,3,125,1,5,29,9
	.half	.L488-.L40
	.byte	3,3,1,5,1,7,9
	.half	.L172-.L488
	.byte	3,1,0,1,1
.L579:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setPinModeLVDS')
	.sect	'.debug_ranges'
.L171:
	.word	-1,.L140,0,.L172-.L140,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setPinPadDriver')
	.sect	'.debug_info'
.L173:
	.word	420
	.half	3
	.word	.L174
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L176,.L175
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setPinPadDriver',0,1,194,2,6,1,1,1
	.word	.L142,.L283,.L141
	.byte	4
	.byte	'port',0,1,194,2,37
	.word	.L240,.L284
	.byte	4
	.byte	'pinIndex',0,1,194,2,49
	.word	.L238,.L285
	.byte	4
	.byte	'padDriver',0,1,194,2,77
	.word	.L286,.L287
	.byte	5
	.word	.L142,.L283
	.byte	6
	.byte	'passwd',0,1,196,2,12
	.word	.L261,.L288
	.byte	5
	.word	.L289,.L290
	.byte	6
	.byte	'shift',0,1,202,2,26
	.word	.L238,.L291
	.byte	7
	.word	.L263,.L292,.L293
	.byte	8
	.word	.L265,.L294
	.byte	8
	.word	.L267,.L295
	.byte	8
	.word	.L269,.L296
	.byte	9
	.word	.L271,.L297
	.byte	0,7
	.word	.L263,.L298,.L290
	.byte	8
	.word	.L265,.L294
	.byte	8
	.word	.L267,.L295
	.byte	8
	.word	.L269,.L296
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setPinPadDriver')
	.sect	'.debug_abbrev'
.L174:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85,6,0,0
	.byte	0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setPinPadDriver')
	.sect	'.debug_line'
.L175:
	.word	.L600-.L599
.L599:
	.half	3
	.word	.L602-.L601
.L601:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L602:
	.byte	5,6,7,0,5,2
	.word	.L142
	.byte	3,193,2,1,5,53,9
	.half	.L490-.L142
	.byte	3,2,1,5,19,9
	.half	.L489-.L490
	.byte	1,5,31,9
	.half	.L491-.L489
	.byte	3,2,1,5,47,9
	.half	.L289-.L491
	.byte	3,4,1,5,38,9
	.half	.L292-.L289
	.byte	3,127,1,5,9,9
	.half	.L603-.L292
	.byte	3,2,1,5,47,9
	.half	.L293-.L603
	.byte	3,127,1,5,9,9
	.half	.L298-.L293
	.byte	3,1,1,4,2,5,5,9
	.half	.L493-.L298
	.byte	3,65,1,4,1,5,29,9
	.half	.L290-.L493
	.byte	3,193,0,1,5,1,9
	.half	.L177-.L290
	.byte	3,1,0,1,1
.L600:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setPinPadDriver')
	.sect	'.debug_ranges'
.L176:
	.word	-1,.L142,0,.L177-.L142,0,0
.L297:
	.word	-1,.L142,.L292-.L142,.L293-.L142,.L298-.L142,.L290-.L142,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setPinControllerSelection')
	.sect	'.debug_info'
.L178:
	.word	412
	.half	3
	.word	.L179
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L181,.L180
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setPinControllerSelection',0,1,209,2,6,1,1,1
	.word	.L144,.L299,.L143
	.byte	4
	.byte	'port',0,1,209,2,47
	.word	.L240,.L300
	.byte	4
	.byte	'pinIndex',0,1,209,2,59
	.word	.L238,.L301
	.byte	5
	.word	.L144,.L299
	.byte	6
	.byte	'select',0,1,211,2,19
	.word	.L238,.L302
	.byte	6
	.byte	'lock',0,1,211,2,34
	.word	.L238,.L303
	.byte	6
	.byte	'portIndex',0,1,212,2,19
	.word	.L304,.L305
	.byte	5
	.word	.L306,.L75
	.byte	6
	.byte	'passwd',0,1,156,3,16
	.word	.L261,.L307
	.byte	7
	.word	.L263,.L76,.L308
	.byte	8
	.word	.L265,.L309
	.byte	8
	.word	.L267,.L310
	.byte	8
	.word	.L269,.L311
	.byte	9
	.word	.L271,.L76,.L308
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setPinControllerSelection')
	.sect	'.debug_abbrev'
.L179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setPinControllerSelection')
	.sect	'.debug_line'
.L180:
	.word	.L605-.L604
.L604:
	.half	3
	.word	.L607-.L606
.L606:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L607:
	.byte	5,29,7,0,5,2
	.word	.L144
	.byte	3,210,2,1,5,6,3,126,1,5,39,9
	.half	.L496-.L144
	.byte	3,2,1,5,6,9
	.half	.L499-.L496
	.byte	3,126,1,5,48,3,3,1,5,10,9
	.half	.L495-.L499
	.byte	3,4,1,7,9
	.half	.L608-.L495
	.byte	3,10,1,9
	.half	.L609-.L608
	.byte	3,9,1,9
	.half	.L610-.L609
	.byte	3,9,1,9
	.half	.L611-.L610
	.byte	3,10,1,9
	.half	.L612-.L611
	.byte	3,5,1,9
	.half	.L613-.L612
	.byte	3,10,1,5,26,9
	.half	.L41-.L613
	.byte	3,77,1,5,13,9
	.half	.L614-.L41
	.byte	1,5,46,7,9
	.half	.L615-.L614
	.byte	1,5,43,9
	.half	.L616-.L615
	.byte	1,5,9,7,9
	.half	.L617-.L616
	.byte	3,6,1,5,13,9
	.half	.L42-.L617
	.byte	3,4,1,5,42,7,9
	.half	.L618-.L42
	.byte	1,5,61,7,9
	.half	.L619-.L618
	.byte	1,5,80,7,9
	.half	.L620-.L619
	.byte	1,5,99,7,9
	.half	.L621-.L620
	.byte	1,5,118,7,9
	.half	.L622-.L621
	.byte	1,5,9,7,9
	.half	.L623-.L622
	.byte	3,5,1,5,26,9
	.half	.L43-.L623
	.byte	3,4,1,5,13,9
	.half	.L624-.L43
	.byte	1,5,46,7,9
	.half	.L625-.L624
	.byte	1,5,43,9
	.half	.L626-.L625
	.byte	1,5,9,7,9
	.half	.L627-.L626
	.byte	3,5,1,5,13,9
	.half	.L44-.L627
	.byte	3,4,1,5,42,7,9
	.half	.L628-.L44
	.byte	1,5,61,7,9
	.half	.L629-.L628
	.byte	1,5,9,7,9
	.half	.L630-.L629
	.byte	3,6,1,9
	.half	.L46-.L630
	.byte	3,9,1,5,20,7,9
	.half	.L45-.L46
	.byte	3,2,1,9
	.half	.L631-.L45
	.byte	3,1,1,5,9,3,3,1,5,13,9
	.half	.L47-.L631
	.byte	3,4,1,5,42,7,9
	.half	.L632-.L47
	.byte	1,5,61,7,9
	.half	.L633-.L632
	.byte	1,5,80,7,9
	.half	.L634-.L633
	.byte	1,5,102,7,9
	.half	.L635-.L634
	.byte	1,5,99,9
	.half	.L636-.L635
	.byte	1,5,122,7,9
	.half	.L637-.L636
	.byte	1,5,119,9
	.half	.L638-.L637
	.byte	1,5,142,1,7,9
	.half	.L639-.L638
	.byte	1,5,139,1,9
	.half	.L640-.L639
	.byte	1,5,20,7,9
	.half	.L49-.L640
	.byte	3,2,1,5,5,9
	.half	.L48-.L49
	.byte	3,9,1,5,60,7,9
	.half	.L306-.L48
	.byte	3,2,1,5,23,9
	.half	.L500-.L306
	.byte	1,5,38,9
	.half	.L498-.L500
	.byte	3,2,1,5,13,9
	.half	.L501-.L498
	.byte	3,2,1,5,41,7,9
	.half	.L641-.L501
	.byte	1,5,9,9
	.half	.L76-.L641
	.byte	3,5,1,4,2,5,5,9
	.half	.L497-.L76
	.byte	3,231,126,1,4,1,5,36,9
	.half	.L308-.L497
	.byte	3,155,1,1,5,1,9
	.half	.L75-.L308
	.byte	3,2,1,7,9
	.half	.L182-.L75
	.byte	0,1,1
.L605:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setPinControllerSelection')
	.sect	'.debug_ranges'
.L181:
	.word	-1,.L144,0,.L182-.L144,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.debug_info'
.L183:
	.word	343
	.half	3
	.word	.L184
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L186,.L185
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_resetPinControllerSelection',0,1,172,3,6,1,1,1
	.word	.L146,.L312,.L145
	.byte	4
	.byte	'port',0,1,172,3,49
	.word	.L240,.L313
	.byte	4
	.byte	'pinIndex',0,1,172,3,61
	.word	.L238,.L314
	.byte	5
	.word	.L146,.L312
	.byte	6
	.byte	'passwd',0,1,174,3,12
	.word	.L261,.L315
	.byte	7
	.word	.L263,.L316,.L317
	.byte	8
	.word	.L265,.L318
	.byte	8
	.word	.L267,.L319
	.byte	8
	.word	.L269,.L320
	.byte	9
	.word	.L271,.L316,.L317
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.debug_abbrev'
.L184:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.debug_line'
.L185:
	.word	.L643-.L642
.L642:
	.half	3
	.word	.L645-.L644
.L644:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L645:
	.byte	5,6,7,0,5,2
	.word	.L146
	.byte	3,171,3,1,5,56,9
	.half	.L504-.L146
	.byte	3,2,1,5,19,9
	.half	.L503-.L504
	.byte	1,5,34,9
	.half	.L507-.L503
	.byte	3,2,1,5,5,9
	.half	.L316-.L507
	.byte	3,1,1,4,2,5,39,9
	.half	.L646-.L316
	.byte	3,222,126,1,5,5,9
	.half	.L506-.L646
	.byte	3,125,1,4,1,5,32,9
	.half	.L317-.L506
	.byte	3,166,1,1,5,1,9
	.half	.L187-.L317
	.byte	3,1,0,1,1
.L643:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.debug_ranges'
.L186:
	.word	-1,.L146,0,.L187-.L146,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_getAddress')
	.sect	'.debug_info'
.L188:
	.word	265
	.half	3
	.word	.L189
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L191,.L190
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_getAddress',0,1,96,8
	.word	.L240
	.byte	1,1,1
	.word	.L120,.L321,.L119
	.byte	4
	.byte	'port',0,1,96,41
	.word	.L304,.L322
	.byte	5
	.word	.L120,.L321
	.byte	6
	.byte	'module',0,1,98,12
	.word	.L240,.L323
	.byte	6
	.byte	'i',0,1,99,12
	.word	.L238,.L324
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_getAddress')
	.sect	'.debug_abbrev'
.L189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_getAddress')
	.sect	'.debug_line'
.L190:
	.word	.L648-.L647
.L647:
	.half	3
	.word	.L650-.L649
.L649:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L650:
	.byte	5,19,7,0,5,2
	.word	.L120
	.byte	3,225,0,1,9
	.half	.L428-.L120
	.byte	3,1,1,5,61,3,2,1,5,13,9
	.half	.L12-.L428
	.byte	3,2,1,5,33,9
	.half	.L651-.L12
	.byte	1,5,36,9
	.half	.L652-.L651
	.byte	1,5,9,9
	.half	.L653-.L652
	.byte	1,5,45,7,9
	.half	.L654-.L653
	.byte	3,2,1,5,10,9
	.half	.L13-.L654
	.byte	3,3,1,5,17,9
	.half	.L11-.L13
	.byte	3,121,1,5,12,9
	.half	.L655-.L11
	.byte	1,5,49,7,9
	.half	.L656-.L655
	.byte	1,5,1,7,9
	.half	.L14-.L656
	.byte	3,11,1,7,9
	.half	.L192-.L14
	.byte	0,1,1
.L648:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_getAddress')
	.sect	'.debug_ranges'
.L191:
	.word	-1,.L120,0,.L192-.L120,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_getIndex')
	.sect	'.debug_info'
.L193:
	.word	267
	.half	3
	.word	.L194
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L196,.L195
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_getIndex',0,1,115,15
	.word	.L304
	.byte	1,1,1
	.word	.L122,.L325,.L121
	.byte	4
	.byte	'port',0,1,115,39
	.word	.L240,.L326
	.byte	5
	.word	.L122,.L325
	.byte	6
	.byte	'index',0,1,117,19
	.word	.L278,.L327
	.byte	6
	.byte	'result',0,1,118,19
	.word	.L304,.L328
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_getIndex')
	.sect	'.debug_abbrev'
.L194:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_getIndex')
	.sect	'.debug_line'
.L195:
	.word	.L658-.L657
.L657:
	.half	3
	.word	.L660-.L659
.L659:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L660:
	.byte	5,12,7,0,5,2
	.word	.L122
	.byte	3,247,0,1,5,13,3,4,1,5,48,9
	.half	.L661-.L122
	.byte	3,126,1,5,40,9
	.half	.L16-.L661
	.byte	3,2,1,5,9,9
	.half	.L662-.L16
	.byte	1,5,64,7,9
	.half	.L663-.L662
	.byte	3,2,1,5,22,9
	.half	.L664-.L663
	.byte	1,5,1,3,6,1,5,55,7,9
	.half	.L17-.L664
	.byte	3,118,1,5,48,1,5,1,7,9
	.half	.L665-.L17
	.byte	3,10,1,7,9
	.half	.L197-.L665
	.byte	0,1,1
.L658:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_getIndex')
	.sect	'.debug_ranges'
.L196:
	.word	-1,.L122,0,.L197-.L122,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setGroupModeInput')
	.sect	'.debug_info'
.L198:
	.word	476
	.half	3
	.word	.L199
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L201,.L200
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setGroupModeInput',0,1,155,1,6,1,1,1
	.word	.L128,.L329,.L127
	.byte	4
	.byte	'port',0,1,155,1,39
	.word	.L240,.L330
	.byte	4
	.byte	'pinIndex',0,1,155,1,51
	.word	.L238,.L331
	.byte	4
	.byte	'mask',0,1,155,1,68
	.word	.L261,.L332
	.byte	4
	.byte	'mode',0,1,155,1,92
	.word	.L333,.L334
	.byte	5
	.word	.L335
	.byte	6
	.byte	'i',0,1,157,1,12
	.word	.L278,.L336
	.byte	6
	.byte	'iocrVal',0,1,158,1,12
	.word	.L337,.L338
	.byte	6
	.byte	'iocrMask',0,1,159,1,12
	.word	.L337,.L339
	.byte	7
	.word	.L340,.L329
	.byte	6
	.byte	'imask',0,1,169,1,12
	.word	.L278,.L341
	.byte	5
	.word	.L342
	.byte	6
	.byte	'index',0,1,175,1,20
	.word	.L278,.L344
	.byte	6
	.byte	'shift',0,1,176,1,20
	.word	.L278,.L345
	.byte	0,8
	.word	.L263,.L346,.L25
	.byte	9
	.word	.L265,.L347
	.byte	9
	.word	.L267,.L348
	.byte	9
	.word	.L269,.L349
	.byte	10
	.word	.L271,.L346,.L25
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setGroupModeInput')
	.sect	'.debug_abbrev'
.L199:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11
	.byte	0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setGroupModeInput')
	.sect	'.debug_line'
.L200:
	.word	.L667-.L666
.L666:
	.half	3
	.word	.L669-.L668
.L668:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L669:
	.byte	5,6,7,0,5,2
	.word	.L128
	.byte	3,154,1,1,5,9,9
	.half	.L441-.L128
	.byte	3,9,1,5,14,9
	.half	.L443-.L441
	.byte	3,126,1,5,9,3,3,1,5,22,9
	.half	.L442-.L443
	.byte	3,125,1,5,30,9
	.half	.L340-.L442
	.byte	3,9,1,5,23,9
	.half	.L22-.L340
	.byte	3,2,1,5,26,9
	.half	.L670-.L22
	.byte	1,5,20,9
	.half	.L671-.L670
	.byte	1,5,9,9
	.half	.L672-.L671
	.byte	1,5,28,7,9
	.half	.L343-.L672
	.byte	3,2,1,5,21,9
	.half	.L445-.L343
	.byte	3,2,1,5,39,9
	.half	.L447-.L445
	.byte	1,5,21,9
	.half	.L673-.L447
	.byte	1,5,45,9
	.half	.L448-.L673
	.byte	1,5,29,9
	.half	.L674-.L448
	.byte	1,5,39,9
	.half	.L675-.L674
	.byte	3,1,1,5,20,9
	.half	.L676-.L675
	.byte	1,5,29,9
	.half	.L677-.L676
	.byte	1,5,33,9
	.half	.L23-.L677
	.byte	3,121,1,5,28,9
	.half	.L21-.L23
	.byte	1,5,30,9
	.half	.L678-.L21
	.byte	1,5,13,7,9
	.half	.L679-.L678
	.byte	3,14,1,9
	.half	.L680-.L679
	.byte	3,2,1,5,22,9
	.half	.L449-.L680
	.byte	3,124,1,5,21,9
	.half	.L24-.L449
	.byte	3,2,1,5,9,9
	.half	.L681-.L24
	.byte	1,5,13,7,9
	.half	.L346-.L681
	.byte	3,2,1,4,2,5,5,9
	.half	.L682-.L346
	.byte	3,209,0,1,4,1,5,25,9
	.half	.L25-.L682
	.byte	3,171,127,1,5,22,9
	.half	.L683-.L25
	.byte	1,5,1,7,9
	.half	.L684-.L683
	.byte	3,7,1,7,9
	.half	.L202-.L684
	.byte	0,1,1
.L667:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setGroupModeInput')
	.sect	'.debug_ranges'
.L201:
	.word	-1,.L128,0,.L202-.L128,0,0
.L335:
	.word	-1,.L128,0,.L329-.L128,-1,.L132,0,.L232-.L132,0,0
.L342:
	.word	-1,.L128,.L343-.L128,.L23-.L128,-1,.L130,0,.L237-.L130,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setGroupModeOutput')
	.sect	'.debug_info'
.L203:
	.word	504
	.half	3
	.word	.L204
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L206,.L205
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setGroupModeOutput',0,1,193,1,6,1,1,1
	.word	.L134,.L350,.L133
	.byte	4
	.byte	'port',0,1,193,1,40
	.word	.L240,.L351
	.byte	4
	.byte	'pinIndex',0,1,193,1,52
	.word	.L238,.L352
	.byte	4
	.byte	'mask',0,1,193,1,69
	.word	.L261,.L353
	.byte	4
	.byte	'mode',0,1,193,1,94
	.word	.L354,.L355
	.byte	4
	.byte	'index',0,1,193,1,118
	.word	.L356,.L357
	.byte	5
	.word	.L134,.L350
	.byte	6
	.byte	'i',0,1,195,1,12
	.word	.L278,.L358
	.byte	6
	.byte	'iocrVal',0,1,196,1,12
	.word	.L337,.L359
	.byte	6
	.byte	'iocrMask',0,1,197,1,12
	.word	.L337,.L360
	.byte	5
	.word	.L361,.L350
	.byte	6
	.byte	'imask',0,1,209,1,12
	.word	.L278,.L362
	.byte	5
	.word	.L363,.L29
	.byte	6
	.byte	'index',0,1,215,1,20
	.word	.L278,.L364
	.byte	6
	.byte	'shift',0,1,216,1,20
	.word	.L278,.L365
	.byte	0,7
	.word	.L263,.L366,.L31
	.byte	8
	.word	.L265,.L367
	.byte	8
	.word	.L267,.L368
	.byte	8
	.word	.L269,.L369
	.byte	9
	.word	.L271,.L366,.L31
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setGroupModeOutput')
	.sect	'.debug_abbrev'
.L204:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setGroupModeOutput')
	.sect	'.debug_line'
.L205:
	.word	.L686-.L685
.L685:
	.half	3
	.word	.L688-.L687
.L687:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L688:
	.byte	5,6,7,0,5,2
	.word	.L134
	.byte	3,192,1,1,5,9,9
	.half	.L451-.L134
	.byte	3,11,1,5,6,9
	.half	.L452-.L451
	.byte	3,117,1,5,9,3,12,1,5,14,9
	.half	.L455-.L452
	.byte	3,125,1,5,22,1,5,30,9
	.half	.L361-.L455
	.byte	3,9,1,5,23,9
	.half	.L28-.L361
	.byte	3,2,1,5,26,9
	.half	.L689-.L28
	.byte	1,5,20,9
	.half	.L690-.L689
	.byte	1,5,9,9
	.half	.L691-.L690
	.byte	1,5,28,7,9
	.half	.L363-.L691
	.byte	3,2,1,5,21,9
	.half	.L453-.L363
	.byte	3,2,1,5,39,9
	.half	.L692-.L453
	.byte	1,5,21,9
	.half	.L693-.L692
	.byte	1,5,45,9
	.half	.L694-.L693
	.byte	1,5,29,9
	.half	.L695-.L694
	.byte	1,5,38,9
	.half	.L696-.L695
	.byte	3,1,1,5,20,9
	.half	.L454-.L696
	.byte	1,5,47,9
	.half	.L697-.L454
	.byte	1,5,29,9
	.half	.L698-.L697
	.byte	1,5,33,9
	.half	.L29-.L698
	.byte	3,121,1,5,28,9
	.half	.L27-.L29
	.byte	1,5,30,9
	.half	.L699-.L27
	.byte	1,5,13,7,9
	.half	.L700-.L699
	.byte	3,14,1,9
	.half	.L701-.L700
	.byte	3,2,1,5,22,9
	.half	.L456-.L701
	.byte	3,124,1,5,21,9
	.half	.L30-.L456
	.byte	3,2,1,5,9,9
	.half	.L702-.L30
	.byte	1,5,13,7,9
	.half	.L366-.L702
	.byte	3,2,1,4,2,5,5,9
	.half	.L703-.L366
	.byte	3,41,1,4,1,5,25,9
	.half	.L31-.L703
	.byte	3,83,1,5,22,9
	.half	.L704-.L31
	.byte	1,5,1,7,9
	.half	.L705-.L704
	.byte	3,7,1,7,9
	.half	.L207-.L705
	.byte	0,1,1
.L686:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setGroupModeOutput')
	.sect	'.debug_ranges'
.L206:
	.word	-1,.L134,0,.L207-.L134,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setGroupPadDriver')
	.sect	'.debug_info'
.L208:
	.word	517
	.half	3
	.word	.L209
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L211,.L210
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setGroupPadDriver',0,1,233,1,6,1,1,1
	.word	.L136,.L370,.L135
	.byte	4
	.byte	'port',0,1,233,1,39
	.word	.L240,.L371
	.byte	4
	.byte	'pinIndex',0,1,233,1,51
	.word	.L238,.L372
	.byte	4
	.byte	'mask',0,1,233,1,68
	.word	.L261,.L373
	.byte	4
	.byte	'padDriver',0,1,233,1,92
	.word	.L286,.L374
	.byte	5
	.word	.L136,.L370
	.byte	6
	.byte	'passwd',0,1,235,1,12
	.word	.L261,.L375
	.byte	5
	.word	.L376,.L377
	.byte	6
	.byte	'i',0,1,239,1,16
	.word	.L278,.L378
	.byte	6
	.byte	'pdrVal',0,1,240,1,16
	.word	.L379,.L380
	.byte	6
	.byte	'pdrMask',0,1,241,1,16
	.word	.L379,.L381
	.byte	5
	.word	.L382,.L377
	.byte	6
	.byte	'imask',0,1,251,1,16
	.word	.L278,.L383
	.byte	5
	.word	.L384,.L35
	.byte	6
	.byte	'index',0,1,129,2,24
	.word	.L278,.L385
	.byte	6
	.byte	'shift',0,1,130,2,24
	.word	.L278,.L386
	.byte	0,7
	.word	.L263,.L387,.L37
	.byte	8
	.word	.L265,.L388
	.byte	8
	.word	.L267,.L389
	.byte	8
	.word	.L269,.L390
	.byte	9
	.word	.L271,.L387,.L37
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setGroupPadDriver')
	.sect	'.debug_abbrev'
.L209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setGroupPadDriver')
	.sect	'.debug_line'
.L210:
	.word	.L707-.L706
.L706:
	.half	3
	.word	.L709-.L708
.L708:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L709:
	.byte	5,6,7,0,5,2
	.word	.L136
	.byte	3,232,1,1,5,53,9
	.half	.L459-.L136
	.byte	3,2,1,5,19,9
	.half	.L458-.L459
	.byte	1,5,31,9
	.half	.L460-.L458
	.byte	3,2,1,5,18,9
	.half	.L376-.L460
	.byte	3,7,1,5,13,3,2,1,9
	.half	.L710-.L376
	.byte	3,1,1,5,26,9
	.half	.L711-.L710
	.byte	3,125,1,5,24,9
	.half	.L32-.L711
	.byte	3,2,1,9
	.half	.L712-.L32
	.byte	3,1,1,5,26,3,125,1,5,37,7,9
	.half	.L382-.L712
	.byte	3,7,1,5,34,3,2,1,5,27,9
	.half	.L34-.L382
	.byte	3,2,1,5,30,9
	.half	.L461-.L34
	.byte	1,5,24,9
	.half	.L462-.L461
	.byte	1,5,13,9
	.half	.L713-.L462
	.byte	1,5,32,7,9
	.half	.L384-.L713
	.byte	3,2,1,5,24,9
	.half	.L463-.L384
	.byte	3,2,1,5,35,9
	.half	.L465-.L463
	.byte	3,127,1,5,24,9
	.half	.L466-.L465
	.byte	3,1,1,5,35,9
	.half	.L464-.L466
	.byte	3,127,1,5,36,9
	.half	.L467-.L464
	.byte	3,1,1,5,42,9
	.half	.L714-.L467
	.byte	1,5,32,9
	.half	.L715-.L714
	.byte	1,5,46,9
	.half	.L716-.L715
	.byte	3,1,1,5,23,9
	.half	.L717-.L716
	.byte	1,5,32,9
	.half	.L718-.L717
	.byte	1,5,37,9
	.half	.L35-.L718
	.byte	3,121,1,5,32,9
	.half	.L33-.L35
	.byte	1,5,34,9
	.half	.L468-.L33
	.byte	1,5,17,7,9
	.half	.L469-.L468
	.byte	3,14,1,9
	.half	.L719-.L469
	.byte	3,2,1,5,26,9
	.half	.L720-.L719
	.byte	3,124,1,5,24,9
	.half	.L36-.L720
	.byte	3,2,1,5,13,9
	.half	.L721-.L36
	.byte	1,5,17,7,9
	.half	.L387-.L721
	.byte	3,2,1,4,2,5,5,9
	.half	.L722-.L387
	.byte	3,127,1,4,1,5,29,9
	.half	.L37-.L722
	.byte	3,125,1,5,26,9
	.half	.L723-.L37
	.byte	1,5,29,7,9
	.half	.L377-.L723
	.byte	3,8,1,5,1,9
	.half	.L212-.L377
	.byte	3,1,0,1,1
.L707:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setGroupPadDriver')
	.sect	'.debug_ranges'
.L211:
	.word	-1,.L136,0,.L212-.L136,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_resetESR')
	.sect	'.debug_info'
.L213:
	.word	324
	.half	3
	.word	.L214
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L216,.L215
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_resetESR',0,1,135,1,6,1,1,1
	.word	.L124,.L391,.L123
	.byte	4
	.byte	'port',0,1,135,1,30
	.word	.L240,.L392
	.byte	4
	.byte	'pinIndex',0,1,135,1,42
	.word	.L238,.L393
	.byte	5
	.word	.L124,.L391
	.byte	6
	.byte	'passwd',0,1,137,1,12
	.word	.L261,.L394
	.byte	7
	.word	.L263,.L395,.L396
	.byte	8
	.word	.L265,.L397
	.byte	8
	.word	.L267,.L398
	.byte	8
	.word	.L269,.L399
	.byte	9
	.word	.L271,.L395,.L396
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_resetESR')
	.sect	'.debug_abbrev'
.L214:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_resetESR')
	.sect	'.debug_line'
.L215:
	.word	.L725-.L724
.L724:
	.half	3
	.word	.L727-.L726
.L726:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L727:
	.byte	5,6,7,0,5,2
	.word	.L124
	.byte	3,134,1,1,5,53,9
	.half	.L431-.L124
	.byte	3,2,1,5,19,9
	.half	.L430-.L431
	.byte	1,5,31,9
	.half	.L434-.L430
	.byte	3,2,1,5,5,9
	.half	.L395-.L434
	.byte	3,1,1,4,2,5,39,9
	.half	.L728-.L395
	.byte	3,131,1,1,5,5,9
	.half	.L433-.L728
	.byte	3,125,1,4,1,5,29,9
	.half	.L396-.L433
	.byte	3,129,127,1,5,1,9
	.half	.L217-.L396
	.byte	3,1,0,1,1
.L725:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_resetESR')
	.sect	'.debug_ranges'
.L216:
	.word	-1,.L124,0,.L217-.L124,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_setESR')
	.sect	'.debug_info'
.L218:
	.word	322
	.half	3
	.word	.L219
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L221,.L220
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_setESR',0,1,145,1,6,1,1,1
	.word	.L126,.L400,.L125
	.byte	4
	.byte	'port',0,1,145,1,28
	.word	.L240,.L401
	.byte	4
	.byte	'pinIndex',0,1,145,1,40
	.word	.L238,.L402
	.byte	5
	.word	.L126,.L400
	.byte	6
	.byte	'passwd',0,1,147,1,12
	.word	.L261,.L403
	.byte	7
	.word	.L263,.L404,.L405
	.byte	8
	.word	.L265,.L406
	.byte	8
	.word	.L267,.L407
	.byte	8
	.word	.L269,.L408
	.byte	9
	.word	.L271,.L404,.L405
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_setESR')
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_setESR')
	.sect	'.debug_line'
.L220:
	.word	.L730-.L729
.L729:
	.half	3
	.word	.L732-.L731
.L731:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L732:
	.byte	5,6,7,0,5,2
	.word	.L126
	.byte	3,144,1,1,5,53,9
	.half	.L437-.L126
	.byte	3,2,1,5,19,9
	.half	.L436-.L437
	.byte	1,5,31,9
	.half	.L439-.L436
	.byte	3,2,1,5,5,9
	.half	.L404-.L439
	.byte	3,1,1,4,2,9
	.half	.L438-.L404
	.byte	3,246,0,1,4,1,5,29,9
	.half	.L405-.L438
	.byte	3,139,127,1,5,1,9
	.half	.L222-.L405
	.byte	3,1,0,1,1
.L730:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_setESR')
	.sect	'.debug_ranges'
.L221:
	.word	-1,.L126,0,.L222-.L126,0,0
	.sdecl	'.debug_info',debug,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.debug_info'
.L223:
	.word	433
	.half	3
	.word	.L224
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L226,.L225
	.byte	2
	.word	.L149
	.byte	3
	.byte	'IfxPort_modifyPinControllerSelection',0,1,182,3,6,1,1,1
	.word	.L148,.L409,.L147
	.byte	4
	.byte	'port',0,1,182,3,50
	.word	.L240,.L410
	.byte	4
	.byte	'pinIndex',0,1,182,3,62
	.word	.L238,.L411
	.byte	4
	.byte	'mode',0,1,182,3,80
	.word	.L238,.L412
	.byte	5
	.word	.L148,.L409
	.byte	6
	.byte	'select',0,1,184,3,19
	.word	.L238,.L413
	.byte	6
	.byte	'lock',0,1,184,3,34
	.word	.L238,.L414
	.byte	6
	.byte	'portIndex',0,1,185,3,19
	.word	.L304,.L415
	.byte	5
	.word	.L416,.L113
	.byte	6
	.byte	'passwd',0,1,252,3,16
	.word	.L261,.L417
	.byte	7
	.word	.L263,.L114,.L418
	.byte	8
	.word	.L265,.L419
	.byte	8
	.word	.L267,.L420
	.byte	8
	.word	.L269,.L421
	.byte	9
	.word	.L271,.L114,.L418
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.debug_abbrev'
.L224:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.debug_line'
.L225:
	.word	.L734-.L733
.L733:
	.half	3
	.word	.L736-.L735
.L735:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0,0
.L736:
	.byte	5,29,7,0,5,2
	.word	.L148
	.byte	3,183,3,1,5,6,3,126,1,5,39,9
	.half	.L510-.L148
	.byte	3,2,1,5,6,9
	.half	.L512-.L510
	.byte	3,126,1,5,48,3,3,1,5,10,9
	.half	.L509-.L512
	.byte	3,4,1,7,9
	.half	.L737-.L509
	.byte	3,9,1,9
	.half	.L738-.L737
	.byte	3,9,1,9
	.half	.L739-.L738
	.byte	3,8,1,9
	.half	.L740-.L739
	.byte	3,9,1,9
	.half	.L741-.L740
	.byte	3,5,1,9
	.half	.L742-.L741
	.byte	3,9,1,5,26,9
	.half	.L77-.L742
	.byte	3,81,1,5,13,9
	.half	.L514-.L77
	.byte	1,5,46,7,9
	.half	.L515-.L514
	.byte	1,5,43,9
	.half	.L516-.L515
	.byte	1,5,9,7,9
	.half	.L517-.L516
	.byte	3,5,1,5,13,9
	.half	.L78-.L517
	.byte	3,4,1,5,42,7,9
	.half	.L743-.L78
	.byte	1,5,61,7,9
	.half	.L744-.L743
	.byte	1,5,80,7,9
	.half	.L745-.L744
	.byte	1,5,99,7,9
	.half	.L746-.L745
	.byte	1,5,118,7,9
	.half	.L747-.L746
	.byte	1,5,9,7,9
	.half	.L518-.L747
	.byte	3,5,1,5,26,9
	.half	.L79-.L518
	.byte	3,4,1,5,13,9
	.half	.L519-.L79
	.byte	1,5,46,7,9
	.half	.L520-.L519
	.byte	1,5,43,9
	.half	.L521-.L520
	.byte	1,5,66,7,9
	.half	.L522-.L521
	.byte	1,5,63,9
	.half	.L523-.L522
	.byte	1,5,9,7,9
	.half	.L524-.L523
	.byte	3,5,1,5,13,9
	.half	.L80-.L524
	.byte	3,3,1,5,42,7,9
	.half	.L748-.L80
	.byte	1,5,61,7,9
	.half	.L749-.L748
	.byte	1,5,9,7,9
	.half	.L525-.L749
	.byte	3,5,1,9
	.half	.L82-.L525
	.byte	3,9,1,5,20,7,9
	.half	.L81-.L82
	.byte	3,2,1,9
	.half	.L750-.L81
	.byte	3,1,1,5,9,3,3,1,5,13,9
	.half	.L83-.L750
	.byte	3,3,1,5,42,7,9
	.half	.L751-.L83
	.byte	1,5,61,7,9
	.half	.L752-.L751
	.byte	1,5,80,7,9
	.half	.L753-.L752
	.byte	1,5,102,7,9
	.half	.L526-.L753
	.byte	1,5,99,9
	.half	.L527-.L526
	.byte	1,5,122,7,9
	.half	.L528-.L527
	.byte	1,5,119,9
	.half	.L529-.L528
	.byte	1,5,142,1,7,9
	.half	.L530-.L529
	.byte	1,5,139,1,9
	.half	.L531-.L530
	.byte	1,5,162,1,7,9
	.half	.L532-.L531
	.byte	1,5,159,1,9
	.half	.L533-.L532
	.byte	1,5,20,7,9
	.half	.L85-.L533
	.byte	3,2,1,5,5,9
	.half	.L84-.L85
	.byte	3,8,1,5,60,7,9
	.half	.L416-.L84
	.byte	3,2,1,5,23,9
	.half	.L513-.L416
	.byte	1,5,38,9
	.half	.L535-.L513
	.byte	3,2,1,5,13,9
	.half	.L534-.L535
	.byte	3,2,1,5,41,7,9
	.half	.L754-.L534
	.byte	1,5,9,9
	.half	.L114-.L754
	.byte	3,5,1,4,2,5,5,9
	.half	.L536-.L114
	.byte	3,135,126,1,4,1,5,36,9
	.half	.L418-.L536
	.byte	3,251,1,1,5,1,9
	.half	.L113-.L418
	.byte	3,2,1,7,9
	.half	.L227-.L113
	.byte	0,1,1
.L734:
	.sdecl	'.debug_ranges',debug,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.debug_ranges'
.L226:
	.word	-1,.L148,0,.L227-.L148,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L228:
	.word	191
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L231,.L230
	.byte	2
	.word	.L149
	.byte	3
	.byte	'.cocofun_3',0,1,155,1,6,1
	.word	.L132,.L232,.L131
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L230:
	.word	.L756-.L755
.L755:
	.half	3
	.word	.L758-.L757
.L757:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L758:
	.byte	5,22,7,0,5,2
	.word	.L132
	.byte	3,161,1,1,5,21,9
	.half	.L20-.L132
	.byte	3,2,1,9
	.half	.L759-.L20
	.byte	3,1,1,5,22,3,125,1,5,33,7,9
	.half	.L444-.L759
	.byte	3,7,1,9
	.half	.L232-.L444
	.byte	0,1,1,5,22,0,5,2
	.word	.L132
	.byte	3,201,1,1,5,21,9
	.half	.L20-.L132
	.byte	3,2,1,9
	.half	.L759-.L20
	.byte	3,1,1,5,22,3,125,1,5,33,7,9
	.half	.L444-.L759
	.byte	3,7,1,3,88,1,7,9
	.half	.L232-.L444
	.byte	0,1,1
.L756:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L231:
	.word	-1,.L132,0,.L232-.L132,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L233:
	.word	191
	.half	3
	.word	.L234
	.byte	4,1
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_Ethernet\\Debug\\',0,12,1
	.word	.L236,.L235
	.byte	2
	.word	.L149
	.byte	3
	.byte	'.cocofun_4',0,1,155,1,6,1
	.word	.L130,.L237,.L129
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L234:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L235:
	.word	.L761-.L760
.L760:
	.half	3
	.word	.L763-.L762
.L762:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\4_McHal\\Tricore\\Port\\Std\\IfxPort.c',0,0,0,0,0
.L763:
	.byte	5,28,7,0,5,2
	.word	.L130
	.byte	3,174,1,1,5,31,9
	.half	.L446-.L130
	.byte	3,1,1,9
	.half	.L237-.L446
	.byte	0,1,1,5,28,0,5,2
	.word	.L130
	.byte	3,214,1,1,5,31,9
	.half	.L446-.L130
	.byte	3,1,1,9
	.half	.L450-.L446
	.byte	3,88,1,7,9
	.half	.L237-.L450
	.byte	0,1,1
.L761:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L236:
	.word	-1,.L130,0,.L237-.L130,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L131:
	.word	-1,.L132,0,.L232-.L132
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L129:
	.word	-1,.L130,0,.L237-.L130
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_disableEmergencyStop')
	.sect	'.debug_loc'
.L115:
	.word	-1,.L116,0,.L239-.L116
	.half	2
	.byte	138,0
	.word	0,0
.L242:
	.word	-1,.L116,0,.L422-.L116
	.half	1
	.byte	84
	.word	.L3-.L116,.L239-.L116
	.half	1
	.byte	84
	.word	0,0
.L241:
	.word	-1,.L116,0,.L422-.L116
	.half	1
	.byte	100
	.word	.L3-.L116,.L239-.L116
	.half	1
	.byte	100
	.word	0,0
.L244:
	.word	0,0
.L245:
	.word	-1,.L116,.L423-.L116,.L422-.L116
	.half	1
	.byte	82
	.word	.L4-.L116,.L239-.L116
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_enableEmergencyStop')
	.sect	'.debug_loc'
.L117:
	.word	-1,.L118,0,.L246-.L118
	.half	2
	.byte	138,0
	.word	0,0
.L248:
	.word	-1,.L118,0,.L7-.L118
	.half	1
	.byte	84
	.word	.L424-.L118,.L246-.L118
	.half	1
	.byte	88
	.word	0,0
.L247:
	.word	-1,.L118,0,.L7-.L118
	.half	1
	.byte	100
	.word	.L425-.L118,.L246-.L118
	.half	1
	.byte	111
	.word	.L427-.L118,.L426-.L118
	.half	1
	.byte	100
	.word	0,0
.L249:
	.word	0,0
.L250:
	.word	-1,.L118,.L425-.L118,.L426-.L118
	.half	1
	.byte	82
	.word	.L8-.L118,.L246-.L118
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_getAddress')
	.sect	'.debug_loc'
.L119:
	.word	-1,.L120,0,.L321-.L120
	.half	2
	.byte	138,0
	.word	0,0
.L324:
	.word	-1,.L120,.L12-.L120,.L321-.L120
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L323:
	.word	-1,.L120,.L428-.L120,.L321-.L120
	.half	1
	.byte	98
	.word	0,0
.L322:
	.word	-1,.L120,0,.L321-.L120
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_getIndex')
	.sect	'.debug_loc'
.L121:
	.word	-1,.L122,0,.L325-.L122
	.half	2
	.byte	138,0
	.word	0,0
.L327:
	.word	0,0
.L326:
	.word	-1,.L122,0,.L325-.L122
	.half	1
	.byte	100
	.word	0,0
.L328:
	.word	-1,.L122,.L429-.L122,.L325-.L122
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.debug_loc'
.L147:
	.word	-1,.L148,0,.L409-.L148
	.half	2
	.byte	138,0
	.word	0,0
.L419:
	.word	0,0
.L421:
	.word	0,0
.L414:
	.word	-1,.L148,.L512-.L148,.L409-.L148
	.half	1
	.byte	91
	.word	0,0
.L420:
	.word	0,0
.L412:
	.word	-1,.L148,0,.L509-.L148
	.half	1
	.byte	85
	.word	.L537-.L148,.L536-.L148
	.half	1
	.byte	89
	.word	0,0
.L417:
	.word	-1,.L148,.L513-.L148,.L534-.L148
	.half	1
	.byte	82
	.word	.L535-.L148,.L113-.L148
	.half	1
	.byte	95
	.word	.L538-.L148,.L113-.L148
	.half	1
	.byte	84
	.word	0,0
.L411:
	.word	-1,.L148,0,.L509-.L148
	.half	1
	.byte	84
	.word	.L514-.L148,.L515-.L148
	.half	1
	.byte	88
	.word	.L516-.L148,.L517-.L148
	.half	1
	.byte	88
	.word	.L78-.L148,.L518-.L148
	.half	1
	.byte	88
	.word	.L519-.L148,.L520-.L148
	.half	1
	.byte	88
	.word	.L521-.L148,.L522-.L148
	.half	1
	.byte	88
	.word	.L523-.L148,.L524-.L148
	.half	1
	.byte	88
	.word	.L80-.L148,.L525-.L148
	.half	1
	.byte	88
	.word	.L82-.L148,.L81-.L148
	.half	1
	.byte	88
	.word	.L83-.L148,.L526-.L148
	.half	1
	.byte	88
	.word	.L527-.L148,.L528-.L148
	.half	1
	.byte	88
	.word	.L529-.L148,.L530-.L148
	.half	1
	.byte	88
	.word	.L531-.L148,.L532-.L148
	.half	1
	.byte	88
	.word	.L533-.L148,.L85-.L148
	.half	1
	.byte	88
	.word	.L511-.L148,.L536-.L148
	.half	1
	.byte	88
	.word	0,0
.L410:
	.word	-1,.L148,0,.L509-.L148
	.half	1
	.byte	100
	.word	.L510-.L148,.L511-.L148
	.half	1
	.byte	111
	.word	.L113-.L148,.L409-.L148
	.half	1
	.byte	111
	.word	0,0
.L415:
	.word	-1,.L148,.L509-.L148,.L513-.L148
	.half	1
	.byte	82
	.word	.L113-.L148,.L409-.L148
	.half	1
	.byte	82
	.word	0,0
.L413:
	.word	-1,.L148,.L510-.L148,.L409-.L148
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_resetESR')
	.sect	'.debug_loc'
.L123:
	.word	-1,.L124,0,.L391-.L124
	.half	2
	.byte	138,0
	.word	0,0
.L397:
	.word	0,0
.L399:
	.word	0,0
.L398:
	.word	0,0
.L394:
	.word	-1,.L124,.L430-.L124,.L395-.L124
	.half	1
	.byte	82
	.word	.L434-.L124,.L391-.L124
	.half	1
	.byte	88
	.word	.L435-.L124,.L391-.L124
	.half	1
	.byte	84
	.word	0,0
.L393:
	.word	-1,.L124,0,.L430-.L124
	.half	1
	.byte	84
	.word	.L430-.L124,.L433-.L124
	.half	1
	.byte	95
	.word	0,0
.L392:
	.word	-1,.L124,0,.L430-.L124
	.half	1
	.byte	100
	.word	.L431-.L124,.L432-.L124
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.debug_loc'
.L145:
	.word	-1,.L146,0,.L312-.L146
	.half	2
	.byte	138,0
	.word	0,0
.L318:
	.word	0,0
.L320:
	.word	0,0
.L319:
	.word	0,0
.L315:
	.word	-1,.L146,.L503-.L146,.L316-.L146
	.half	1
	.byte	82
	.word	.L507-.L146,.L312-.L146
	.half	1
	.byte	88
	.word	.L508-.L146,.L312-.L146
	.half	1
	.byte	84
	.word	0,0
.L314:
	.word	-1,.L146,0,.L503-.L146
	.half	1
	.byte	84
	.word	.L503-.L146,.L506-.L146
	.half	1
	.byte	95
	.word	0,0
.L313:
	.word	-1,.L146,0,.L503-.L146
	.half	1
	.byte	100
	.word	.L504-.L146,.L505-.L146
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setESR')
	.sect	'.debug_loc'
.L125:
	.word	-1,.L126,0,.L400-.L126
	.half	2
	.byte	138,0
	.word	0,0
.L406:
	.word	0,0
.L408:
	.word	0,0
.L407:
	.word	0,0
.L403:
	.word	-1,.L126,.L436-.L126,.L404-.L126
	.half	1
	.byte	82
	.word	.L439-.L126,.L400-.L126
	.half	1
	.byte	88
	.word	.L440-.L126,.L400-.L126
	.half	1
	.byte	84
	.word	0,0
.L402:
	.word	-1,.L126,0,.L436-.L126
	.half	1
	.byte	84
	.word	.L436-.L126,.L400-.L126
	.half	1
	.byte	95
	.word	0,0
.L401:
	.word	-1,.L126,0,.L436-.L126
	.half	1
	.byte	100
	.word	.L437-.L126,.L438-.L126
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setGroupModeInput')
	.sect	'.debug_loc'
.L127:
	.word	-1,.L128,0,.L441-.L128
	.half	2
	.byte	138,0
	.word	.L441-.L128,.L329-.L128
	.half	2
	.byte	138,32
	.word	.L329-.L128,.L329-.L128
	.half	2
	.byte	138,0
	.word	0,0
.L347:
	.word	0,0
.L349:
	.word	0,0
.L336:
	.word	0,0
.L341:
	.word	-1,.L128,.L444-.L128,.L232-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	.L22-.L128,.L445-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	.L130-.L128,.L237-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	.L447-.L128,.L24-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L344:
	.word	-1,.L128,.L446-.L128,.L237-.L128
	.half	1
	.byte	81
	.word	.L447-.L128,.L448-.L128
	.half	1
	.byte	81
	.word	0,0
.L339:
	.word	-1,.L128,0,.L442-.L128
	.half	2
	.byte	145,112
	.word	.L132-.L128,.L232-.L128
	.half	2
	.byte	145,112
	.word	.L22-.L128,.L445-.L128
	.half	2
	.byte	145,112
	.word	.L130-.L128,.L237-.L128
	.half	2
	.byte	145,112
	.word	.L447-.L128,.L329-.L128
	.half	2
	.byte	145,112
	.word	0,0
.L338:
	.word	-1,.L128,0,.L442-.L128
	.half	2
	.byte	145,96
	.word	.L132-.L128,.L232-.L128
	.half	2
	.byte	145,96
	.word	.L22-.L128,.L445-.L128
	.half	2
	.byte	145,96
	.word	.L130-.L128,.L237-.L128
	.half	2
	.byte	145,96
	.word	.L447-.L128,.L329-.L128
	.half	2
	.byte	145,96
	.word	0,0
.L332:
	.word	-1,.L128,0,.L442-.L128
	.half	1
	.byte	85
	.word	.L443-.L128,.L442-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	.L132-.L128,.L232-.L128
	.half	1
	.byte	85
	.word	.L132-.L128,.L232-.L128
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L348:
	.word	0,0
.L334:
	.word	-1,.L128,0,.L442-.L128
	.half	1
	.byte	86
	.word	.L132-.L128,.L232-.L128
	.half	1
	.byte	86
	.word	.L22-.L128,.L445-.L128
	.half	1
	.byte	86
	.word	.L130-.L128,.L237-.L128
	.half	1
	.byte	86
	.word	.L447-.L128,.L329-.L128
	.half	1
	.byte	86
	.word	0,0
.L331:
	.word	-1,.L128,0,.L442-.L128
	.half	1
	.byte	84
	.word	.L441-.L128,.L442-.L128
	.half	1
	.byte	87
	.word	.L132-.L128,.L232-.L128
	.half	1
	.byte	84
	.word	.L132-.L128,.L232-.L128
	.half	1
	.byte	87
	.word	.L22-.L128,.L445-.L128
	.half	1
	.byte	87
	.word	.L130-.L128,.L237-.L128
	.half	1
	.byte	87
	.word	.L447-.L128,.L329-.L128
	.half	1
	.byte	87
	.word	0,0
.L330:
	.word	-1,.L128,0,.L442-.L128
	.half	1
	.byte	100
	.word	.L132-.L128,.L232-.L128
	.half	1
	.byte	100
	.word	.L22-.L128,.L445-.L128
	.half	1
	.byte	100
	.word	.L130-.L128,.L237-.L128
	.half	1
	.byte	100
	.word	.L447-.L128,.L449-.L128
	.half	1
	.byte	100
	.word	0,0
.L345:
	.word	-1,.L128,.L450-.L128,.L237-.L128
	.half	1
	.byte	84
	.word	.L447-.L128,.L23-.L128
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setGroupModeOutput')
	.sect	'.debug_loc'
.L133:
	.word	-1,.L134,0,.L451-.L134
	.half	2
	.byte	138,0
	.word	.L451-.L134,.L350-.L134
	.half	2
	.byte	138,32
	.word	.L350-.L134,.L350-.L134
	.half	2
	.byte	138,0
	.word	0,0
.L367:
	.word	0,0
.L369:
	.word	0,0
.L358:
	.word	0,0
.L362:
	.word	-1,.L134,.L444-.L134,.L232-.L134
	.half	5
	.byte	144,32,157,32,0
	.word	.L130-.L134,.L237-.L134
	.half	5
	.byte	144,32,157,32,0
	.word	.L361-.L134,.L30-.L134
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L357:
	.word	-1,.L134,0,.L451-.L134
	.half	1
	.byte	87
	.word	0,0
.L364:
	.word	-1,.L134,.L446-.L134,.L237-.L134
	.half	1
	.byte	81
	.word	.L453-.L134,.L454-.L134
	.half	1
	.byte	81
	.word	0,0
.L360:
	.word	-1,.L134,.L20-.L134,.L232-.L134
	.half	2
	.byte	145,112
	.word	.L130-.L134,.L237-.L134
	.half	2
	.byte	145,112
	.word	0,.L350-.L134
	.half	2
	.byte	145,112
	.word	0,0
.L359:
	.word	-1,.L134,.L20-.L134,.L232-.L134
	.half	2
	.byte	145,96
	.word	.L130-.L134,.L237-.L134
	.half	2
	.byte	145,96
	.word	0,.L350-.L134
	.half	2
	.byte	145,96
	.word	0,0
.L353:
	.word	-1,.L134,.L452-.L134,.L361-.L134
	.half	5
	.byte	144,32,157,32,0
	.word	.L20-.L134,.L232-.L134
	.half	5
	.byte	144,32,157,32,0
	.word	.L20-.L134,.L232-.L134
	.half	1
	.byte	85
	.word	0,.L28-.L134
	.half	1
	.byte	85
	.word	0,0
.L368:
	.word	0,0
.L355:
	.word	-1,.L134,.L20-.L134,.L232-.L134
	.half	1
	.byte	88
	.word	.L20-.L134,.L232-.L134
	.half	1
	.byte	86
	.word	0,.L28-.L134
	.half	1
	.byte	86
	.word	.L130-.L134,.L237-.L134
	.half	1
	.byte	88
	.word	.L455-.L134,.L350-.L134
	.half	1
	.byte	88
	.word	0,0
.L352:
	.word	-1,.L134,.L20-.L134,.L232-.L134
	.half	1
	.byte	84
	.word	.L20-.L134,.L232-.L134
	.half	1
	.byte	87
	.word	0,.L28-.L134
	.half	1
	.byte	84
	.word	.L130-.L134,.L237-.L134
	.half	1
	.byte	87
	.word	.L451-.L134,.L350-.L134
	.half	1
	.byte	87
	.word	0,0
.L351:
	.word	-1,.L134,.L20-.L134,.L232-.L134
	.half	1
	.byte	100
	.word	.L130-.L134,.L237-.L134
	.half	1
	.byte	100
	.word	0,.L456-.L134
	.half	1
	.byte	100
	.word	0,0
.L365:
	.word	-1,.L134,.L450-.L134,.L237-.L134
	.half	1
	.byte	84
	.word	.L453-.L134,.L29-.L134
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setGroupPadDriver')
	.sect	'.debug_loc'
.L135:
	.word	-1,.L136,0,.L457-.L136
	.half	2
	.byte	138,0
	.word	.L457-.L136,.L370-.L136
	.half	2
	.byte	138,16
	.word	.L370-.L136,.L370-.L136
	.half	2
	.byte	138,0
	.word	0,0
.L388:
	.word	0,0
.L390:
	.word	0,0
.L378:
	.word	0,0
.L383:
	.word	-1,.L136,.L34-.L136,.L370-.L136
	.half	1
	.byte	88
	.word	0,0
.L385:
	.word	-1,.L136,.L463-.L136,.L464-.L136
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L373:
	.word	-1,.L136,0,.L458-.L136
	.half	1
	.byte	85
	.word	.L382-.L136,.L34-.L136
	.half	1
	.byte	88
	.word	0,0
.L389:
	.word	0,0
.L374:
	.word	-1,.L136,0,.L458-.L136
	.half	1
	.byte	86
	.word	.L457-.L136,.L370-.L136
	.half	1
	.byte	90
	.word	0,0
.L375:
	.word	-1,.L136,.L458-.L136,.L376-.L136
	.half	1
	.byte	82
	.word	.L460-.L136,.L370-.L136
	.half	1
	.byte	91
	.word	.L470-.L136,.L370-.L136
	.half	1
	.byte	84
	.word	0,0
.L381:
	.word	-1,.L136,0,.L370-.L136
	.half	2
	.byte	145,120
	.word	0,0
.L380:
	.word	-1,.L136,0,.L370-.L136
	.half	2
	.byte	145,112
	.word	0,0
.L372:
	.word	-1,.L136,0,.L458-.L136
	.half	1
	.byte	84
	.word	.L382-.L136,.L34-.L136
	.half	1
	.byte	89
	.word	.L461-.L136,.L462-.L136
	.half	1
	.byte	89
	.word	.L384-.L136,.L463-.L136
	.half	1
	.byte	89
	.word	.L465-.L136,.L466-.L136
	.half	1
	.byte	89
	.word	.L35-.L136,.L33-.L136
	.half	1
	.byte	89
	.word	.L468-.L136,.L469-.L136
	.half	1
	.byte	89
	.word	0,0
.L371:
	.word	-1,.L136,0,.L458-.L136
	.half	1
	.byte	100
	.word	.L459-.L136,.L370-.L136
	.half	1
	.byte	108
	.word	0,0
.L386:
	.word	-1,.L136,.L467-.L136,.L35-.L136
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setPinControllerSelection')
	.sect	'.debug_loc'
.L143:
	.word	-1,.L144,0,.L299-.L144
	.half	2
	.byte	138,0
	.word	0,0
.L309:
	.word	0,0
.L311:
	.word	0,0
.L303:
	.word	-1,.L144,.L499-.L144,.L299-.L144
	.half	1
	.byte	89
	.word	0,0
.L310:
	.word	0,0
.L307:
	.word	-1,.L144,.L500-.L144,.L501-.L144
	.half	1
	.byte	82
	.word	.L498-.L144,.L75-.L144
	.half	1
	.byte	88
	.word	.L502-.L144,.L75-.L144
	.half	1
	.byte	84
	.word	0,0
.L301:
	.word	-1,.L144,0,.L495-.L144
	.half	1
	.byte	84
	.word	.L495-.L144,.L299-.L144
	.half	1
	.byte	95
	.word	0,0
.L300:
	.word	-1,.L144,0,.L495-.L144
	.half	1
	.byte	100
	.word	.L496-.L144,.L497-.L144
	.half	1
	.byte	111
	.word	.L75-.L144,.L299-.L144
	.half	1
	.byte	111
	.word	0,0
.L305:
	.word	-1,.L144,.L495-.L144,.L500-.L144
	.half	1
	.byte	82
	.word	.L75-.L144,.L299-.L144
	.half	1
	.byte	82
	.word	0,0
.L302:
	.word	-1,.L144,.L496-.L144,.L498-.L144
	.half	1
	.byte	88
	.word	.L75-.L144,.L299-.L144
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setPinMode')
	.sect	'.debug_loc'
.L137:
	.word	-1,.L138,0,.L251-.L138
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	0,0
.L270:
	.word	0,0
.L257:
	.word	-1,.L138,.L472-.L138,.L473-.L138
	.half	1
	.byte	111
	.word	0,0
.L258:
	.word	-1,.L138,.L475-.L138,.L251-.L138
	.half	1
	.byte	90
	.word	0,0
.L268:
	.word	0,0
.L255:
	.word	-1,.L138,0,.L471-.L138
	.half	1
	.byte	85
	.word	.L480-.L138,.L481-.L138
	.half	1
	.byte	89
	.word	0,0
.L262:
	.word	-1,.L138,.L471-.L138,.L476-.L138
	.half	1
	.byte	82
	.word	.L477-.L138,.L38-.L138
	.half	1
	.byte	95
	.word	0,0
.L253:
	.word	-1,.L138,0,.L471-.L138
	.half	1
	.byte	84
	.word	.L474-.L138,.L475-.L138
	.half	1
	.byte	88
	.word	.L478-.L138,.L479-.L138
	.half	1
	.byte	88
	.word	0,0
.L252:
	.word	-1,.L138,0,.L471-.L138
	.half	1
	.byte	100
	.word	0,0
.L259:
	.word	-1,.L138,.L260-.L138,.L251-.L138
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setPinModeLVDS')
	.sect	'.debug_loc'
.L139:
	.word	-1,.L140,0,.L272-.L140
	.half	2
	.byte	138,0
	.word	0,0
.L281:
	.word	-1,.L140,.L484-.L140,.L272-.L140
	.half	1
	.byte	108
	.word	0,0
.L279:
	.word	-1,.L140,.L484-.L140,.L485-.L140
	.half	1
	.byte	95
	.word	0,0
.L277:
	.word	-1,.L140,0,.L482-.L140
	.half	1
	.byte	101
	.word	.L483-.L140,.L272-.L140
	.half	1
	.byte	111
	.word	0,0
.L282:
	.word	-1,.L140,.L482-.L140,.L486-.L140
	.half	1
	.byte	82
	.word	.L487-.L140,.L272-.L140
	.half	1
	.byte	89
	.word	.L488-.L140,.L272-.L140
	.half	1
	.byte	84
	.word	0,0
.L274:
	.word	-1,.L140,0,.L482-.L140
	.half	1
	.byte	84
	.word	0,0
.L275:
	.word	-1,.L140,0,.L482-.L140
	.half	1
	.byte	85
	.word	.L483-.L140,.L272-.L140
	.half	1
	.byte	88
	.word	0,0
.L273:
	.word	-1,.L140,0,.L482-.L140
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxPort_setPinPadDriver')
	.sect	'.debug_loc'
.L141:
	.word	-1,.L142,0,.L283-.L142
	.half	2
	.byte	138,0
	.word	0,0
.L294:
	.word	0,0
.L296:
	.word	0,0
.L295:
	.word	0,0
.L287:
	.word	-1,.L142,0,.L489-.L142
	.half	1
	.byte	85
	.word	.L492-.L142,.L493-.L142
	.half	1
	.byte	89
	.word	0,0
.L288:
	.word	-1,.L142,.L489-.L142,.L289-.L142
	.half	1
	.byte	82
	.word	.L491-.L142,.L283-.L142
	.half	1
	.byte	90
	.word	.L494-.L142,.L283-.L142
	.half	1
	.byte	84
	.word	0,0
.L285:
	.word	-1,.L142,0,.L489-.L142
	.half	1
	.byte	84
	.word	.L289-.L142,.L292-.L142
	.half	1
	.byte	88
	.word	0,0
.L284:
	.word	-1,.L142,0,.L489-.L142
	.half	1
	.byte	100
	.word	.L490-.L142,.L293-.L142
	.half	1
	.byte	111
	.word	0,0
.L291:
	.word	-1,.L142,.L298-.L142,.L283-.L142
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L764:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxPort_disableEmergencyStop')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L116,.L239-.L116
	.sdecl	'.debug_frame',debug,cluster('IfxPort_enableEmergencyStop')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L118,.L246-.L118
	.sdecl	'.debug_frame',debug,cluster('IfxPort_getAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L764,.L120,.L321-.L120
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxPort_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L764,.L122,.L325-.L122
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxPort_resetESR')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L124,.L391-.L124
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setESR')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L126,.L400-.L126
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setGroupModeInput')
	.sect	'.debug_frame'
	.word	40
	.word	.L764,.L128,.L329-.L128
	.byte	8,19,8,22,8,23,4
	.word	(.L441-.L128)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L329-.L441)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setGroupModeOutput')
	.sect	'.debug_frame'
	.word	40
	.word	.L764,.L134,.L350-.L134
	.byte	8,19,8,22,8,23,4
	.word	(.L451-.L134)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L350-.L451)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setGroupPadDriver')
	.sect	'.debug_frame'
	.word	36
	.word	.L764,.L136,.L370-.L136
	.byte	4
	.word	(.L457-.L136)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L370-.L457)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setPinMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L138,.L251-.L138
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setPinModeLVDS')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L140,.L272-.L140
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setPinPadDriver')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L142,.L283-.L142
	.sdecl	'.debug_frame',debug,cluster('IfxPort_setPinControllerSelection')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L144,.L299-.L144
	.sdecl	'.debug_frame',debug,cluster('IfxPort_resetPinControllerSelection')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L146,.L312-.L146
	.sdecl	'.debug_frame',debug,cluster('IfxPort_modifyPinControllerSelection')
	.sect	'.debug_frame'
	.word	12
	.word	.L764,.L148,.L409-.L148
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L765:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L765,.L130,.L237-.L130
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L765,.L132,.L232-.L132
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
